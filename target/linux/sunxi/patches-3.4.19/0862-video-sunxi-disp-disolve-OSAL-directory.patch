From 85189f616fdc933e1e047990f42ac185a4b7561b Mon Sep 17 00:00:00 2001
From: Luc Verhaegen <libv@codethink.co.uk>
Date: Sat, 27 Oct 2012 00:36:14 +0200
Subject: [PATCH 862/944] video:sunxi:disp: disolve OSAL directory

Remove OSAL.h and move OSAL_Clock.[ch] and OSAL_Pin.[ch] to the top
level.

Signed-off-by: Luc Verhaegen <libv@codethink.co.uk>
---
 drivers/video/sunxi/disp/Makefile          |   2 +-
 drivers/video/sunxi/disp/OSAL/OSAL.h       |  31 ---
 drivers/video/sunxi/disp/OSAL/OSAL_Clock.c | 356 -----------------------------
 drivers/video/sunxi/disp/OSAL/OSAL_Clock.h |  35 ---
 drivers/video/sunxi/disp/OSAL/OSAL_Pin.c   | 139 -----------
 drivers/video/sunxi/disp/OSAL/OSAL_Pin.h   |  47 ----
 drivers/video/sunxi/disp/OSAL_Clock.c      | 356 +++++++++++++++++++++++++++++
 drivers/video/sunxi/disp/OSAL_Clock.h      |  34 +++
 drivers/video/sunxi/disp/OSAL_Pin.c        | 139 +++++++++++
 drivers/video/sunxi/disp/OSAL_Pin.h        |  44 ++++
 drivers/video/sunxi/disp/bsp_display.h     |   1 -
 drivers/video/sunxi/disp/disp_clk.c        |   2 +-
 drivers/video/sunxi/disp/disp_iep.c        |   1 +
 drivers/video/sunxi/disp/disp_lcd.c        |   1 +
 drivers/video/sunxi/disp/disp_tv.c         |   1 +
 15 files changed, 578 insertions(+), 611 deletions(-)
 delete mode 100644 drivers/video/sunxi/disp/OSAL/OSAL.h
 delete mode 100644 drivers/video/sunxi/disp/OSAL/OSAL_Clock.c
 delete mode 100644 drivers/video/sunxi/disp/OSAL/OSAL_Clock.h
 delete mode 100644 drivers/video/sunxi/disp/OSAL/OSAL_Pin.c
 delete mode 100644 drivers/video/sunxi/disp/OSAL/OSAL_Pin.h
 create mode 100644 drivers/video/sunxi/disp/OSAL_Clock.c
 create mode 100644 drivers/video/sunxi/disp/OSAL_Clock.h
 create mode 100644 drivers/video/sunxi/disp/OSAL_Pin.c
 create mode 100644 drivers/video/sunxi/disp/OSAL_Pin.h

diff --git a/drivers/video/sunxi/disp/Makefile b/drivers/video/sunxi/disp/Makefile
index 4e527cc..5fbb4d2 100644
--- a/drivers/video/sunxi/disp/Makefile
+++ b/drivers/video/sunxi/disp/Makefile
@@ -2,7 +2,7 @@ obj-$(CONFIG_FB_SUNXI) += disp.o
 
 disp-objs :=  dev_disp.o dev_fb.o
 
-disp-objs += OSAL/OSAL_Clock.o OSAL/OSAL_Pin.o
+disp-objs += OSAL_Clock.o OSAL_Pin.o
 
 disp-objs += de_be.o de_fe.o de_hwc.o\
 	de_layer.o de_lcdc.o de_tvec.o\
diff --git a/drivers/video/sunxi/disp/OSAL/OSAL.h b/drivers/video/sunxi/disp/OSAL/OSAL.h
deleted file mode 100644
index 25035c2..0000000
--- a/drivers/video/sunxi/disp/OSAL/OSAL.h
+++ /dev/null
@@ -1,31 +0,0 @@
-/*
- * (C) Copyright 2007-2012
- * Allwinner Technology Co., Ltd. <www.allwinnertech.com>
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License as
- * published by the Free Software Foundation; either version 2 of
- * the License, or (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.	 See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
- * MA 02111-1307 USA
- */
-
-#ifndef  __OSAL_H__
-#define  __OSAL_H__
-
-#include "../bsp_display.h"
-
-#include  "OSAL_Clock.h"
-#include  "OSAL_Pin.h"
-
-#endif   //__OSAL_H__
-
-
diff --git a/drivers/video/sunxi/disp/OSAL/OSAL_Clock.c b/drivers/video/sunxi/disp/OSAL/OSAL_Clock.c
deleted file mode 100644
index 355e7d8..0000000
--- a/drivers/video/sunxi/disp/OSAL/OSAL_Clock.c
+++ /dev/null
@@ -1,356 +0,0 @@
-/*
- * (C) Copyright 2007-2012
- * Allwinner Technology Co., Ltd. <www.allwinnertech.com>
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License as
- * published by the Free Software Foundation; either version 2 of
- * the License, or (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.	 See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
- * MA 02111-1307 USA
- */
-
-#include "OSAL.h"
-#include "OSAL_Clock.h"
-
-static char* _sysClkName[AW_SYS_CLK_CNT] =
-{
-    "none",//0
-
-    "losc",// 1
-    "hosc",// 2
-
-    "core_pll",// 3
-    "audio_pll",// 4
-    "audio_pllx8",// 5
-    "video_pll0",// 6
-    "video_pll0x2",// 7
-    "ve_pll",// 8
-    "sdram_pll",// 9
-    "sdram_pll_m",// 10
-    "sdram_pll_p",// 11
-    "sata_pll",// 12
-    "video_pll1",// 13
-    "video_pll1x2",// 14
-    "200m_pll",// 15
-
-    "cpu",// 16
-    "axi",// 17
-    "ahb",// 18
-    "apb",// 19
-    "apb1",// 20
-
-    "sata_pll_m",
-    "sata_pll_2",
-};
-
-static char* _modClkName[AW_MOD_CLK_CNT] =
-{
-    "none",
-
-    "nfc",
-    "msc",
-    "sdc0",
-    "sdc1",
-    "sdc2",
-    "sdc3",
-    "ts",
-    "ss",
-    "spi0",
-    "spi1",
-    "spi2",
-    "pata",
-    "ir0",
-    "ir1",
-    "i2s",
-    "ac97",
-    "spdif",
-    "key_pad",
-    "sata",
-    "usb_phy",
-    "usb_phy0",
-    "usb_phy1",
-    "usb_phy2",
-    "usb_ohci0",
-    "usb_ohci1",
-    "com",
-    "spi3",
-    "de_image0",
-    "de_image1",
-    "de_scale0",
-    "de_scale1",
-    "de_mix",
-    "lcd0_ch0",
-    "lcd1_ch0",
-    "csi_isp",
-    "tvd",
-    "lcd0_ch1_s1",
-    "lcd0_ch1_s2",
-    "lcd1_ch1_s1",
-    "lcd1_ch1_s2",
-    "csi0",
-    "csi1",
-    "ve",
-    "audio_codec",
-    "avs",
-    "ace",
-    "lvds",
-    "hdmi",
-    "mali",
-    "twi0",
-    "twi1",
-    "twi2",
-    "can",
-    "scr",
-    "ps0",
-    "ps1",
-    "uart0",
-    "uart1",
-    "uart2",
-    "uart3",
-    "uart4",
-    "uart5",
-    "uart6",
-    "uart7",
-
-    /* clock gating for hang to AXI bus */
-    "axi_dram",
-
-    /* clock gating for hang to AHB bus */
-    "ahb_usb0",
-    "ahb_usb1",
-    "ahb_usb2",
-    "ahb_ss",
-    "ahb_dma",
-    "ahb_bist",
-    "ahb_sdc0",
-    "ahb_sdc1",
-    "ahb_sdc2",
-    "ahb_sdc3",
-    "ahb_msc",
-    "ahb_nfc",
-    "ahb_sdramc",
-    "ahb_ace",
-    "ahb_emac",
-    "ahb_ts",
-    "ahb_spi0",
-    "ahb_spi1",
-    "ahb_spi2",
-    "ahb_spi3",
-    "ahb_pata",
-    "ahb_sata",
-    "ahb_com",
-    "ahb_ve",
-    "ahb_tvd",
-    "ahb_tve0",
-    "ahb_tve1",
-    "ahb_lcd0",
-    "ahb_lcd1",
-    "ahb_csi0",
-    "ahb_csi1",
-    "ahb_hdmi",
-    "ahb_de_image0",
-    "ahb_de_image1",
-    "ahb_de_scale0",
-    "ahb_de_scale1",
-    "ahb_de_mix",
-    "ahb_mali",
-
-    /* clock gating for hang APB bus */
-    "apb_audio_codec",
-    "apb_spdif",
-    "apb_ac97",
-    "apb_i2s",
-    "apb_pio",
-    "apb_ir0",
-    "apb_ir1",
-    "apb_key_pad",
-    "apb_twi0",
-    "apb_twi1",
-    "apb_twi2",
-    "apb_can",
-    "apb_scr",
-    "apb_ps0",
-    "apb_ps1",
-    "apb_uart0",
-    "apb_uart1",
-    "apb_uart2",
-    "apb_uart3",
-    "apb_uart4",
-    "apb_uart5",
-    "apb_uart6",
-    "apb_uart7",
-
-    /* clock gating for access dram */
-    "sdram_ve",
-    "sdram_csi0",
-    "sdram_csi1",
-    "sdram_ts",
-    "sdram_tvd",
-    "sdram_tve0",
-    "sdram_tve1",
-    "sdram_de_scale0",
-    "sdram_de_scale1",
-    "sdram_de_image0",
-    "sdram_de_image1",
-    "sdram_de_mix",
-    "sdram_ace",
-    "ahb_ehci1",
-    "ahb_ohci1",
-
-    "iep",
-    "ahb_iep",
-    "sdram_iep",
-};
-
-__s32 OSAL_CCMU_SetSrcFreq( __u32 nSclkNo, __u32 nFreq )
-{
-    struct clk* hSysClk = NULL;
-    s32 retCode = -1;
-
-    hSysClk = clk_get(NULL, _sysClkName[nSclkNo]);
-
-    __inf("OSAL_CCMU_SetSrcFreq<%s,%d>\n",hSysClk->clk->name, nFreq);
-
-    if(NULL == hSysClk){
-        __wrn("Fail to get handle for system clock [%d].\n", nSclkNo);
-        return -1;
-    }
-    if(nFreq == clk_get_rate(hSysClk)){
-       // __inf("Sys clk[%d] freq is alreay %d, not need to set.\n", nSclkNo, nFreq);
-        clk_put(hSysClk);
-        return 0;
-    }
-    retCode = clk_set_rate(hSysClk, nFreq);
-    if(-1 == retCode){
-        __wrn("Fail to set nFreq[%d] for sys clk[%d].\n", nFreq, nSclkNo);
-        clk_put(hSysClk);
-        return retCode;
-    }
-    clk_put(hSysClk);
-    hSysClk = NULL;
-
-    return retCode;
-}
-
-__u32 OSAL_CCMU_GetSrcFreq( __u32 nSclkNo )
-{
-    struct clk* hSysClk = NULL;
-    u32 nFreq = 0;
-
-    hSysClk = clk_get(NULL, _sysClkName[nSclkNo]);
-    if(NULL == hSysClk){
-        __wrn("Fail to get handle for system clock [%d].\n", nSclkNo);
-        return -1;
-    }
-    nFreq = clk_get_rate(hSysClk);
-    clk_put(hSysClk);
-    hSysClk = NULL;
-
-    return nFreq;
-}
-
-__hdle OSAL_CCMU_OpenMclk( __s32 nMclkNo )
-{
-    struct clk* hModClk = NULL;
-
-    hModClk = clk_get(NULL, _modClkName[nMclkNo]);
-
-    return (__hdle)hModClk;
-}
-
-__s32 OSAL_CCMU_CloseMclk( __hdle hMclk )
-{
-    struct clk* hModClk = (struct clk*)hMclk;
-
-    clk_put(hModClk);
-
-    return 0;
-}
-
-__s32 OSAL_CCMU_SetMclkSrc( __hdle hMclk, __u32 nSclkNo )
-{
-    struct clk* hSysClk = NULL;
-    struct clk* hModClk = (struct clk*)hMclk;
-    s32 retCode = -1;
-
-    hSysClk = clk_get(NULL, _sysClkName[nSclkNo]);
-
-    __inf("OSAL_CCMU_SetMclkSrc<%s,%s>\n",hModClk->clk->name,hSysClk->clk->name);
-
-    if(NULL == hSysClk){
-        __wrn("Fail to get handle for system clock [%d].\n", nSclkNo);
-        return -1;
-    }
-    if(clk_get_parent(hModClk) == hSysClk){
-        __inf("Parent is alreay %d, not need to set.\n", nSclkNo);
-        clk_put(hSysClk);
-        return 0;
-    }
-    retCode = clk_set_parent(hModClk, hSysClk);
-    if(-1 == retCode){
-        __wrn("Fail to set parent for clk.\n");
-        clk_put(hSysClk);
-        return -1;
-    }
-
-    clk_put(hSysClk);
-
-    return retCode;
-}
-
-__s32 OSAL_CCMU_SetMclkDiv( __hdle hMclk, __s32 nDiv )
-{
-    struct clk* hModClk     = (struct clk*)hMclk;
-    struct clk* hParentClk  = clk_get_parent(hModClk);
-    u32         srcRate     = clk_get_rate(hParentClk);
-
-    __inf("OSAL_CCMU_SetMclkDiv<p:%s,m:%s,%d>\n", hParentClk->clk->name, hModClk->clk->name, nDiv);
-
-    if(nDiv == 0){
-    	return -1;
-    }
-
-    return clk_set_rate(hModClk, srcRate/nDiv);
-}
-
-__s32 OSAL_CCMU_MclkOnOff( __hdle hMclk, __s32 bOnOff )
-{
-    struct clk* hModClk = (struct clk*)hMclk;
-    __s32 ret = 0;
-
-    __inf("OSAL_CCMU_MclkOnOff<%s,%d>\n",hModClk->clk->name,bOnOff);
-
-    if(bOnOff)
-    {
-        if(!hModClk->enable)
-        {
-            ret = clk_enable(hModClk);
-        }
-    }
-    else
-    {
-        while(hModClk->enable)
-        {
-            clk_disable(hModClk);
-        }
-    }
-    return ret;
-}
-
-__s32 OSAL_CCMU_MclkReset(__hdle hMclk, __s32 bReset)
-{
-    struct clk* hModClk = (struct clk*)hMclk;
-
-    __inf("OSAL_CCMU_MclkReset<%s,%d>\n",hModClk->clk->name,bReset);
-
-    return clk_reset(hModClk, bReset);
-}
diff --git a/drivers/video/sunxi/disp/OSAL/OSAL_Clock.h b/drivers/video/sunxi/disp/OSAL/OSAL_Clock.h
deleted file mode 100644
index 913a357..0000000
--- a/drivers/video/sunxi/disp/OSAL/OSAL_Clock.h
+++ /dev/null
@@ -1,35 +0,0 @@
-/*
- * (C) Copyright 2007-2012
- * Allwinner Technology Co., Ltd. <www.allwinnertech.com>
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License as
- * published by the Free Software Foundation; either version 2 of
- * the License, or (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.	 See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
- * MA 02111-1307 USA
- */
-
-#ifndef  __OSAL_CLOCK_H__
-#define  __OSAL_CLOCK_H__
-
-__s32 OSAL_CCMU_SetSrcFreq(__u32 nSclkNo, __u32 nFreq);
-__u32 OSAL_CCMU_GetSrcFreq(__u32 nSclkNo);
-__hdle OSAL_CCMU_OpenMclk(__s32 nMclkNo);
-__s32  OSAL_CCMU_CloseMclk(__hdle hMclk);
-__s32 OSAL_CCMU_SetMclkSrc(__hdle hMclk, __u32 nSclkNo);
-__s32 OSAL_CCMU_SetMclkDiv(__hdle hMclk, __s32 nDiv);
-__s32 OSAL_CCMU_MclkOnOff(__hdle hMclk, __s32 bOnOff);
-
-__s32 OSAL_CCMU_MclkReset(__hdle hMclk, __s32 bReset);
-
-#endif   /* __OSAL_CLOCK_H__ */
-
diff --git a/drivers/video/sunxi/disp/OSAL/OSAL_Pin.c b/drivers/video/sunxi/disp/OSAL/OSAL_Pin.c
deleted file mode 100644
index e467488..0000000
--- a/drivers/video/sunxi/disp/OSAL/OSAL_Pin.c
+++ /dev/null
@@ -1,139 +0,0 @@
-/*
- * (C) Copyright 2007-2012
- * Allwinner Technology Co., Ltd. <www.allwinnertech.com>
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License as
- * published by the Free Software Foundation; either version 2 of
- * the License, or (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.	 See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
- * MA 02111-1307 USA
- */
-
-#include "OSAL_Pin.h"
-#ifdef CONFIG_ARCH_SUN5I
-#include "../../../../power/axp_power/axp-gpio.h"
-#endif
-
-__hdle OSAL_GPIO_Request(user_gpio_set_t *gpio_list, __u32 group_count_max)
-{
-    __inf("OSAL_GPIO_Request, port:%d, port_num:%d, mul_sel:%d, pull:%d, drv_level:%d, data:%d\n", gpio_list->port, gpio_list->port_num, gpio_list->mul_sel, gpio_list->pull, gpio_list->drv_level, gpio_list->data);
-
-#ifdef CONFIG_ARCH_SUN5I
-    if(gpio_list->port == 0xffff)
-    {
-        if(gpio_list->mul_sel == 0 || gpio_list->mul_sel == 1)
-        {
-            axp_gpio_set_io(gpio_list->port_num, gpio_list->mul_sel);
-            axp_gpio_set_value(gpio_list->port_num, gpio_list->data);
-            return 100+gpio_list->port_num;
-        }
-        else
-        {
-            return 0;
-        }
-    }
-    else
-#endif
-    {
-        return gpio_request(gpio_list, group_count_max);
-    }
-}
-
-__hdle OSAL_GPIO_Request_Ex(char *main_name, const char *sub_name)
-{
-    return gpio_request_ex(main_name, sub_name);
-}
-
-//if_release_to_default_status:
-    //如果是0或者1，表示释放后的GPIO处于输入状态，输入状状态不会导致外部电平的错误。
-    //如果是2，表示释放后的GPIO状态不变，即释放的时候不管理当前GPIO的硬件寄存器。
-__s32 OSAL_GPIO_Release(__hdle p_handler, __s32 if_release_to_default_status)
-{
-    //__inf("OSAL_GPIO_Release\n");
-#ifdef CONFIG_ARCH_SUN5I
-    if(p_handler < 200 && p_handler >=100)
-    {
-        return 0;
-    }
-    else
-#endif
-    {
-        return gpio_release(p_handler, if_release_to_default_status);
-    }
-}
-
-__s32 OSAL_GPIO_DevGetAllPins_Status(unsigned p_handler, user_gpio_set_t *gpio_status, unsigned gpio_count_max, unsigned if_get_from_hardware)
-{
-    return gpio_get_all_pin_status(p_handler, gpio_status, gpio_count_max, if_get_from_hardware);
-}
-
-__s32 OSAL_GPIO_DevGetONEPins_Status(unsigned p_handler, user_gpio_set_t *gpio_status,const char *gpio_name,unsigned if_get_from_hardware)
-{
-    return gpio_get_one_pin_status(p_handler, gpio_status,gpio_name,if_get_from_hardware);
-}
-
-__s32 OSAL_GPIO_DevSetONEPin_Status(u32 p_handler, user_gpio_set_t *gpio_status, const char *gpio_name, __u32 if_set_to_current_input_status)
-{
-    return gpio_set_one_pin_status(p_handler, gpio_status, gpio_name, if_set_to_current_input_status);
-}
-
-__s32 OSAL_GPIO_DevSetONEPIN_IO_STATUS(u32 p_handler, __u32 if_set_to_output_status, const char *gpio_name)
-{
-#ifdef CONFIG_ARCH_SUN5I
-    if(p_handler < 200 && p_handler >=100)
-    {
-        return axp_gpio_set_io(p_handler-100, if_set_to_output_status);
-    }
-    else
-#endif
-    {
-        return gpio_set_one_pin_io_status(p_handler, if_set_to_output_status, gpio_name);
-    }
-}
-
-__s32 OSAL_GPIO_DevSetONEPIN_PULL_STATUS(u32 p_handler, __u32 set_pull_status, const char *gpio_name)
-{
-    return gpio_set_one_pin_pull(p_handler, set_pull_status, gpio_name);
-}
-
-__s32 OSAL_GPIO_DevREAD_ONEPIN_DATA(u32 p_handler, const char *gpio_name)
-{
-#ifdef CONFIG_ARCH_SUN5I
-    if(p_handler < 200 && p_handler >=100)
-    {
-        int value;
-
-        axp_gpio_get_value(p_handler-100, &value);
-        return value;
-    }
-    else
-#endif
-    {
-        return gpio_read_one_pin_value(p_handler, gpio_name);
-    }
-}
-
-__s32 OSAL_GPIO_DevWRITE_ONEPIN_DATA(u32 p_handler, __u32 value_to_gpio, const char *gpio_name)
-{
-#ifdef CONFIG_ARCH_SUN5I
-    if((p_handler<200) && (p_handler>=100))
-    {
-        return axp_gpio_set_value(p_handler-100, value_to_gpio);
-    }
-    else
-#endif
-    {
-        return gpio_write_one_pin_value(p_handler, value_to_gpio, gpio_name);
-    }
-}
-
-
diff --git a/drivers/video/sunxi/disp/OSAL/OSAL_Pin.h b/drivers/video/sunxi/disp/OSAL/OSAL_Pin.h
deleted file mode 100644
index b1be8ec..0000000
--- a/drivers/video/sunxi/disp/OSAL/OSAL_Pin.h
+++ /dev/null
@@ -1,47 +0,0 @@
-/*
- * (C) Copyright 2007-2012
- * Allwinner Technology Co., Ltd. <www.allwinnertech.com>
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License as
- * published by the Free Software Foundation; either version 2 of
- * the License, or (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.	 See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
- * MA 02111-1307 USA
- */
-
-#ifndef  __OSAL_PIN_H__
-#define  __OSAL_PIN_H__
-
-#include "OSAL.h"
-
-__hdle OSAL_GPIO_Request(user_gpio_set_t *gpio_list, __u32 group_count_max);
-
-__hdle OSAL_GPIO_Request_Ex(char *main_name, const char *sub_name);
-
-__s32 OSAL_GPIO_Release(__hdle p_handler, __s32 if_release_to_default_status);
-
-__s32 OSAL_GPIO_DevGetAllPins_Status(unsigned p_handler, user_gpio_set_t *gpio_status, unsigned gpio_count_max, unsigned if_get_from_hardware);
-
-__s32 OSAL_GPIO_DevGetONEPins_Status(unsigned p_handler, user_gpio_set_t *gpio_status,const char *gpio_name,unsigned if_get_from_hardware);
-
-__s32 OSAL_GPIO_DevSetONEPin_Status(u32 p_handler, user_gpio_set_t *gpio_status, const char *gpio_name, __u32 if_set_to_current_input_status);
-
-__s32 OSAL_GPIO_DevSetONEPIN_IO_STATUS(u32 p_handler, __u32 if_set_to_output_status, const char *gpio_name);
-
-__s32 OSAL_GPIO_DevSetONEPIN_PULL_STATUS(u32 p_handler, __u32 set_pull_status, const char *gpio_name);
-
-__s32 OSAL_GPIO_DevREAD_ONEPIN_DATA(u32 p_handler, const char *gpio_name);
-
-__s32 OSAL_GPIO_DevWRITE_ONEPIN_DATA(u32 p_handler, __u32 value_to_gpio, const char *gpio_name);
-
-#endif   //__OSAL_PIN_H__
-
diff --git a/drivers/video/sunxi/disp/OSAL_Clock.c b/drivers/video/sunxi/disp/OSAL_Clock.c
new file mode 100644
index 0000000..dcf6202
--- /dev/null
+++ b/drivers/video/sunxi/disp/OSAL_Clock.c
@@ -0,0 +1,356 @@
+/*
+ * (C) Copyright 2007-2012
+ * Allwinner Technology Co., Ltd. <www.allwinnertech.com>
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.	 See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+
+#include "bsp_display.h"
+#include "OSAL_Clock.h"
+
+static char* _sysClkName[AW_SYS_CLK_CNT] =
+{
+    "none",//0
+
+    "losc",// 1
+    "hosc",// 2
+
+    "core_pll",// 3
+    "audio_pll",// 4
+    "audio_pllx8",// 5
+    "video_pll0",// 6
+    "video_pll0x2",// 7
+    "ve_pll",// 8
+    "sdram_pll",// 9
+    "sdram_pll_m",// 10
+    "sdram_pll_p",// 11
+    "sata_pll",// 12
+    "video_pll1",// 13
+    "video_pll1x2",// 14
+    "200m_pll",// 15
+
+    "cpu",// 16
+    "axi",// 17
+    "ahb",// 18
+    "apb",// 19
+    "apb1",// 20
+
+    "sata_pll_m",
+    "sata_pll_2",
+};
+
+static char* _modClkName[AW_MOD_CLK_CNT] =
+{
+    "none",
+
+    "nfc",
+    "msc",
+    "sdc0",
+    "sdc1",
+    "sdc2",
+    "sdc3",
+    "ts",
+    "ss",
+    "spi0",
+    "spi1",
+    "spi2",
+    "pata",
+    "ir0",
+    "ir1",
+    "i2s",
+    "ac97",
+    "spdif",
+    "key_pad",
+    "sata",
+    "usb_phy",
+    "usb_phy0",
+    "usb_phy1",
+    "usb_phy2",
+    "usb_ohci0",
+    "usb_ohci1",
+    "com",
+    "spi3",
+    "de_image0",
+    "de_image1",
+    "de_scale0",
+    "de_scale1",
+    "de_mix",
+    "lcd0_ch0",
+    "lcd1_ch0",
+    "csi_isp",
+    "tvd",
+    "lcd0_ch1_s1",
+    "lcd0_ch1_s2",
+    "lcd1_ch1_s1",
+    "lcd1_ch1_s2",
+    "csi0",
+    "csi1",
+    "ve",
+    "audio_codec",
+    "avs",
+    "ace",
+    "lvds",
+    "hdmi",
+    "mali",
+    "twi0",
+    "twi1",
+    "twi2",
+    "can",
+    "scr",
+    "ps0",
+    "ps1",
+    "uart0",
+    "uart1",
+    "uart2",
+    "uart3",
+    "uart4",
+    "uart5",
+    "uart6",
+    "uart7",
+
+    /* clock gating for hang to AXI bus */
+    "axi_dram",
+
+    /* clock gating for hang to AHB bus */
+    "ahb_usb0",
+    "ahb_usb1",
+    "ahb_usb2",
+    "ahb_ss",
+    "ahb_dma",
+    "ahb_bist",
+    "ahb_sdc0",
+    "ahb_sdc1",
+    "ahb_sdc2",
+    "ahb_sdc3",
+    "ahb_msc",
+    "ahb_nfc",
+    "ahb_sdramc",
+    "ahb_ace",
+    "ahb_emac",
+    "ahb_ts",
+    "ahb_spi0",
+    "ahb_spi1",
+    "ahb_spi2",
+    "ahb_spi3",
+    "ahb_pata",
+    "ahb_sata",
+    "ahb_com",
+    "ahb_ve",
+    "ahb_tvd",
+    "ahb_tve0",
+    "ahb_tve1",
+    "ahb_lcd0",
+    "ahb_lcd1",
+    "ahb_csi0",
+    "ahb_csi1",
+    "ahb_hdmi",
+    "ahb_de_image0",
+    "ahb_de_image1",
+    "ahb_de_scale0",
+    "ahb_de_scale1",
+    "ahb_de_mix",
+    "ahb_mali",
+
+    /* clock gating for hang APB bus */
+    "apb_audio_codec",
+    "apb_spdif",
+    "apb_ac97",
+    "apb_i2s",
+    "apb_pio",
+    "apb_ir0",
+    "apb_ir1",
+    "apb_key_pad",
+    "apb_twi0",
+    "apb_twi1",
+    "apb_twi2",
+    "apb_can",
+    "apb_scr",
+    "apb_ps0",
+    "apb_ps1",
+    "apb_uart0",
+    "apb_uart1",
+    "apb_uart2",
+    "apb_uart3",
+    "apb_uart4",
+    "apb_uart5",
+    "apb_uart6",
+    "apb_uart7",
+
+    /* clock gating for access dram */
+    "sdram_ve",
+    "sdram_csi0",
+    "sdram_csi1",
+    "sdram_ts",
+    "sdram_tvd",
+    "sdram_tve0",
+    "sdram_tve1",
+    "sdram_de_scale0",
+    "sdram_de_scale1",
+    "sdram_de_image0",
+    "sdram_de_image1",
+    "sdram_de_mix",
+    "sdram_ace",
+    "ahb_ehci1",
+    "ahb_ohci1",
+
+    "iep",
+    "ahb_iep",
+    "sdram_iep",
+};
+
+__s32 OSAL_CCMU_SetSrcFreq( __u32 nSclkNo, __u32 nFreq )
+{
+    struct clk* hSysClk = NULL;
+    s32 retCode = -1;
+
+    hSysClk = clk_get(NULL, _sysClkName[nSclkNo]);
+
+    __inf("OSAL_CCMU_SetSrcFreq<%s,%d>\n",hSysClk->clk->name, nFreq);
+
+    if(NULL == hSysClk){
+        __wrn("Fail to get handle for system clock [%d].\n", nSclkNo);
+        return -1;
+    }
+    if(nFreq == clk_get_rate(hSysClk)){
+       // __inf("Sys clk[%d] freq is alreay %d, not need to set.\n", nSclkNo, nFreq);
+        clk_put(hSysClk);
+        return 0;
+    }
+    retCode = clk_set_rate(hSysClk, nFreq);
+    if(-1 == retCode){
+        __wrn("Fail to set nFreq[%d] for sys clk[%d].\n", nFreq, nSclkNo);
+        clk_put(hSysClk);
+        return retCode;
+    }
+    clk_put(hSysClk);
+    hSysClk = NULL;
+
+    return retCode;
+}
+
+__u32 OSAL_CCMU_GetSrcFreq( __u32 nSclkNo )
+{
+    struct clk* hSysClk = NULL;
+    u32 nFreq = 0;
+
+    hSysClk = clk_get(NULL, _sysClkName[nSclkNo]);
+    if(NULL == hSysClk){
+        __wrn("Fail to get handle for system clock [%d].\n", nSclkNo);
+        return -1;
+    }
+    nFreq = clk_get_rate(hSysClk);
+    clk_put(hSysClk);
+    hSysClk = NULL;
+
+    return nFreq;
+}
+
+__hdle OSAL_CCMU_OpenMclk( __s32 nMclkNo )
+{
+    struct clk* hModClk = NULL;
+
+    hModClk = clk_get(NULL, _modClkName[nMclkNo]);
+
+    return (__hdle)hModClk;
+}
+
+__s32 OSAL_CCMU_CloseMclk( __hdle hMclk )
+{
+    struct clk* hModClk = (struct clk*)hMclk;
+
+    clk_put(hModClk);
+
+    return 0;
+}
+
+__s32 OSAL_CCMU_SetMclkSrc( __hdle hMclk, __u32 nSclkNo )
+{
+    struct clk* hSysClk = NULL;
+    struct clk* hModClk = (struct clk*)hMclk;
+    s32 retCode = -1;
+
+    hSysClk = clk_get(NULL, _sysClkName[nSclkNo]);
+
+    __inf("OSAL_CCMU_SetMclkSrc<%s,%s>\n",hModClk->clk->name,hSysClk->clk->name);
+
+    if(NULL == hSysClk){
+        __wrn("Fail to get handle for system clock [%d].\n", nSclkNo);
+        return -1;
+    }
+    if(clk_get_parent(hModClk) == hSysClk){
+        __inf("Parent is alreay %d, not need to set.\n", nSclkNo);
+        clk_put(hSysClk);
+        return 0;
+    }
+    retCode = clk_set_parent(hModClk, hSysClk);
+    if(-1 == retCode){
+        __wrn("Fail to set parent for clk.\n");
+        clk_put(hSysClk);
+        return -1;
+    }
+
+    clk_put(hSysClk);
+
+    return retCode;
+}
+
+__s32 OSAL_CCMU_SetMclkDiv( __hdle hMclk, __s32 nDiv )
+{
+    struct clk* hModClk     = (struct clk*)hMclk;
+    struct clk* hParentClk  = clk_get_parent(hModClk);
+    u32         srcRate     = clk_get_rate(hParentClk);
+
+    __inf("OSAL_CCMU_SetMclkDiv<p:%s,m:%s,%d>\n", hParentClk->clk->name, hModClk->clk->name, nDiv);
+
+    if(nDiv == 0){
+	return -1;
+    }
+
+    return clk_set_rate(hModClk, srcRate/nDiv);
+}
+
+__s32 OSAL_CCMU_MclkOnOff( __hdle hMclk, __s32 bOnOff )
+{
+    struct clk* hModClk = (struct clk*)hMclk;
+    __s32 ret = 0;
+
+    __inf("OSAL_CCMU_MclkOnOff<%s,%d>\n",hModClk->clk->name,bOnOff);
+
+    if(bOnOff)
+    {
+        if(!hModClk->enable)
+        {
+            ret = clk_enable(hModClk);
+        }
+    }
+    else
+    {
+        while(hModClk->enable)
+        {
+            clk_disable(hModClk);
+        }
+    }
+    return ret;
+}
+
+__s32 OSAL_CCMU_MclkReset(__hdle hMclk, __s32 bReset)
+{
+    struct clk* hModClk = (struct clk*)hMclk;
+
+    __inf("OSAL_CCMU_MclkReset<%s,%d>\n",hModClk->clk->name,bReset);
+
+    return clk_reset(hModClk, bReset);
+}
diff --git a/drivers/video/sunxi/disp/OSAL_Clock.h b/drivers/video/sunxi/disp/OSAL_Clock.h
new file mode 100644
index 0000000..ea66f50b
--- /dev/null
+++ b/drivers/video/sunxi/disp/OSAL_Clock.h
@@ -0,0 +1,34 @@
+/*
+ * (C) Copyright 2007-2012
+ * Allwinner Technology Co., Ltd. <www.allwinnertech.com>
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.	 See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+
+#ifndef  __OSAL_CLOCK_H__
+#define  __OSAL_CLOCK_H__
+
+__s32 OSAL_CCMU_SetSrcFreq(__u32 nSclkNo, __u32 nFreq);
+__u32 OSAL_CCMU_GetSrcFreq(__u32 nSclkNo);
+__hdle OSAL_CCMU_OpenMclk(__s32 nMclkNo);
+__s32  OSAL_CCMU_CloseMclk(__hdle hMclk);
+__s32 OSAL_CCMU_SetMclkSrc(__hdle hMclk, __u32 nSclkNo);
+__s32 OSAL_CCMU_SetMclkDiv(__hdle hMclk, __s32 nDiv);
+__s32 OSAL_CCMU_MclkOnOff(__hdle hMclk, __s32 bOnOff);
+
+__s32 OSAL_CCMU_MclkReset(__hdle hMclk, __s32 bReset);
+
+#endif   /* __OSAL_CLOCK_H__ */
diff --git a/drivers/video/sunxi/disp/OSAL_Pin.c b/drivers/video/sunxi/disp/OSAL_Pin.c
new file mode 100644
index 0000000..29400a3
--- /dev/null
+++ b/drivers/video/sunxi/disp/OSAL_Pin.c
@@ -0,0 +1,139 @@
+/*
+ * (C) Copyright 2007-2012
+ * Allwinner Technology Co., Ltd. <www.allwinnertech.com>
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.	 See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+
+#include "bsp_display.h"
+#include "OSAL_Pin.h"
+
+#ifdef CONFIG_ARCH_SUN5I
+#include "../../../../power/axp_power/axp-gpio.h"
+#endif
+
+__hdle OSAL_GPIO_Request(user_gpio_set_t *gpio_list, __u32 group_count_max)
+{
+    __inf("OSAL_GPIO_Request, port:%d, port_num:%d, mul_sel:%d, pull:%d, drv_level:%d, data:%d\n", gpio_list->port, gpio_list->port_num, gpio_list->mul_sel, gpio_list->pull, gpio_list->drv_level, gpio_list->data);
+
+#ifdef CONFIG_ARCH_SUN5I
+    if(gpio_list->port == 0xffff)
+    {
+        if(gpio_list->mul_sel == 0 || gpio_list->mul_sel == 1)
+        {
+            axp_gpio_set_io(gpio_list->port_num, gpio_list->mul_sel);
+            axp_gpio_set_value(gpio_list->port_num, gpio_list->data);
+            return 100+gpio_list->port_num;
+        }
+        else
+        {
+            return 0;
+        }
+    }
+    else
+#endif
+    {
+        return gpio_request(gpio_list, group_count_max);
+    }
+}
+
+__hdle OSAL_GPIO_Request_Ex(char *main_name, const char *sub_name)
+{
+    return gpio_request_ex(main_name, sub_name);
+}
+
+//if_release_to_default_status:
+    //如果是0或者1，表示释放后的GPIO处于输入状态，输入状状态不会导致外部电平的错误。
+    //如果是2，表示释放后的GPIO状态不变，即释放的时候不管理当前GPIO的硬件寄存器。
+__s32 OSAL_GPIO_Release(__hdle p_handler, __s32 if_release_to_default_status)
+{
+    //__inf("OSAL_GPIO_Release\n");
+#ifdef CONFIG_ARCH_SUN5I
+    if(p_handler < 200 && p_handler >=100)
+    {
+        return 0;
+    }
+    else
+#endif
+    {
+        return gpio_release(p_handler, if_release_to_default_status);
+    }
+}
+
+__s32 OSAL_GPIO_DevGetAllPins_Status(unsigned p_handler, user_gpio_set_t *gpio_status, unsigned gpio_count_max, unsigned if_get_from_hardware)
+{
+    return gpio_get_all_pin_status(p_handler, gpio_status, gpio_count_max, if_get_from_hardware);
+}
+
+__s32 OSAL_GPIO_DevGetONEPins_Status(unsigned p_handler, user_gpio_set_t *gpio_status,const char *gpio_name,unsigned if_get_from_hardware)
+{
+    return gpio_get_one_pin_status(p_handler, gpio_status,gpio_name,if_get_from_hardware);
+}
+
+__s32 OSAL_GPIO_DevSetONEPin_Status(u32 p_handler, user_gpio_set_t *gpio_status, const char *gpio_name, __u32 if_set_to_current_input_status)
+{
+    return gpio_set_one_pin_status(p_handler, gpio_status, gpio_name, if_set_to_current_input_status);
+}
+
+__s32 OSAL_GPIO_DevSetONEPIN_IO_STATUS(u32 p_handler, __u32 if_set_to_output_status, const char *gpio_name)
+{
+#ifdef CONFIG_ARCH_SUN5I
+    if(p_handler < 200 && p_handler >=100)
+    {
+        return axp_gpio_set_io(p_handler-100, if_set_to_output_status);
+    }
+    else
+#endif
+    {
+        return gpio_set_one_pin_io_status(p_handler, if_set_to_output_status, gpio_name);
+    }
+}
+
+__s32 OSAL_GPIO_DevSetONEPIN_PULL_STATUS(u32 p_handler, __u32 set_pull_status, const char *gpio_name)
+{
+    return gpio_set_one_pin_pull(p_handler, set_pull_status, gpio_name);
+}
+
+__s32 OSAL_GPIO_DevREAD_ONEPIN_DATA(u32 p_handler, const char *gpio_name)
+{
+#ifdef CONFIG_ARCH_SUN5I
+    if(p_handler < 200 && p_handler >=100)
+    {
+        int value;
+
+        axp_gpio_get_value(p_handler-100, &value);
+        return value;
+    }
+    else
+#endif
+    {
+        return gpio_read_one_pin_value(p_handler, gpio_name);
+    }
+}
+
+__s32 OSAL_GPIO_DevWRITE_ONEPIN_DATA(u32 p_handler, __u32 value_to_gpio, const char *gpio_name)
+{
+#ifdef CONFIG_ARCH_SUN5I
+    if((p_handler<200) && (p_handler>=100))
+    {
+        return axp_gpio_set_value(p_handler-100, value_to_gpio);
+    }
+    else
+#endif
+    {
+        return gpio_write_one_pin_value(p_handler, value_to_gpio, gpio_name);
+    }
+}
diff --git a/drivers/video/sunxi/disp/OSAL_Pin.h b/drivers/video/sunxi/disp/OSAL_Pin.h
new file mode 100644
index 0000000..c95b974
--- /dev/null
+++ b/drivers/video/sunxi/disp/OSAL_Pin.h
@@ -0,0 +1,44 @@
+/*
+ * (C) Copyright 2007-2012
+ * Allwinner Technology Co., Ltd. <www.allwinnertech.com>
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.	 See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+
+#ifndef  __OSAL_PIN_H__
+#define  __OSAL_PIN_H__
+
+__hdle OSAL_GPIO_Request(user_gpio_set_t *gpio_list, __u32 group_count_max);
+
+__hdle OSAL_GPIO_Request_Ex(char *main_name, const char *sub_name);
+
+__s32 OSAL_GPIO_Release(__hdle p_handler, __s32 if_release_to_default_status);
+
+__s32 OSAL_GPIO_DevGetAllPins_Status(unsigned p_handler, user_gpio_set_t *gpio_status, unsigned gpio_count_max, unsigned if_get_from_hardware);
+
+__s32 OSAL_GPIO_DevGetONEPins_Status(unsigned p_handler, user_gpio_set_t *gpio_status,const char *gpio_name,unsigned if_get_from_hardware);
+
+__s32 OSAL_GPIO_DevSetONEPin_Status(u32 p_handler, user_gpio_set_t *gpio_status, const char *gpio_name, __u32 if_set_to_current_input_status);
+
+__s32 OSAL_GPIO_DevSetONEPIN_IO_STATUS(u32 p_handler, __u32 if_set_to_output_status, const char *gpio_name);
+
+__s32 OSAL_GPIO_DevSetONEPIN_PULL_STATUS(u32 p_handler, __u32 set_pull_status, const char *gpio_name);
+
+__s32 OSAL_GPIO_DevREAD_ONEPIN_DATA(u32 p_handler, const char *gpio_name);
+
+__s32 OSAL_GPIO_DevWRITE_ONEPIN_DATA(u32 p_handler, __u32 value_to_gpio, const char *gpio_name);
+
+#endif   //__OSAL_PIN_H__
diff --git a/drivers/video/sunxi/disp/bsp_display.h b/drivers/video/sunxi/disp/bsp_display.h
index bba7245..511aa99 100644
--- a/drivers/video/sunxi/disp/bsp_display.h
+++ b/drivers/video/sunxi/disp/bsp_display.h
@@ -63,7 +63,6 @@
 typedef unsigned int __hdle;
 
 #include <linux/drv_display.h>
-#include "OSAL/OSAL.h"
 
 #if 1
 #define OSAL_PRINTF(msg...) {printk(KERN_WARNING "[DISP] ");printk(msg);}
diff --git a/drivers/video/sunxi/disp/disp_clk.c b/drivers/video/sunxi/disp/disp_clk.c
index 660778d..74beff8 100644
--- a/drivers/video/sunxi/disp/disp_clk.c
+++ b/drivers/video/sunxi/disp/disp_clk.c
@@ -22,7 +22,7 @@
 #include "disp_display_i.h"
 #include "disp_display.h"
 #include "disp_clk.h"
-
+#include "OSAL_Clock.h"
 
 #define CLK_ON 1
 #define CLK_OFF 0
diff --git a/drivers/video/sunxi/disp/disp_iep.c b/drivers/video/sunxi/disp/disp_iep.c
index 7be5b80..2cd6b47 100644
--- a/drivers/video/sunxi/disp/disp_iep.c
+++ b/drivers/video/sunxi/disp/disp_iep.c
@@ -3,6 +3,7 @@
 #include "de_iep_tab.h"
 #include "disp_clk.h"
 #include "disp_lcd.h"
+#include "OSAL_Clock.h"
 
 #ifndef CONFIG_ARCH_SUN5I
 #error IEP should only be used on sun5i
diff --git a/drivers/video/sunxi/disp/disp_lcd.c b/drivers/video/sunxi/disp/disp_lcd.c
index 021fe96..f263e6f 100644
--- a/drivers/video/sunxi/disp/disp_lcd.c
+++ b/drivers/video/sunxi/disp/disp_lcd.c
@@ -25,6 +25,7 @@
 #include "disp_event.h"
 #include "disp_de.h"
 #include "disp_clk.h"
+#include "OSAL_Pin.h"
 
 static __lcd_flow_t         open_flow[2];
 static __lcd_flow_t         close_flow[2];
diff --git a/drivers/video/sunxi/disp/disp_tv.c b/drivers/video/sunxi/disp/disp_tv.c
index 232e5a1..a3e54a0 100644
--- a/drivers/video/sunxi/disp/disp_tv.c
+++ b/drivers/video/sunxi/disp/disp_tv.c
@@ -25,6 +25,7 @@
 #include "disp_de.h"
 #include "disp_lcd.h"
 #include "disp_clk.h"
+#include "OSAL_Pin.h"
 
 __s32 Disp_Switch_Dram_Mode(__u32 type, __u8 tv_mod)
 {
-- 
1.8.0


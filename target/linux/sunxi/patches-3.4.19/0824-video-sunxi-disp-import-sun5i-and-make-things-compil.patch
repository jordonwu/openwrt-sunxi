From 5bc32e805f1457b3ab5f9d745913e7b5f9bc45b6 Mon Sep 17 00:00:00 2001
From: Jari Helaakoski <tekkuli@gmail.com>
Date: Wed, 24 Oct 2012 00:02:32 +0300
Subject: [PATCH 824/944] video: sunxi-disp: import-sun5i and make things
 compile on sun4i

---
 drivers/video/sunxi/disp/Makefile                  |   3 +-
 drivers/video/sunxi/disp/OSAL/OSAL_Clock.c         |   6 +
 drivers/video/sunxi/disp/OSAL/OSAL_Pin.c           |  74 +-
 .../video/sunxi/disp/de_bsp_sun5i/bsp_display.h    |  15 +-
 .../video/sunxi/disp/de_bsp_sun5i/de/disp_clk.c    |  71 +-
 drivers/video/sunxi/disp/de_bsp_sun5i/de/disp_de.c | 133 +---
 .../sunxi/disp/de_bsp_sun5i/de/disp_display.c      |  20 +-
 .../sunxi/disp/de_bsp_sun5i/de/disp_display.h      |   9 +-
 .../video/sunxi/disp/de_bsp_sun5i/de/disp_event.c  |  44 +-
 .../video/sunxi/disp/de_bsp_sun5i/de/disp_event.h  |   2 +-
 .../video/sunxi/disp/de_bsp_sun5i/de/disp_hdmi.c   |   2 +-
 .../video/sunxi/disp/de_bsp_sun5i/de/disp_lcd.c    |  76 +-
 .../video/sunxi/disp/de_bsp_sun5i/de/disp_lcd.h    |   1 +
 .../video/sunxi/disp/de_bsp_sun5i/de/disp_scaler.c |  34 +-
 .../video/sunxi/disp/de_bsp_sun5i/de/disp_scaler.h |   1 +
 .../video/sunxi/disp/de_bsp_sun5i/de/disp_sprite.c |   2 +-
 drivers/video/sunxi/disp/de_bsp_sun5i/de/disp_tv.c |  20 +-
 .../video/sunxi/disp/de_bsp_sun5i/de/disp_vga.c    |   2 +-
 .../video/sunxi/disp/de_bsp_sun5i/de/disp_video.c  |  11 +-
 .../video/sunxi/disp/de_bsp_sun5i/de/ebios/de_be.c | 305 +++++---
 .../video/sunxi/disp/de_bsp_sun5i/de/ebios/de_fe.c |  35 +-
 .../sunxi/disp/de_bsp_sun5i/de/ebios/de_lcdc.c     |  25 +-
 .../sunxi/disp/de_bsp_sun5i/de/ebios/de_tvec.c     |  22 +-
 .../sunxi/disp/de_bsp_sun5i/de/ebios/ebios_de.h    |   7 +-
 drivers/video/sunxi/disp/de_bsp_sun5i/iep/de_iep.c | 424 ++++++++++
 drivers/video/sunxi/disp/de_bsp_sun5i/iep/de_iep.h | 370 +++++++++
 .../video/sunxi/disp/de_bsp_sun5i/iep/de_iep_tab.h | 285 +++++++
 .../video/sunxi/disp/de_bsp_sun5i/iep/disp_iep.c   | 853 +++++++++++++++++++++
 .../video/sunxi/disp/de_bsp_sun5i/iep/disp_iep.h   |  83 ++
 drivers/video/sunxi/disp/dev_disp.c                | 102 ++-
 drivers/video/sunxi/disp/dev_disp.h                |   4 +-
 drivers/video/sunxi/disp/drv_disp_i.h              |   8 +-
 drivers/video/sunxi/hdmi/aw/hdmi_core.c            |   4 +-
 drivers/video/sunxi/hdmi/aw/hdmi_core.h            |   2 -
 drivers/video/sunxi/lcd/lcd_panel_cfg_generic.c    |  28 -
 include/linux/drv_display.h                        |   4 +-
 include/linux/drv_display_sun4i.h                  | 810 -------------------
 include/linux/drv_display_sun5i.h                  | 807 -------------------
 include/linux/drv_display_sunxi.h                  | 816 ++++++++++++++++++++
 39 files changed, 3432 insertions(+), 2088 deletions(-)
 create mode 100644 drivers/video/sunxi/disp/de_bsp_sun5i/iep/de_iep.c
 create mode 100644 drivers/video/sunxi/disp/de_bsp_sun5i/iep/de_iep.h
 create mode 100644 drivers/video/sunxi/disp/de_bsp_sun5i/iep/de_iep_tab.h
 create mode 100644 drivers/video/sunxi/disp/de_bsp_sun5i/iep/disp_iep.c
 create mode 100644 drivers/video/sunxi/disp/de_bsp_sun5i/iep/disp_iep.h
 delete mode 100644 include/linux/drv_display_sun4i.h
 delete mode 100644 include/linux/drv_display_sun5i.h
 create mode 100644 include/linux/drv_display_sunxi.h

diff --git a/drivers/video/sunxi/disp/Makefile b/drivers/video/sunxi/disp/Makefile
index d2ddecb..5d9e59e 100755
--- a/drivers/video/sunxi/disp/Makefile
+++ b/drivers/video/sunxi/disp/Makefile
@@ -17,7 +17,8 @@ disp-objs += de_bsp_sun5i/de/ebios/de_be.o de_bsp_sun5i/de/ebios/de_fe.o de_bsp_
 	de_bsp_sun5i/de/disp_clk.o de_bsp_sun5i/de/disp_combined.o de_bsp_sun5i/de/disp_de.o de_bsp_sun5i/de/disp_display.o\
 	de_bsp_sun5i/de/disp_event.o de_bsp_sun5i/de/disp_hdmi.o de_bsp_sun5i/de/disp_hwc.o de_bsp_sun5i/de/disp_layer.o\
 	de_bsp_sun5i/de/disp_lcd.o de_bsp_sun5i/de/disp_scaler.o de_bsp_sun5i/de/disp_sprite.o de_bsp_sun5i/de/disp_tv.o\
-	de_bsp_sun5i/de/disp_vga.o de_bsp_sun5i/de/disp_video.o
+	de_bsp_sun5i/de/disp_vga.o de_bsp_sun5i/de/disp_video.o \
+	de_bsp_sun5i/iep/de_iep.o de_bsp_sun5i/iep/disp_iep.o
 endif
 
 ifeq ($(CONFIG_FB_SUNXI_UMP),y)
diff --git a/drivers/video/sunxi/disp/OSAL/OSAL_Clock.c b/drivers/video/sunxi/disp/OSAL/OSAL_Clock.c
index 9cbcef9..5b057e1 100644
--- a/drivers/video/sunxi/disp/OSAL/OSAL_Clock.c
+++ b/drivers/video/sunxi/disp/OSAL/OSAL_Clock.c
@@ -207,6 +207,12 @@ static char* _modClkName[AW_MOD_CLK_CNT] =
     "sdram_de_image1",
     "sdram_de_mix",
     "sdram_ace",
+    "ahb_ehci1",
+    "ahb_ohci1",
+
+    "iep",
+    "ahb_iep",
+    "sdram_iep",
 };
 
 __s32 OSAL_CCMU_SetSrcFreq( __u32 nSclkNo, __u32 nFreq )
diff --git a/drivers/video/sunxi/disp/OSAL/OSAL_Pin.c b/drivers/video/sunxi/disp/OSAL/OSAL_Pin.c
index 9ac7417..7f0d46c 100644
--- a/drivers/video/sunxi/disp/OSAL/OSAL_Pin.c
+++ b/drivers/video/sunxi/disp/OSAL/OSAL_Pin.c
@@ -21,12 +21,33 @@
  */
 
 #include "OSAL_Pin.h"
+#ifdef CONFIG_ARCH_SUN5I
+#include "../../../../power/axp_power/axp-gpio.h"
+#endif
 
 __hdle OSAL_GPIO_Request(user_gpio_set_t *gpio_list, __u32 group_count_max)
 {
-    //__inf("OSAL_GPIO_Request, port:%d, port_num:%d, mul_sel:%d, pull:%d, drv_level:%d, data:%d\n", gpio_list->port, gpio_list->port_num, gpio_list->mul_sel, gpio_list->pull, gpio_list->drv_level, gpio_list->data);
+    __inf("OSAL_GPIO_Request, port:%d, port_num:%d, mul_sel:%d, pull:%d, drv_level:%d, data:%d\n", gpio_list->port, gpio_list->port_num, gpio_list->mul_sel, gpio_list->pull, gpio_list->drv_level, gpio_list->data);
 
-    return gpio_request(gpio_list, group_count_max);
+#ifdef CONFIG_ARCH_SUN5I
+    if(gpio_list->port == 0xffff)
+    {
+        if(gpio_list->mul_sel == 0 || gpio_list->mul_sel == 1)
+        {
+            axp_gpio_set_io(gpio_list->port_num, gpio_list->mul_sel);
+            axp_gpio_set_value(gpio_list->port_num, gpio_list->data);
+            return 100+gpio_list->port_num;
+        }
+        else
+        {
+            return 0;
+        }
+    }
+    else
+#endif
+    {
+        return gpio_request(gpio_list, group_count_max);
+    }
 }
 
 __hdle OSAL_GPIO_Request_Ex(char *main_name, const char *sub_name)
@@ -40,9 +61,16 @@ __hdle OSAL_GPIO_Request_Ex(char *main_name, const char *sub_name)
 __s32 OSAL_GPIO_Release(__hdle p_handler, __s32 if_release_to_default_status)
 {
     //__inf("OSAL_GPIO_Release\n");
-    gpio_release(p_handler, if_release_to_default_status);
-
-    return 0;
+#ifdef CONFIG_ARCH_SUN5I
+    if(p_handler < 200 && p_handler >=100)
+    {
+        return 0;
+    }
+    else
+#endif
+    {
+        return gpio_release(p_handler, if_release_to_default_status);
+    }
 }
 
 __s32 OSAL_GPIO_DevGetAllPins_Status(unsigned p_handler, user_gpio_set_t *gpio_status, unsigned gpio_count_max, unsigned if_get_from_hardware)
@@ -62,7 +90,16 @@ __s32 OSAL_GPIO_DevSetONEPin_Status(u32 p_handler, user_gpio_set_t *gpio_status,
 
 __s32 OSAL_GPIO_DevSetONEPIN_IO_STATUS(u32 p_handler, __u32 if_set_to_output_status, const char *gpio_name)
 {
-    return gpio_set_one_pin_io_status(p_handler, if_set_to_output_status, gpio_name);
+#ifdef CONFIG_ARCH_SUN5I
+    if(p_handler < 200 && p_handler >=100)
+    {
+        return axp_gpio_set_io(p_handler-100, if_set_to_output_status);
+    }
+    else
+#endif
+    {
+        return gpio_set_one_pin_io_status(p_handler, if_set_to_output_status, gpio_name);
+    }
 }
 
 __s32 OSAL_GPIO_DevSetONEPIN_PULL_STATUS(u32 p_handler, __u32 set_pull_status, const char *gpio_name)
@@ -72,12 +109,33 @@ __s32 OSAL_GPIO_DevSetONEPIN_PULL_STATUS(u32 p_handler, __u32 set_pull_status, c
 
 __s32 OSAL_GPIO_DevREAD_ONEPIN_DATA(u32 p_handler, const char *gpio_name)
 {
-    return gpio_read_one_pin_value(p_handler, gpio_name);
+#ifdef CONFIG_ARCH_SUN5I
+    if(p_handler < 200 && p_handler >=100)
+    {
+        int value;
+
+        axp_gpio_get_value(p_handler-100, &value);
+        return value;
+    }
+    else
+#endif
+    {
+        return gpio_read_one_pin_value(p_handler, gpio_name);
+    }
 }
 
 __s32 OSAL_GPIO_DevWRITE_ONEPIN_DATA(u32 p_handler, __u32 value_to_gpio, const char *gpio_name)
 {
-    return gpio_write_one_pin_value(p_handler, value_to_gpio, gpio_name);
+#ifdef CONFIG_ARCH_SUN5I
+    if((p_handler<200) && (p_handler>=100))
+    {
+        return axp_gpio_set_value(p_handler-100, value_to_gpio);
+    }
+    else
+#endif
+    {
+        return gpio_write_one_pin_value(p_handler, value_to_gpio, gpio_name);
+    }
 }
 
 
diff --git a/drivers/video/sunxi/disp/de_bsp_sun5i/bsp_display.h b/drivers/video/sunxi/disp/de_bsp_sun5i/bsp_display.h
index 8da4003..d38d43c 100644
--- a/drivers/video/sunxi/disp/de_bsp_sun5i/bsp_display.h
+++ b/drivers/video/sunxi/disp/de_bsp_sun5i/bsp_display.h
@@ -112,6 +112,7 @@ typedef struct
 	__u32 base_sdram;
 	__u32 base_ccmu;
 	__u32 base_pwm;
+	__u32 base_iep;
 
 	void (*tve_interrup) (__u32 sel);
 	__s32 (*hdmi_set_mode)(__disp_tv_mode_t mode);
@@ -151,11 +152,11 @@ extern __s32 BSP_disp_set_contrast(__u32 sel, __u32 contrast);
 extern __s32 BSP_disp_get_contrast(__u32 sel);
 extern __s32 BSP_disp_set_saturation(__u32 sel, __u32 saturation);
 extern __s32 BSP_disp_get_saturation(__u32 sel);
-extern __s32 BSP_disp_enhance_enable(__u32 sel, __bool enable);
-extern __s32 BSP_disp_get_enhance_enable(__u32 sel);
+extern __s32 BSP_disp_set_hue(__u32 sel, __u32 hue);
+extern __s32 BSP_disp_get_hue(__u32 sel);
 extern __s32 BSP_disp_capture_screen(__u32 sel, __disp_capture_screen_para_t * para);
 extern __s32 BSP_disp_set_screen_size(__u32 sel, __disp_rectsz_t * size);
-extern __s32 BSP_disp_set_output_csc(__u32 sel, __disp_output_type_t type);
+extern __s32 BSP_disp_set_output_csc(__u32 sel, __u32 out_type, __u32 drc_en);
 extern __s32 BSP_disp_de_flicker_enable(__u32 sel, __bool b_en);
 
 extern __s32 BSP_disp_layer_request(__u32 sel, __disp_layer_work_mode_t mode);
@@ -231,7 +232,7 @@ extern __s32 BSP_disp_lcd_close_after(__u32 sel);
 extern __lcd_flow_t * BSP_disp_lcd_get_close_flow(__u32 sel);
 extern __s32 BSP_disp_lcd_xy_switch(__u32 sel, __s32 mode);
 extern __s32 BSP_disp_set_gamma_table(__u32 sel, __u32 *gamtbl_addr,__u32 gamtbl_size);
-extern __s32 BSP_disp_lcd_set_bright(__u32 sel, __u32  bright);
+extern __s32 BSP_disp_lcd_set_bright(__u32 sel, __u32  bright, __u32 from_iep);
 extern __s32 BSP_disp_lcd_get_bright(__u32 sel);
 extern __s32 BSP_disp_lcd_set_src(__u32 sel, __disp_lcdc_src_t src);
 extern __s32 LCD_PWM_EN(__u32 sel, __bool b_en);
@@ -241,6 +242,7 @@ extern __s32 pwm_set_para(__u32 channel, __pwm_info_t * pwm_info);
 extern __s32 pwm_get_para(__u32 channel, __pwm_info_t * pwm_info);
 extern __s32 BSP_disp_get_timming(__u32 sel, __disp_tcon_timing_t * tt);
 extern __u32 BSP_disp_get_cur_line(__u32 sel);
+extern __s32 BSP_disp_close_lcd_backlight(__u32 sel);
 
 extern __s32 BSP_disp_tv_open(__u32 sel);
 extern __s32 BSP_disp_tv_close(__u32 sel);
@@ -302,6 +304,11 @@ extern __s32 BSP_disp_sprite_block_close(__u32 sel, __u32 hid);
 extern __s32 BSP_disp_sprite_block_set_para(__u32 sel, __u32 hid,__disp_sprite_block_para_t *para);
 extern __s32 BSP_disp_sprite_block_get_para(__u32 sel, __u32 hid,__disp_sprite_block_para_t *para);
 
+extern __s32 BSP_disp_iep_deflicker_enable(__u32 sel, __bool en);
+extern __s32 BSP_disp_iep_get_deflicker_enable(__u32 sel);
+extern __s32 BSP_disp_iep_drc_enable(__u32 sel, __bool en);
+extern __s32 BSP_disp_iep_get_drc_enable(__u32 sel);
+extern __s32 BSP_disp_iep_set_demo_win(__u32 sel, __u32 mode, __disp_rect_t *regn)	;
 #ifdef __LINUX_OSAL__
 __s32 Display_set_fb_timming(__u32 sel);
 #endif
diff --git a/drivers/video/sunxi/disp/de_bsp_sun5i/de/disp_clk.c b/drivers/video/sunxi/disp/de_bsp_sun5i/de/disp_clk.c
index 4f56635..9578de1 100644
--- a/drivers/video/sunxi/disp/de_bsp_sun5i/de/disp_clk.c
+++ b/drivers/video/sunxi/disp/de_bsp_sun5i/de/disp_clk.c
@@ -172,8 +172,8 @@ __s32 image_clk_init(__u32 sel)
 			OSAL_CCMU_SetMclkDiv(h_debe0mclk, 2);
 		}
 		OSAL_CCMU_MclkOnOff(h_debe0ahbclk, CLK_ON);
-		OSAL_CCMU_MclkOnOff(h_debe0dramclk, CLK_ON);
-		OSAL_CCMU_MclkOnOff(h_debe0dramclk, CLK_OFF);
+		//OSAL_CCMU_MclkOnOff(h_debe0dramclk, CLK_ON);
+		//OSAL_CCMU_MclkOnOff(h_debe0dramclk, CLK_OFF);
 		OSAL_CCMU_MclkOnOff(h_debe0mclk, CLK_ON);
 
 		g_clk_status |= (CLK_DEBE0_AHB_ON | CLK_DEBE0_MOD_ON);
@@ -200,8 +200,8 @@ __s32 image_clk_init(__u32 sel)
 		}
 
 		OSAL_CCMU_MclkOnOff(h_debe1ahbclk, CLK_ON);
-		OSAL_CCMU_MclkOnOff(h_debe1dramclk, CLK_ON);
-		OSAL_CCMU_MclkOnOff(h_debe1dramclk, CLK_OFF);
+		//OSAL_CCMU_MclkOnOff(h_debe1dramclk, CLK_ON);
+		//OSAL_CCMU_MclkOnOff(h_debe1dramclk, CLK_OFF);
 		OSAL_CCMU_MclkOnOff(h_debe1mclk, CLK_ON);
 
 		g_clk_status |= (CLK_DEBE1_AHB_ON | CLK_DEBE1_MOD_ON);
@@ -405,9 +405,8 @@ __s32 lcdc_clk_init(__u32 sel)
 		h_lcd0ch1mclk1 = OSAL_CCMU_OpenMclk(AW_MOD_CLK_LCD0CH1_S1);
 		h_lcd0ch1mclk2 = OSAL_CCMU_OpenMclk(AW_MOD_CLK_LCD0CH1_S2);
 
-		OSAL_CCMU_SetMclkSrc(h_lcd0ch0mclk0, AW_SYS_CLK_PLL7);	//Default to Video Pll0
-		OSAL_CCMU_SetMclkSrc(h_lcd0ch1mclk1, AW_SYS_CLK_PLL7);	//Default to Video Pll0
-		//OSAL_CCMU_SetMclkSrc(h_lcd0ch1mclk2, AW_SYS_CLK_PLL7);	//Default to Video Pll0
+		OSAL_CCMU_SetMclkSrc(h_lcd0ch0mclk0, AW_SYS_CLK_PLL3);	//Default to Video Pll0
+		OSAL_CCMU_SetMclkSrc(h_lcd0ch1mclk1, AW_SYS_CLK_PLL3);	//Default to Video Pll0
 		OSAL_CCMU_SetMclkDiv(h_lcd0ch1mclk2, 10);
 		OSAL_CCMU_SetMclkDiv(h_lcd0ch1mclk1, 10);
 #ifdef RESET_OSAL
@@ -430,9 +429,8 @@ __s32 lcdc_clk_init(__u32 sel)
 		h_lcd1ch1mclk1 = OSAL_CCMU_OpenMclk(AW_MOD_CLK_LCD1CH1_S1);
 		h_lcd1ch1mclk2 = OSAL_CCMU_OpenMclk(AW_MOD_CLK_LCD1CH1_S2);
 
-		OSAL_CCMU_SetMclkSrc(h_lcd1ch0mclk0, AW_SYS_CLK_PLL7);	//Default to Video Pll0
-		OSAL_CCMU_SetMclkSrc(h_lcd1ch1mclk1, AW_SYS_CLK_PLL7);	//Default to Video Pll0
-		//OSAL_CCMU_SetMclkSrc(h_lcd1ch1mclk2, AW_SYS_CLK_PLL7);	//Default to Video Pll0
+		OSAL_CCMU_SetMclkSrc(h_lcd1ch0mclk0, AW_SYS_CLK_PLL3);	//Default to Video Pll0
+		OSAL_CCMU_SetMclkSrc(h_lcd1ch1mclk1, AW_SYS_CLK_PLL3);	//Default to Video Pll0
 		OSAL_CCMU_SetMclkDiv(h_lcd1ch1mclk2, 10);
 		OSAL_CCMU_SetMclkDiv(h_lcd1ch1mclk1, 10);
 #ifdef RESET_OSAL
@@ -591,11 +589,15 @@ __s32 hdmi_clk_init(void)
 #ifdef RESET_OSAL
 	OSAL_CCMU_MclkReset(h_hdmimclk, RST_INVAILD);
 #endif
-	OSAL_CCMU_SetMclkSrc(h_hdmimclk, AW_SYS_CLK_PLL7);
+	OSAL_CCMU_SetMclkSrc(h_hdmimclk, AW_SYS_CLK_PLL3);
 	OSAL_CCMU_SetMclkDiv(h_hdmimclk, 1);
 
 	OSAL_CCMU_MclkOnOff(h_hdmiahbclk, CLK_ON);
+
+	OSAL_CCMU_MclkOnOff(h_hdmimclk, CLK_ON);
+
 	g_clk_status |= CLK_HDMI_AHB_ON;
+	g_clk_status |= CLK_HDMI_MOD_ON;
 
 	return DIS_SUCCESS;
 }
@@ -609,27 +611,20 @@ __s32 hdmi_clk_exit(void)
 	OSAL_CCMU_MclkOnOff(h_hdmiahbclk, CLK_OFF);
 	OSAL_CCMU_CloseMclk(h_hdmiahbclk);
 	OSAL_CCMU_CloseMclk(h_hdmimclk);
+	OSAL_CCMU_MclkOnOff(h_hdmimclk, CLK_OFF);
 
-	g_clk_status &= (CLK_HDMI_AHB_OFF & CLK_HDMI_MOD_OFF);
+	g_clk_status &= (CLK_HDMI_AHB_OFF & CLK_HDMI_MOD_OFF & CLK_HDMI_MOD_OFF);
 
 	return DIS_SUCCESS;
 }
 
 __s32 hdmi_clk_on(void)
 {
-	OSAL_CCMU_MclkOnOff(h_hdmimclk, CLK_ON);
-
-	g_clk_status |= CLK_HDMI_MOD_ON;
-
 	return DIS_SUCCESS;
 }
 
 __s32 hdmi_clk_off(void)
 {
-	OSAL_CCMU_MclkOnOff(h_hdmimclk, CLK_OFF);
-
-	g_clk_status &= CLK_HDMI_MOD_OFF;
-
 	return DIS_SUCCESS;
 }
 
@@ -760,43 +755,13 @@ static __s32 LCD_PLL_Calc(__u32 sel, __panel_para_t * info, __u32 *divider)
 */
 static __s32 disp_pll_assign(__u32 sel, __u32 pll_clk)
 {
-	__u32 another_lcdc, another_pll_use_status;
 	__s32 ret = -1;
 
-	another_lcdc = (sel == 0)? 1:0;
-	another_pll_use_status = gdisp.screen[another_lcdc].pll_use_status;
-
-	if(pll_clk >= 250000000 && pll_clk <= 300000000)
+    if(pll_clk <= (381000000 * 2))
 	{
-		if((!(another_pll_use_status & VIDEO_PLL1_USED)) || (OSAL_CCMU_GetSrcFreq(AW_SYS_CLK_PLL7) == pll_clk))
-		{
-			ret = 1;
-		}
-		else if((!(another_pll_use_status & VIDEO_PLL0_USED)) || (OSAL_CCMU_GetSrcFreq(AW_SYS_CLK_PLL3) == pll_clk))
-		{
-			ret = 0;
-		}
-	}
-	else if(pll_clk <= (381000000 * 2))
-	{
-		if((!(another_pll_use_status & VIDEO_PLL0_USED)) || (OSAL_CCMU_GetSrcFreq(AW_SYS_CLK_PLL3) == pll_clk))
-		{
-			ret = 0;
-		}
-		else if((!(another_pll_use_status & VIDEO_PLL1_USED)) || (OSAL_CCMU_GetSrcFreq(AW_SYS_CLK_PLL7) == pll_clk))
-		{
-			ret = 1;
-		}
+		ret = 0;
     }
-	else if(pll_clk <= 1200000000)
-	{
-	    if(OSAL_sw_get_ic_ver() > 0xA)
-	    {
-	        ret = 2;//sata pll
-	    }
-	}
-
-    if(ret == -1)
+    else
     {
         DE_WRN("Can't assign PLL for screen%d, pll_clk:%d\n",sel, pll_clk);
     }
diff --git a/drivers/video/sunxi/disp/de_bsp_sun5i/de/disp_de.c b/drivers/video/sunxi/disp/de_bsp_sun5i/de/disp_de.c
index a2b549b..dae83ae 100644
--- a/drivers/video/sunxi/disp/de_bsp_sun5i/de/disp_de.c
+++ b/drivers/video/sunxi/disp/de_bsp_sun5i/de/disp_de.c
@@ -36,16 +36,19 @@ __s32 Image_init(__u32 sel)
 	DE_BE_Reg_Init(sel);
 
     BSP_disp_sprite_init(sel);
-    BSP_disp_set_output_csc(sel, DISP_OUTPUT_TYPE_LCD);
+    BSP_disp_set_output_csc(sel, DISP_OUTPUT_TYPE_LCD,gdisp.screen[sel].iep_status&DRC_USED);
 
     Image_open(sel);
 
+    DE_BE_EnableINT(sel, DE_IMG_REG_LOAD_FINISH);
+    DE_BE_reg_auto_load_en(sel, 0);
+
     return DIS_SUCCESS;
 }
 
 __s32 Image_exit(__u32 sel)
 {
-    DE_BE_DisableINT(sel, DE_IMG_IRDY_IE);
+    DE_BE_DisableINT(sel, DE_IMG_REG_LOAD_FINISH);
     BSP_disp_sprite_exit(sel);
     image_clk_exit(sel);
 
@@ -73,7 +76,7 @@ __s32 Image_close(__u32 sel)
 __s32 BSP_disp_set_bright(__u32 sel, __u32 bright)
 {
     gdisp.screen[sel].bright = bright;
-    DE_BE_Set_Enhance(sel, gdisp.screen[sel].bright, gdisp.screen[sel].contrast, gdisp.screen[sel].saturation);
+    BSP_disp_set_output_csc(sel, gdisp.screen[sel].output_type, gdisp.screen[sel].iep_status&DRC_USED);
 
     return DIS_SUCCESS;
 }
@@ -86,7 +89,7 @@ __s32 BSP_disp_get_bright(__u32 sel)
 __s32 BSP_disp_set_contrast(__u32 sel, __u32 contrast)
 {
     gdisp.screen[sel].contrast = contrast;
-    DE_BE_Set_Enhance(sel, gdisp.screen[sel].bright, gdisp.screen[sel].contrast, gdisp.screen[sel].saturation);
+    BSP_disp_set_output_csc(sel, gdisp.screen[sel].output_type, gdisp.screen[sel].iep_status&DRC_USED);
 
     return DIS_SUCCESS;
 }
@@ -99,7 +102,7 @@ __s32 BSP_disp_get_contrast(__u32 sel)
 __s32 BSP_disp_set_saturation(__u32 sel, __u32 saturation)
 {
     gdisp.screen[sel].saturation = saturation;
-    DE_BE_Set_Enhance(sel, gdisp.screen[sel].bright, gdisp.screen[sel].contrast, gdisp.screen[sel].saturation);
+    BSP_disp_set_output_csc(sel, gdisp.screen[sel].output_type, gdisp.screen[sel].iep_status&DRC_USED);
 
     return DIS_SUCCESS;
 }
@@ -109,17 +112,17 @@ __s32 BSP_disp_get_saturation(__u32 sel)
     return gdisp.screen[sel].saturation;
 }
 
-__s32 BSP_disp_enhance_enable(__u32 sel, __bool enable)
+__s32 BSP_disp_set_hue(__u32 sel, __u32 hue)
 {
-    DE_BE_enhance_enable(sel, enable);
-    gdisp.screen[sel].enhance_en = enable;
+    gdisp.screen[sel].hue = hue;
+    BSP_disp_set_output_csc(sel, gdisp.screen[sel].output_type, gdisp.screen[sel].iep_status&DRC_USED);
 
     return DIS_SUCCESS;
 }
 
-__s32 BSP_disp_get_enhance_enable(__u32 sel)
+__s32 BSP_disp_get_hue(__u32 sel)
 {
-    return gdisp.screen[sel].enhance_en;
+    return gdisp.screen[sel].hue;
 }
 
 
@@ -133,12 +136,12 @@ __s32 BSP_disp_set_screen_size(__u32 sel, __disp_rectsz_t * size)
     return DIS_SUCCESS;
 }
 
-__s32 BSP_disp_set_output_csc(__u32 sel, __disp_output_type_t type)
+__s32 BSP_disp_set_output_csc(__u32 sel, __u32 out_type, __u32 drc_en)
 {
     __disp_color_range_t out_color_range = DISP_COLOR_RANGE_0_255;
-    __bool bout_yuv = FALSE;
+    __u32 out_csc = 0;//out_csc: 0:rgb  1:yuv  2:igb
 
-    if(type == DISP_OUTPUT_TYPE_HDMI)
+    if(out_type == DISP_OUTPUT_TYPE_HDMI)
     {
         __s32 ret = 0;
         __s32 value = 0;
@@ -155,103 +158,23 @@ __s32 BSP_disp_set_output_csc(__u32 sel, __disp_output_type_t type)
             out_color_range = value;
             DE_INF("screen0_out_color_range = %d\n", value);
         }
+        out_csc = 0;
+    }
+    else if(out_type == DISP_OUTPUT_TYPE_LCD)
+    {
+        out_csc = 0;
     }
-    else if(type == DISP_OUTPUT_TYPE_TV)
+    else if(out_type == DISP_OUTPUT_TYPE_TV)
     {
-        bout_yuv = TRUE;
+        out_csc = 1;
     }
 
-    DE_BE_Output_Cfg_Csc_Coeff(sel, bout_yuv, out_color_range);
+    if(drc_en)
+    {
+        out_csc = 2;
+    }
 
-    gdisp.screen[sel].bout_yuv = bout_yuv;
+    DE_BE_Set_Enhance(sel, out_csc, out_color_range, gdisp.screen[sel].bright, gdisp.screen[sel].contrast, gdisp.screen[sel].saturation, gdisp.screen[sel].hue);
 
     return DIS_SUCCESS;
 }
-
-__s32 BSP_disp_de_flicker_enable(__u32 sel, __bool b_en)
-{
-	if(b_en)
-	{
-		gdisp.screen[sel].de_flicker_status |= DE_FLICKER_REQUIRED;
-	}
-	else
-	{
-		gdisp.screen[sel].de_flicker_status &= DE_FLICKER_REQUIRED_MASK;
-	}
-	Disp_de_flicker_enable(sel, b_en);
-	return DIS_SUCCESS;
-}
-
-__s32 Disp_de_flicker_enable(__u32 sel, __u32 enable )
-{
-	__disp_tv_mode_t tv_mode;
-	__u32 scan_mode;
-	__u32 i;
-	__u32 scaler_index;
-
-	tv_mode = gdisp.screen[sel].tv_mode;
-	scan_mode = Disp_get_screen_scan_mode(tv_mode);
-
-	if(enable)
-	{
-		if((gdisp.screen[sel].de_flicker_status & DE_FLICKER_REQUIRED) && (scan_mode == 1))	//when output device is ntsc/pal/480i/576i
-		{
-			for(i = 0; i < gdisp.screen[sel].max_layers; i++)
-			{
-				if((gdisp.screen[sel].layer_manage[i].para.mode == DISP_LAYER_WORK_MODE_SCALER) && 	//when a layer using scaler layer
-					(gdisp.screen[sel].layer_manage[i].scaler_index == sel) && 						//when this scaler is the same channel with be
-					(g_video[sel][i].dit_enable == TRUE))	//when this scaler is using de-interlaced
-				{
-					DE_INF("de: CANNOT OPEN de-flicker due to scaler de-interlaced using!\n");
-					DE_INF("de: Will OPEN de-flicker when scaler de-interlaced disable automatic!\n");
-					break;
-				}
-			}
-			if(i == gdisp.screen[sel].max_layers)//no scaler using de-interlaced
-			{
-				BSP_disp_cfg_start(sel);
-
-				DE_BE_deflicker_enable(sel, TRUE);
-
-				//config scaler to fit de-flicker
-				for(i = 0; i < gdisp.screen[sel].max_layers; i++)
-				{
-					if((gdisp.screen[sel].layer_manage[i].para.mode == DISP_LAYER_WORK_MODE_SCALER) &&
-						 ((scaler_index = gdisp.screen[sel].layer_manage[i].scaler_index) == sel))
-					{
-						Scaler_Set_Outitl(scaler_index, FALSE);
-    					gdisp.scaler[scaler_index].b_reg_change = TRUE;
-					}
-				}
-				gdisp.screen[sel].de_flicker_status |= DE_FLICKER_USED;
-
-				BSP_disp_cfg_finish(sel);
-			}
-		}
-		else
-		{
-			DE_INF("de: Will OPEN de-flicker when output to interlaced device !\n");
-		}
-
-	}
-	else
-	{
-		BSP_disp_cfg_start(sel);
-
-		for(i = 0; i < gdisp.screen[sel].max_layers; i++)
-		{
-			if((gdisp.screen[sel].layer_manage[i].para.mode == DISP_LAYER_WORK_MODE_SCALER) &&
-					((scaler_index = gdisp.screen[sel].layer_manage[i].scaler_index) == sel))
-			{
-				Scaler_Set_Outitl(scaler_index, TRUE);
-				gdisp.scaler[scaler_index].b_reg_change = TRUE;
-			}
-		}
-		DE_BE_deflicker_enable(sel, FALSE);
-		gdisp.screen[sel].de_flicker_status &= DE_FLICKER_USED_MASK;
-
-		BSP_disp_cfg_finish(sel);
-	}
-
-	return DIS_SUCCESS;
-}
diff --git a/drivers/video/sunxi/disp/de_bsp_sun5i/de/disp_display.c b/drivers/video/sunxi/disp/de_bsp_sun5i/de/disp_display.c
index 937ba12..ffb8078 100644
--- a/drivers/video/sunxi/disp/de_bsp_sun5i/de/disp_display.c
+++ b/drivers/video/sunxi/disp/de_bsp_sun5i/de/disp_display.c
@@ -54,13 +54,16 @@ __s32 BSP_disp_init(__disp_bsp_init_para * para)
         gdisp.screen[screen_id].bright = 50;
         gdisp.screen[screen_id].contrast = 50;
         gdisp.screen[screen_id].saturation = 50;
+        gdisp.screen[screen_id].hue = 50;
 
-        gdisp.scaler[screen_id].bright = 32;
-        gdisp.scaler[screen_id].contrast = 32;
-        gdisp.scaler[screen_id].saturation = 32;
-        gdisp.scaler[screen_id].hue = 32;
+        gdisp.scaler[screen_id].bright = 50;
+        gdisp.scaler[screen_id].contrast = 50;
+        gdisp.scaler[screen_id].saturation = 50;
+        gdisp.scaler[screen_id].hue = 50;
 
-        gdisp.screen[screen_id].lcd_bright = DISP_LCD_BRIGHT_LEVEL12;
+        gdisp.screen[screen_id].lcd_bright = 192;
+
+        gdisp.screen[screen_id].lcd_bright_dimming = 256;
     }
     memcpy(&gdisp.init_para,para,sizeof(__disp_bsp_init_para));
     memset(g_video,0,sizeof(g_video));
@@ -73,6 +76,9 @@ __s32 BSP_disp_init(__disp_bsp_init_para * para)
     //LCDC_set_reg_base(1,para->base_lcdc1);
     TVE_set_reg_base(0, para->base_tvec0);
     //TVE_set_reg_base(1, para->base_tvec1);
+    DE_IEP_Set_Reg_Base(0, para->base_iep);
+
+    BSP_disp_close_lcd_backlight(0);
 
 	disp_pll_init();
 
@@ -86,6 +92,7 @@ __s32 BSP_disp_init(__disp_bsp_init_para * para)
     //Disp_TVEC_Init(1);
     Display_Hdmi_Init();
 
+	Disp_iep_init(0);
     return DIS_SUCCESS;
 }
 
@@ -104,6 +111,7 @@ __s32 BSP_disp_exit(__u32 mode)
         Disp_TVEC_Exit(0);
         //Disp_TVEC_Exit(1);
         Display_Hdmi_Exit();
+        Disp_iep_exit(0);
     }
     else if(mode == DISP_EXIT_MODE_CLEAN_PARTLY)
     {
@@ -219,7 +227,7 @@ __s32 BSP_disp_print_reg(__bool b_force_on, __u32 id)
 
         case DISP_REG_CCMU:
             base = gdisp.init_para.base_ccmu;
-            size = 0x158;
+            size = 0x164;
             sprintf(str, "ccmu:\n");
             break;
 
diff --git a/drivers/video/sunxi/disp/de_bsp_sun5i/de/disp_display.h b/drivers/video/sunxi/disp/de_bsp_sun5i/de/disp_display.h
index cccf749..b529b0e 100644
--- a/drivers/video/sunxi/disp/de_bsp_sun5i/de/disp_display.h
+++ b/drivers/video/sunxi/disp/de_bsp_sun5i/de/disp_display.h
@@ -29,6 +29,8 @@
 #include "disp_layer.h"
 #include "disp_scaler.h"
 #include "disp_video.h"
+#include "../iep/disp_iep.h"
+
 
 #define IMAGE_USED              0x00000004
 #define IMAGE_USED_MASK         (~(IMAGE_USED))
@@ -103,11 +105,10 @@ typedef struct
     __u32                   bright;
     __u32                   contrast;
     __u32                   saturation;
-    __bool                  enhance_en;
+    __u32                   hue;
     __u32                   max_layers;
     __layer_man_t           layer_manage[4];
-    __bool                  bout_yuv;
-    __u32                   de_flicker_status;
+    __u32                   iep_status;
 
     __u32                   image_output_type;//see macro definition IMAGE_OUTPUT_XXX above, it can be lcd only /lcd+scaler/ scaler only
     __u32                   out_scaler_index;
@@ -125,7 +126,7 @@ typedef struct
 	__u32	                pll_use_status;	//lcdc0/lcdc1 using which video pll(0 or 1)
 
 	__u32                   lcd_bright;
-	__disp_color_range_t    out_color_range;
+	__u32                   lcd_bright_dimming;	//IEP-drc backlight dimming rate: 0 -256 (256: no dimming; 0: the most dimming)
 
 	__disp_lcd_cfg_t        lcd_cfg;
     __hdle                  gpio_hdl[4];
diff --git a/drivers/video/sunxi/disp/de_bsp_sun5i/de/disp_event.c b/drivers/video/sunxi/disp/de_bsp_sun5i/de/disp_event.c
index bfeb67a..fc3e093 100644
--- a/drivers/video/sunxi/disp/de_bsp_sun5i/de/disp_event.c
+++ b/drivers/video/sunxi/disp/de_bsp_sun5i/de/disp_event.c
@@ -69,6 +69,8 @@ void LCD_vbi_event_proc(__u32 sel, __u32 tcon_index)
 		return ;
 	}
 
+	IEP_Operation_In_Vblanking(sel, tcon_index);
+
     if(gdisp.screen[sel].LCD_CPUIF_ISR)
     {
     	(*gdisp.screen[sel].LCD_CPUIF_ISR)();
@@ -90,6 +92,46 @@ void LCD_vbi_event_proc(__u32 sel, __u32 tcon_index)
                 Scaler_close(i);
                 gdisp.scaler[i].b_close = FALSE;
             }
+            if(gdisp.scaler[i].coef_change == TRUE)
+            {
+            	__scal_src_size_t in_size;
+            	__scal_out_size_t out_size;
+            	__scal_src_type_t in_type;
+            	__scal_out_type_t out_type;
+            	__scal_scan_mod_t in_scan;
+            	__scal_scan_mod_t out_scan;
+                __disp_scaler_t * scaler;
+
+                scaler = &(gdisp.scaler[sel]);
+
+            	in_scan.field = FALSE;
+            	in_scan.bottom = FALSE;
+
+            	in_type.fmt= Scaler_sw_para_to_reg(0,scaler->in_fb.format);
+            	in_type.mod= Scaler_sw_para_to_reg(1,scaler->in_fb.mode);
+            	in_type.ps= Scaler_sw_para_to_reg(2,(__u8)scaler->in_fb.seq);
+            	in_type.byte_seq = 0;
+            	in_type.sample_method = 0;
+
+            	in_size.src_width = scaler->in_fb.size.width;
+            	in_size.src_height = scaler->in_fb.size.height;
+            	in_size.x_off = scaler->src_win.x;
+            	in_size.y_off = scaler->src_win.y;
+            	in_size.scal_width = scaler->src_win.width;
+            	in_size.scal_height = scaler->src_win.height;
+
+            	out_scan.field = (gdisp.screen[sel].iep_status & DE_FLICKER_USED)?FALSE: gdisp.screen[sel].b_out_interlace;
+
+            	out_type.byte_seq = scaler->out_fb.seq;
+            	out_type.fmt = scaler->out_fb.format;
+
+            	out_size.width = scaler->out_size.width;
+            	out_size.height = scaler->out_size.height;
+
+                DE_SCAL_Set_Scaling_Coef(sel, &in_scan, &in_size, &in_type, &out_scan, &out_size, &out_type, scaler->smooth_mode);
+
+                gdisp.scaler[i].coef_change = FALSE;
+            }
         }
         DE_BE_Cfg_Ready(sel);
 		gdisp.screen[sel].have_cfg_reg = TRUE;
@@ -107,7 +149,7 @@ void LCD_vbi_event_proc(__u32 sel, __u32 tcon_index)
     return ;
 }
 
-void LCD_line_event_proc(__u32 sel, __u32 tcon_index)
+void LCD_line_event_proc(__u32 sel)
 {
 	if(gdisp.screen[sel].have_cfg_reg)
 	{
diff --git a/drivers/video/sunxi/disp/de_bsp_sun5i/de/disp_event.h b/drivers/video/sunxi/disp/de_bsp_sun5i/de/disp_event.h
index 60229a0..7c04616 100644
--- a/drivers/video/sunxi/disp/de_bsp_sun5i/de/disp_event.h
+++ b/drivers/video/sunxi/disp/de_bsp_sun5i/de/disp_event.h
@@ -30,7 +30,7 @@
 
 
 void LCD_vbi_event_proc(__u32 sel, __u32 tcon_index);
-void LCD_line_event_proc(__u32 sel, __u32 tcon_index);
+void LCD_line_event_proc(__u32 sel);
 __s32 BSP_disp_cfg_start(__u32 sel);
 __s32 BSP_disp_cfg_finish(__u32 sel);
 
diff --git a/drivers/video/sunxi/disp/de_bsp_sun5i/de/disp_hdmi.c b/drivers/video/sunxi/disp/de_bsp_sun5i/de/disp_hdmi.c
index b0e33cc..356c8a8 100644
--- a/drivers/video/sunxi/disp/de_bsp_sun5i/de/disp_hdmi.c
+++ b/drivers/video/sunxi/disp/de_bsp_sun5i/de/disp_hdmi.c
@@ -62,7 +62,7 @@ __s32 BSP_disp_hdmi_open(__u32 sel)
 		Image_open(sel);//set image normal channel start bit , because every de_clk_off( )will reset this bit
     	disp_clk_cfg(sel,DISP_OUTPUT_TYPE_HDMI, tv_mod);
 
-        BSP_disp_set_output_csc(sel, DISP_OUTPUT_TYPE_HDMI);
+        BSP_disp_set_output_csc(sel, DISP_OUTPUT_TYPE_HDMI, gdisp.screen[sel].iep_status&DRC_USED);
     	DE_BE_set_display_size(sel, tv_mode_to_width(tv_mod), tv_mode_to_height(tv_mod));
     	DE_BE_Output_Select(sel, sel);
     	DE_BE_Set_Outitl_enable(sel, Disp_get_screen_scan_mode(tv_mod));
diff --git a/drivers/video/sunxi/disp/de_bsp_sun5i/de/disp_lcd.c b/drivers/video/sunxi/disp/de_bsp_sun5i/de/disp_lcd.c
index 828d450..413eb81 100644
--- a/drivers/video/sunxi/disp/de_bsp_sun5i/de/disp_lcd.c
+++ b/drivers/video/sunxi/disp/de_bsp_sun5i/de/disp_lcd.c
@@ -1216,27 +1216,16 @@ __s32 Disp_lcdc_event_proc(void *parg)
     __u32 sel = (__u32)parg;
 
     lcdc_flags=LCDC_query_int(sel);
+    LCDC_clear_int(sel,lcdc_flags);
 
     if(lcdc_flags & LCDC_VBI_LCD)
     {
-        LCDC_clear_int(sel,LCDC_VBI_LCD);
         LCD_vbi_event_proc(sel, 0);
     }
     if(lcdc_flags & LCDC_VBI_HD)
     {
-        LCDC_clear_int(sel,LCDC_VBI_HD);
         LCD_vbi_event_proc(sel, 1);
     }
-    if(lcdc_flags & LCDC_LTI_LCD_FLAG)
-    {
-        LCDC_clear_int(sel,LCDC_LTI_LCD_FLAG);
-        LCD_line_event_proc(sel, 0);
-    }
-    if(lcdc_flags & LCDC_LTI_HD_FLAG)
-    {
-        LCDC_clear_int(sel,LCDC_LTI_HD_FLAG);
-        LCD_line_event_proc(sel, 1);
-    }
 
     return OSAL_IRQ_RETURN;
 }
@@ -1690,7 +1679,7 @@ __s32 BSP_disp_lcd_open_before(__u32 sel)
     {
         TCON1_cfg_ex(sel,(__panel_para_t*)&gpanel_info[sel]);
     }
-    BSP_disp_set_output_csc(sel, DISP_OUTPUT_TYPE_LCD);
+    BSP_disp_set_output_csc(sel,DISP_OUTPUT_TYPE_LCD,gdisp.screen[sel].iep_status&DRC_USED);
     DE_BE_set_display_size(sel, gpanel_info[sel].lcd_x, gpanel_info[sel].lcd_y);
     DE_BE_Output_Select(sel, sel);
 
@@ -1707,6 +1696,7 @@ __s32 BSP_disp_lcd_open_after(__u32 sel)
     gdisp.screen[sel].status |= LCD_ON;
     gdisp.screen[sel].output_type = DISP_OUTPUT_TYPE_LCD;
     Lcd_Panel_Parameter_Check(sel);
+    Disp_drc_enable(sel, TRUE);
 #ifdef __LINUX_OSAL__
     Display_set_fb_timming(sel);
 #endif
@@ -1722,6 +1712,7 @@ __s32 BSP_disp_lcd_close_befor(__u32 sel)
 {
 	close_flow[sel].func_num = 0;
 	lcd_panel_fun[sel].cfg_close_flow(sel);
+	Disp_drc_enable(sel, 2);	//must close immediately, cause vbi may not come
 
 	gdisp.screen[sel].status &= LCD_OFF;
 	gdisp.screen[sel].output_type = DISP_OUTPUT_TYPE_NONE;
@@ -1762,7 +1753,7 @@ __s32 BSP_disp_lcd_xy_switch(__u32 sel, __s32 mode)
 //setting:  0,       1,      2,....  255,   256
 //pol==0:  0,       1,      2,....  255,   256
 //pol==1: 256,    255,    254, ...   1,   0
-__s32 BSP_disp_lcd_set_bright(__u32 sel, __u32  bright)
+__s32 BSP_disp_lcd_set_bright(__u32 sel, __u32 bright, __u32 from_iep)
 {
     __u32 duty_ns;
 
@@ -1770,16 +1761,18 @@ __s32 BSP_disp_lcd_set_bright(__u32 sel, __u32  bright)
     {
         if(gpanel_info[sel].lcd_pwm_pol == 0)
         {
-            duty_ns = (bright * gdisp.pwm[gpanel_info[sel].lcd_pwm_ch].period_ns + 128) / 256;
+            duty_ns = (bright * gdisp.screen[sel].lcd_bright_dimming * gdisp.pwm[gpanel_info[sel].lcd_pwm_ch].period_ns / 256 + 128) / 256;
         }
         else
         {
-            duty_ns = ((256- bright) * gdisp.pwm[gpanel_info[sel].lcd_pwm_ch].period_ns + 128) / 256;
+            duty_ns = ((256- bright * gdisp.screen[sel].lcd_bright_dimming/256 ) * gdisp.pwm[gpanel_info[sel].lcd_pwm_ch].period_ns + 128) / 256;
         }
         pwm_set_duty_ns(gpanel_info[sel].lcd_pwm_ch, duty_ns);
     }
+    if(!from_iep)
+    {
     gdisp.screen[sel].lcd_bright = bright;
-
+	}
     return DIS_SUCCESS;
 }
 
@@ -1914,6 +1907,55 @@ __u32 BSP_disp_get_cur_line(__u32 sel)
     return line;
 }
 
+__s32 BSP_disp_close_lcd_backlight(__u32 sel)
+{
+    user_gpio_set_t  gpio_info[1];
+    __hdle hdl;
+    int value,ret;
+    char primary_key[20];
+    sprintf(primary_key, "lcd%d_para", sel);
+    value = 1;
+    ret = OSAL_Script_FetchParser_Data(primary_key, "lcd_bl_en_used", &value, 1);
+    if(value == 0)
+    {
+        DE_INF("%s.lcd_bl_en is not used\n", primary_key);
+    }
+    else
+    {
+        ret = OSAL_Script_FetchParser_Data(primary_key,"lcd_bl_en", (int *)gpio_info, sizeof(user_gpio_set_t)/sizeof(int));
+        if(ret < 0)
+        {
+            DE_INF("%s.lcd_bl_en not exist\n", primary_key);
+        }
+        else
+        {
+            gpio_info->data = (gpio_info->data==0)?1:0;
+            hdl = OSAL_GPIO_Request(gpio_info, 1);
+            OSAL_GPIO_Release(hdl, 2);
+        }
+    }
+    value = 1;
+    ret = OSAL_Script_FetchParser_Data(primary_key, "lcd_pwm_used", &value, 1);
+    if(value == 0)
+    {
+        DE_INF("%s.lcd_pwm is not used\n", primary_key);
+    }
+    else
+    {
+        ret = OSAL_Script_FetchParser_Data(primary_key,"lcd_pwm", (int *)gpio_info, sizeof(user_gpio_set_t)/sizeof(int));
+        if(ret < 0)
+        {
+            DE_INF("%s.lcd_pwm not exist\n", primary_key);
+        }
+        else
+        {
+            gpio_info->mul_sel = 0;
+            hdl = OSAL_GPIO_Request(gpio_info, 1);
+            OSAL_GPIO_Release(hdl, 2);
+        }
+    }
+    return 0;
+}
 #ifdef __LINUX_OSAL__
 EXPORT_SYMBOL(LCD_OPEN_FUNC);
 EXPORT_SYMBOL(LCD_CLOSE_FUNC);
diff --git a/drivers/video/sunxi/disp/de_bsp_sun5i/de/disp_lcd.h b/drivers/video/sunxi/disp/de_bsp_sun5i/de/disp_lcd.h
index 68e5c86..852398b 100644
--- a/drivers/video/sunxi/disp/de_bsp_sun5i/de/disp_lcd.h
+++ b/drivers/video/sunxi/disp/de_bsp_sun5i/de/disp_lcd.h
@@ -27,6 +27,7 @@
 
 #include "disp_display_i.h"
 
+extern __panel_para_t		gpanel_info[2];
 
 __s32 Disp_lcdc_init(__u32 sel);
 __s32 Disp_lcdc_exit(__u32 sel);
diff --git a/drivers/video/sunxi/disp/de_bsp_sun5i/de/disp_scaler.c b/drivers/video/sunxi/disp/de_bsp_sun5i/de/disp_scaler.c
index a1be3fd..1437828 100644
--- a/drivers/video/sunxi/disp/de_bsp_sun5i/de/disp_scaler.c
+++ b/drivers/video/sunxi/disp/de_bsp_sun5i/de/disp_scaler.c
@@ -271,16 +271,22 @@ __s32 Scaler_event_proc(__s32 irq, void *parg)
 __s32 Scaler_event_proc(void *parg)
 #endif
 {
-    __u8 fe_intflags;
+    __u8 fe_intflags, be_intflags;
     __u32 sel = (__u32)parg;
 
     fe_intflags = DE_SCAL_QueryINT(sel);
+    be_intflags = DE_BE_QueryINT(sel);
+    DE_SCAL_ClearINT(sel,fe_intflags);
+    DE_BE_ClearINT(sel,be_intflags);
 
-	/*DE_INF("scaler %d interrupt, scal_int_status:0x%x!\n", sel, fe_intflags);*/
+    DE_INF("scaler %d interrupt, scal_int_status:0x%x!\n", sel, fe_intflags);
 
+    if(be_intflags & DE_IMG_REG_LOAD_FINISH)
+    {
+        LCD_line_event_proc(sel);
+    }
     if(fe_intflags & DE_WB_END_IE)
     {
-        DE_SCAL_ClearINT(sel,DE_WB_END_IE);
         DE_SCAL_DisableINT(sel,DE_FE_INTEN_ALL);
 #ifdef __LINUX_OSAL__
         if(gdisp.scaler[sel].b_scaler_finished == 1 && (&gdisp.scaler[sel].scaler_queue != NULL))
@@ -481,7 +487,7 @@ __s32 Scaler_Set_Framebuffer(__u32 sel, __disp_fb_t *pfb)//keep the source windo
 	in_scan.field = FALSE;
 	in_scan.bottom = FALSE;
 
-	out_scan.field = (gdisp.screen[screen_index].de_flicker_status & DE_FLICKER_USED)?FALSE: gdisp.screen[screen_index].b_out_interlace;
+	out_scan.field = (gdisp.screen[screen_index].iep_status & DE_FLICKER_USED)?FALSE: gdisp.screen[screen_index].b_out_interlace;
 
 	if(scaler->in_fb.cs_mode > DISP_VXYCC)
 	{
@@ -523,7 +529,7 @@ __s32 Scaler_Set_Framebuffer(__u32 sel, __disp_fb_t *pfb)//keep the source windo
     {
 	    DE_SCAL_Set_CSC_Coef(sel, scaler->in_fb.cs_mode, DISP_BT601, get_fb_type(scaler->in_fb.format), DISP_FB_TYPE_RGB, scaler->in_fb.br_swap, 0);
 	}
-	DE_SCAL_Set_Scaling_Coef(sel, &in_scan, &in_size, &in_type, &out_scan, &out_size, &out_type, scaler->smooth_mode);
+	gdisp.scaler[sel].coef_change = 1;
 	return DIS_SUCCESS;
 }
 
@@ -590,7 +596,7 @@ __s32 Scaler_Set_Output_Size(__u32 sel, __disp_rectsz_t *size)
 	in_scan.field = FALSE;
 	in_scan.bottom = FALSE;
 
-	out_scan.field = (gdisp.screen[screen_index].de_flicker_status == DE_FLICKER_USED)?FALSE: gdisp.screen[screen_index].b_out_interlace;
+	out_scan.field = (gdisp.screen[screen_index].iep_status == DE_FLICKER_USED)?FALSE: gdisp.screen[screen_index].b_out_interlace;
 
 	DE_SCAL_Set_Scaling_Factor(sel, &in_scan, &in_size, &in_type, &out_scan, &out_size, &out_type);
 	if(scaler->enhance_en == TRUE)
@@ -601,7 +607,7 @@ __s32 Scaler_Set_Output_Size(__u32 sel, __disp_rectsz_t *size)
     {
 	    DE_SCAL_Set_CSC_Coef(sel, scaler->in_fb.cs_mode, DISP_BT601, get_fb_type(scaler->in_fb.format), DISP_FB_TYPE_RGB, scaler->in_fb.br_swap, 0);
 	}
-	DE_SCAL_Set_Scaling_Coef(sel, &in_scan, &in_size, &in_type, &out_scan, &out_size, &out_type, scaler->smooth_mode);
+	gdisp.scaler[sel].coef_change = 1;
 	DE_SCAL_Set_Out_Size(sel, &out_scan, &out_type, &out_size);
 
 	return DIS_SUCCESS;
@@ -653,7 +659,7 @@ __s32 Scaler_Set_SclRegn(__u32 sel, __disp_rect_t *scl_rect)
 	in_scan.field = FALSE;
 	in_scan.bottom = FALSE;
 
-	out_scan.field = (gdisp.screen[screen_index].de_flicker_status == DE_FLICKER_USED)?FALSE: gdisp.screen[screen_index].b_out_interlace;
+	out_scan.field = (gdisp.screen[screen_index].iep_status == DE_FLICKER_USED)?FALSE: gdisp.screen[screen_index].b_out_interlace;
 
 	if(scaler->in_fb.cs_mode > DISP_VXYCC)
 	{
@@ -687,7 +693,7 @@ __s32 Scaler_Set_SclRegn(__u32 sel, __disp_rect_t *scl_rect)
 	    DE_SCAL_Config_Src(sel,&scal_addr,&in_size,&in_type,FALSE,FALSE);
 	}
 	DE_SCAL_Set_Scaling_Factor(sel, &in_scan, &in_size, &in_type, &out_scan, &out_size, &out_type);
-	DE_SCAL_Set_Scaling_Coef(sel, &in_scan, &in_size, &in_type, &out_scan, &out_size, &out_type, scaler->smooth_mode);
+	gdisp.scaler[sel].coef_change = 1;
 
 	return DIS_SUCCESS;
 }
@@ -764,7 +770,7 @@ __s32 Scaler_Set_Para(__u32 sel, __disp_scaler_t *scl)
 	in_scan.field = FALSE;
 	in_scan.bottom = FALSE;
 
-	out_scan.field = (gdisp.screen[screen_index].de_flicker_status & DE_FLICKER_USED)?FALSE: gdisp.screen[screen_index].b_out_interlace;
+	out_scan.field = (gdisp.screen[screen_index].iep_status & DE_FLICKER_USED)?FALSE: gdisp.screen[screen_index].b_out_interlace;
 
 	if(scaler->in_fb.cs_mode > DISP_VXYCC)
 	{
@@ -807,7 +813,7 @@ __s32 Scaler_Set_Para(__u32 sel, __disp_scaler_t *scl)
     {
 	    DE_SCAL_Set_CSC_Coef(sel, scaler->in_fb.cs_mode, DISP_BT601, get_fb_type(scaler->in_fb.format), DISP_FB_TYPE_RGB, scaler->in_fb.br_swap, 0);
 	}
-	DE_SCAL_Set_Scaling_Coef(sel, &in_scan, &in_size, &in_type, &out_scan, &out_size, &out_type, scaler->smooth_mode);
+	gdisp.scaler[sel].coef_change = 1;
 	DE_SCAL_Set_Out_Format(sel, &out_type);
 	DE_SCAL_Set_Out_Size(sel, &out_scan,&out_type, &out_size);
 
@@ -852,7 +858,7 @@ __s32 Scaler_Set_Outitl(__u32 sel,  __bool enable)
 
 	DE_SCAL_Set_Init_Phase(sel, &in_scan, &in_size, &in_type, &out_scan, &out_size, &out_type, FALSE);
 	DE_SCAL_Set_Scaling_Factor(sel, &in_scan, &in_size, &in_type, &out_scan, &out_size, &out_type);
-	DE_SCAL_Set_Scaling_Coef(sel, &in_scan, &in_size, &in_type, &out_scan, &out_size, &out_type,  scaler->smooth_mode);
+	gdisp.scaler[sel].coef_change = 1;
 	DE_SCAL_Set_Out_Size(sel, &out_scan,&out_type, &out_size);
 
 	return DIS_SUCCESS;
@@ -895,9 +901,9 @@ __s32 BSP_disp_scaler_set_smooth(__u32 sel, __disp_video_smooth_t  mode)
 	in_scan.field = FALSE;
 	in_scan.bottom = FALSE;
 
-	out_scan.field = (gdisp.screen[screen_index].de_flicker_status == DE_FLICKER_USED)?FALSE: gdisp.screen[screen_index].b_out_interlace;
+	out_scan.field = (gdisp.screen[screen_index].iep_status == DE_FLICKER_USED)?FALSE: gdisp.screen[screen_index].b_out_interlace;
 
-	DE_SCAL_Set_Scaling_Coef(sel, &in_scan, &in_size, &in_type, &out_scan, &out_size, &out_type, scaler->smooth_mode);
+	gdisp.scaler[sel].coef_change = 1;
     scaler->b_reg_change = TRUE;
 
 	return DIS_SUCCESS;
diff --git a/drivers/video/sunxi/disp/de_bsp_sun5i/de/disp_scaler.h b/drivers/video/sunxi/disp/de_bsp_sun5i/de/disp_scaler.h
index f57bb3b..cb3bfa4 100644
--- a/drivers/video/sunxi/disp/de_bsp_sun5i/de/disp_scaler.h
+++ b/drivers/video/sunxi/disp/de_bsp_sun5i/de/disp_scaler.h
@@ -75,6 +75,7 @@ typedef struct
     wait_queue_head_t       scaler_queue;
     __bool                  b_scaler_finished;
 #endif
+    __bool                      coef_change;
 }__disp_scaler_t;
 
 extern __disp_scaler_t    gscl;
diff --git a/drivers/video/sunxi/disp/de_bsp_sun5i/de/disp_sprite.c b/drivers/video/sunxi/disp/de_bsp_sun5i/de/disp_sprite.c
index f535a67..79606c4 100644
--- a/drivers/video/sunxi/disp/de_bsp_sun5i/de/disp_sprite.c
+++ b/drivers/video/sunxi/disp/de_bsp_sun5i/de/disp_sprite.c
@@ -435,7 +435,7 @@ __s32 BSP_disp_sprite_set_format(__u32 sel, __disp_pixel_fmt_t format, __disp_pi
 {
 	gsprite[sel].format = format;
 	gsprite[sel].pixel_seq = pixel_seq;
-	DE_BE_Sprite_Set_Format(sel, pixel_seq,(format==DISP_FORMAT_ARGB8888)?0:1);
+	DE_BE_Sprite_Set_Format(sel, (pixel_seq==DISP_SEQ_ARGB)?0:1,(format==DISP_FORMAT_ARGB8888)?0:1);
 
 	return DIS_SUCCESS;
 }
diff --git a/drivers/video/sunxi/disp/de_bsp_sun5i/de/disp_tv.c b/drivers/video/sunxi/disp/de_bsp_sun5i/de/disp_tv.c
index f1e0c45..2519825 100644
--- a/drivers/video/sunxi/disp/de_bsp_sun5i/de/disp_tv.c
+++ b/drivers/video/sunxi/disp/de_bsp_sun5i/de/disp_tv.c
@@ -222,7 +222,7 @@ __s32 BSP_disp_tv_open(__u32 sel)
         tve_clk_on(sel);
         lcdc_clk_on(sel);
 
-        BSP_disp_set_output_csc(sel, DISP_OUTPUT_TYPE_TV);
+        BSP_disp_set_output_csc(sel, DISP_OUTPUT_TYPE_TV,gdisp.screen[sel].iep_status&DRC_USED);
         DE_BE_set_display_size(sel, tv_mode_to_width(tv_mod), tv_mode_to_height(tv_mod));
         DE_BE_Output_Select(sel, sel);
 		DE_BE_Set_Outitl_enable(sel, Disp_get_screen_scan_mode(tv_mod));
@@ -250,6 +250,7 @@ __s32 BSP_disp_tv_open(__u32 sel)
         Disp_TVEC_Open(sel);
 
         Disp_Switch_Dram_Mode(DISP_OUTPUT_TYPE_TV, tv_mod);
+        Disp_de_flicker_enable(sel, TRUE);
 #ifdef __LINUX_OSAL__
         {
             user_gpio_set_t  gpio_info[1];
@@ -301,6 +302,7 @@ __s32 BSP_disp_tv_close(__u32 sel)
         tve_clk_off(sel);
         image_clk_off(sel);
         lcdc_clk_off(sel);
+        Disp_de_flicker_enable(sel, 2);	//must close immediately, because vbi may not come
 		DE_BE_Set_Outitl_enable(sel, FALSE);
         for(scaler_index=0; scaler_index<2; scaler_index++)
         {
@@ -366,23 +368,20 @@ __s32 BSP_disp_tv_get_mode(__u32 sel)
 
 __s32 BSP_disp_tv_get_interface(__u32 sel)
 {
-    __u8 dac[4];
+    __u8 dac[4] = {0};
     __s32 i = 0;
 	__u32  ret = DISP_TV_NONE;
 
     for(i=0; i<4; i++)
     {
         dac[i] = TVE_get_dac_status(i);
-    }
+        if(dac[i]>1)
 
-    if(dac[0]>1 || dac[1]>1 || dac[2]>1 || dac[3]>1)
     {
-        DE_WRN("shor to ground\n");
+            DE_WRN("dac %d short to ground\n", i);
+            dac[i] = 0;
     }
-    else
-    {
-        for(i=0; i<4; i++)
-        {
+
             if(gdisp.screen[sel].dac_source[i] == DISP_TV_DAC_SRC_COMPOSITE && dac[i] == 1)
             {
                 ret |= DISP_TV_CVBS;
@@ -396,7 +395,6 @@ __s32 BSP_disp_tv_get_interface(__u32 sel)
                 ret |= DISP_TV_SVIDEO;
             }
         }
-    }
 
     return  ret;
 }
@@ -405,7 +403,7 @@ __s32 BSP_disp_tv_get_interface(__u32 sel)
 
 __s32 BSP_disp_tv_get_dac_status(__u32 sel, __u32 index)
 {
-	return gdisp.screen[sel].dac_source[index];
+	return TVE_get_dac_status(index);
 }
 
 __s32 BSP_disp_tv_set_dac_source(__u32 sel, __u32 index, __disp_tv_dac_source source)
diff --git a/drivers/video/sunxi/disp/de_bsp_sun5i/de/disp_vga.c b/drivers/video/sunxi/disp/de_bsp_sun5i/de/disp_vga.c
index 9a3ce8b..ad9ef9f 100644
--- a/drivers/video/sunxi/disp/de_bsp_sun5i/de/disp_vga.c
+++ b/drivers/video/sunxi/disp/de_bsp_sun5i/de/disp_vga.c
@@ -59,7 +59,7 @@ __s32 BSP_disp_vga_open(__u32 sel)
     	disp_clk_cfg(sel,DISP_OUTPUT_TYPE_VGA, vga_mode);
     	Disp_lcdc_pin_cfg(sel, DISP_OUTPUT_TYPE_VGA, 1);
 
-        BSP_disp_set_output_csc(sel, DISP_OUTPUT_TYPE_VGA);
+        BSP_disp_set_output_csc(sel, DISP_OUTPUT_TYPE_VGA, gdisp.screen[sel].iep_status&DRC_USED);
         DE_BE_set_display_size(sel, vga_mode_to_width(vga_mode), vga_mode_to_height(vga_mode));
         DE_BE_Output_Select(sel, sel);
     	TCON1_set_vga_mode(sel,vga_mode);
diff --git a/drivers/video/sunxi/disp/de_bsp_sun5i/de/disp_video.c b/drivers/video/sunxi/disp/de_bsp_sun5i/de/disp_video.c
index 6424af7..888fd0b 100644
--- a/drivers/video/sunxi/disp/de_bsp_sun5i/de/disp_video.c
+++ b/drivers/video/sunxi/disp/de_bsp_sun5i/de/disp_video.c
@@ -69,9 +69,9 @@ static __inline __s32 Hal_Set_Frame(__u32 sel, __u32 tcon_index, __u32 id)
 
     	if(g_video[sel][id].video_cur.interlace == TRUE)
     	{
-    		g_video[sel][id].dit_enable = TRUE;
+    		g_video[sel][id].dit_enable = FALSE;
 
-            g_video[sel][id].fetch_field = FALSE;
+            g_video[sel][id].fetch_field = TRUE;
         	if(g_video[sel][id].display_cnt == 0)
         	{
         	    g_video[sel][id].fetch_bot = (g_video[sel][id].video_cur.top_field_first)?0:1;
@@ -113,6 +113,7 @@ static __inline __s32 Hal_Set_Frame(__u32 sel, __u32 tcon_index, __u32 id)
     		}
     		else
     		{
+    		    g_video[sel][id].fetch_bot = FALSE;
         	    g_video[sel][id].dit_mode = DIT_MODE_WEAVE;
         	    g_video[sel][id].tempdiff_en = FALSE;
         	    g_video[sel][id].diagintp_en = FALSE;
@@ -154,7 +155,7 @@ static __inline __s32 Hal_Set_Frame(__u32 sel, __u32 tcon_index, __u32 id)
     	in_scan.field = g_video[sel][id].fetch_field;
     	in_scan.bottom = g_video[sel][id].fetch_bot;
 
-    	out_scan.field = (gdisp.screen[sel].de_flicker_status == DE_FLICKER_USED)?0: gdisp.screen[sel].b_out_interlace;
+    	out_scan.field = (gdisp.screen[sel].iep_status == DE_FLICKER_USED)?0: gdisp.screen[sel].b_out_interlace;
 
     	if(scaler->out_fb.cs_mode > DISP_VXYCC)
     	{
@@ -188,10 +189,6 @@ static __inline __s32 Hal_Set_Frame(__u32 sel, __u32 tcon_index, __u32 id)
     	    DE_SCAL_Config_Src(scaler_index,&scal_addr,&in_size,&in_type,FALSE,FALSE);
     	}
 
-        if(g_video[sel][id].dit_enable == TRUE && gdisp.screen[sel].de_flicker_status == DE_FLICKER_USED)
-        {
-            Disp_de_flicker_enable(sel, FALSE);
-        }
     	DE_SCAL_Set_Init_Phase(scaler_index, &in_scan, &in_size, &in_type, &out_scan, &out_size, &out_type, g_video[sel][id].dit_enable);
     	DE_SCAL_Set_Scaling_Factor(scaler_index, &in_scan, &in_size, &in_type, &out_scan, &out_size, &out_type);
     	DE_SCAL_Set_Scaling_Coef(scaler_index, &in_scan, &in_size, &in_type, &out_scan, &out_size, &out_type,  scaler->smooth_mode);
diff --git a/drivers/video/sunxi/disp/de_bsp_sun5i/de/ebios/de_be.c b/drivers/video/sunxi/disp/de_bsp_sun5i/de/ebios/de_be.c
index 1db4795..9511d24 100644
--- a/drivers/video/sunxi/disp/de_bsp_sun5i/de/ebios/de_be.c
+++ b/drivers/video/sunxi/disp/de_bsp_sun5i/de/ebios/de_be.c
@@ -304,12 +304,19 @@ __s32 DE_BE_Set_ColorKey(__u32 sel, __disp_color_t ck_max,__disp_color_t  ck_min
     return 0;
 }
 
+__s32 DE_BE_reg_auto_load_en(__u32 sel, __u32 en)
+{
+    __u32 tmp;
+    tmp = DE_BE_RUINT32(sel, DE_BE_FRMBUF_CTL_OFF);
+    DE_BE_WUINT32(sel, DE_BE_FRMBUF_CTL_OFF, tmp | ((1-en)<<1));//bit1:enable, bit0:ready
+    return 0;
+}
 __s32 DE_BE_Cfg_Ready(__u32 sel)
 {
     __u32 tmp;
 
     tmp = DE_BE_RUINT32(sel, DE_BE_FRMBUF_CTL_OFF);
-    DE_BE_WUINT32(sel, DE_BE_FRMBUF_CTL_OFF, tmp | (0x1<<1) | 0x1);//bit1:enable, bit0:ready
+    DE_BE_WUINT32(sel, DE_BE_FRMBUF_CTL_OFF, tmp | 0x1);//bit1:enable, bit0:ready
 
     return 0;
 }
@@ -352,11 +359,9 @@ __s32 DE_BE_Sprite_Set_Global_Alpha(__u32 sel, __u8 alpha_val)
 
 __s32 DE_BE_Sprite_Block_Set_Pos(__u32 sel, __u8 blk_idx,__s16 x,__s16 y)
 {
-	__u32 reg = 0;
 
-	reg = DE_BE_RUINT32IDX(sel, DE_BE_SPRITE_POS_CTRL_OFF,blk_idx);
 
-  	DE_BE_WUINT32IDX(sel, DE_BE_SPRITE_POS_CTRL_OFF,blk_idx,reg | ((y&0xffff)<<16) | (x&0xffff));
+  	DE_BE_WUINT32IDX(sel, DE_BE_SPRITE_POS_CTRL_OFF,blk_idx,((y&0xffff)<<16) | (x&0xffff));
    	return 0;
 }
 
@@ -366,7 +371,7 @@ __s32 DE_BE_Sprite_Block_Set_Size(__u32 sel, __u8 blk_idx,__u32 xsize,__u32 ysiz
 
 	tmp = DE_BE_RUINT32IDX(sel, DE_BE_SPRITE_ATTR_CTRL_OFF,blk_idx) & 0x0000003f;
 
-	DE_BE_WUINT32IDX(sel, DE_BE_SPRITE_ATTR_CTRL_OFF,blk_idx,tmp | (ysize<<20) | (xsize<<8));
+	DE_BE_WUINT32IDX(sel, DE_BE_SPRITE_ATTR_CTRL_OFF,blk_idx,tmp | ((ysize-1)<<20) | ((xsize-1)<<8));
 	return 0;
 }
 
@@ -379,7 +384,9 @@ __s32 DE_BE_Sprite_Block_Set_fb(__u32 sel, __u8 blk_idx,__u32 addr, __u32 line_w
 
 __s32 DE_BE_Sprite_Block_Set_Next_Id(__u32 sel, __u8 blk_idx,__u8 next_blk_id)
 {
-	DE_BE_WUINT32IDX(sel, DE_BE_SPRITE_ATTR_CTRL_OFF,blk_idx,next_blk_id);
+    __u32 tmp = 0;
+    tmp = DE_BE_RUINT32IDX(sel, DE_BE_SPRITE_ATTR_CTRL_OFF,blk_idx) & 0xffffffc0;
+	DE_BE_WUINT32IDX(sel, DE_BE_SPRITE_ATTR_CTRL_OFF,blk_idx,tmp | next_blk_id);
 	return 0;
 }
 
@@ -409,69 +416,182 @@ __s32 DE_BE_Sprite_Set_Palette_Table(__u32 sel, __u32 address, __u32 offset, __u
 //brightness -100~100
 //contrast -100~100
 //saturaion -100~100
-__s32 DE_BE_Set_Enhance(__u8 sel,__u32 brightness, __u32 contrast, __u32 saturaion)
-{
-	__s32 Rr,Rg,Rb,Rc;
-	__s32 Gr,Gg,Gb,Gc;
-	__s32 Br,Bg,Bb,Bc;
-	__s32 max_rgb = (1<<14) - 1;
-	__s32 min_rgb = 0 - ((2<<14) - 1);
-	__s32 max_c = (1<<15) - 1;
-	__s32 min_c = 0 - ((1<<15) - 1);
+__s32 DE_BE_Set_Enhance(__u8 sel, __u32 out_csc, __u32 out_color_range, __s32 brightness, __s32 contrast, __s32 saturaion, __s32 hue)
+{
+	__s32 i_bright;
+	__s32 i_contrast;
+	__s32 i_saturaion;
+	__s32 i_hue;
+	__scal_matrix4x4 matrixEn;
+	__scal_matrix4x4 *ptmatrix;
+	__scal_matrix4x4 matrixresult;
+	__s32 *pt;
+	__u32 i;
+	__s32 sinv, cosv;	//sin_tab: 7 bit fractional
 
 	brightness = brightness>100?100:(brightness<0?0:brightness);
 	contrast = contrast>100?100:(contrast<0?0:contrast);
 	saturaion = saturaion>100?100:(saturaion<0?0:saturaion);
+	hue = hue>100?100:(hue<0?0:saturaion);
+
+	i_bright = (__s32)(brightness*64/100);
+	i_saturaion = (__s32)(saturaion*64/100);
+	i_contrast = (__s32)(contrast*64/100);
+	i_hue = (__s32)(hue*64/100);
+
+	sinv = image_enhance_tab[8*12 + (i_hue&0x3f)];
+	cosv = image_enhance_tab[8*12 + 8*8 + (i_hue&0x3f)];
+
+	matrixEn.x00 = i_contrast << 5;
+	matrixEn.x01 = 0;
+	matrixEn.x02 = 0;
+	matrixEn.x03 = (((i_bright - 32) + 16) <<10) - ( i_contrast << 9);
+	matrixEn.x10 = 0;
+	matrixEn.x11 = (i_contrast * i_saturaion * cosv) >> 7;
+	matrixEn.x12 = (i_contrast * i_saturaion * sinv) >> 7;
+	matrixEn.x13 = (1<<17) - ((matrixEn.x11 + matrixEn.x12)<<7);
+	matrixEn.x20 = 0;
+	matrixEn.x21 = (-i_contrast * i_saturaion * sinv)>>7;
+	matrixEn.x22 = (i_contrast * i_saturaion * cosv) >> 7;
+	matrixEn.x23 = (1<<17) - ((matrixEn.x22 + matrixEn.x21)<<7);
+	matrixEn.x30 = 0;
+	matrixEn.x31 = 0;
+	matrixEn.x32 = 0;
+	matrixEn.x33 = 1024;
+
+	if(out_csc == 1) //rgb to yuv
+	{
+		ptmatrix = (__scal_matrix4x4 *)((__u32)image_enhance_tab + (2<<7));
+		iDE_SCAL_Matrix_Mul(matrixEn, *ptmatrix, &matrixresult);
+	}
+	else if(out_csc == 0)  //rgb to rgb
+	{
+		ptmatrix = (__scal_matrix4x4 *)((__u32)image_enhance_tab + (2<<7));
+		iDE_SCAL_Matrix_Mul(*ptmatrix, matrixEn, &matrixresult);
+		ptmatrix = (__scal_matrix4x4 *)((__u32)image_enhance_tab + (2<<7) + 0x40);
+		iDE_SCAL_Matrix_Mul(*ptmatrix, matrixresult, &matrixresult);
+	}
+	else if(out_csc == 2)
+	{
+	    __scal_matrix4x4 matrix_16_255;
+
+#if 0
+	    //rgb to rgb
+		ptmatrix = (__scal_matrix4x4 *)((__u32)image_enhance_tab + (2<<7));
+		iDE_SCAL_Matrix_Mul(matrixEn, *ptmatrix, &matrixresult);
+		ptmatrix = (__scal_matrix4x4 *)((__u32)image_enhance_tab + (2<<7) + 0x40);
+		iDE_SCAL_Matrix_Mul(*ptmatrix, matrixresult, &matrixresult);
+
+        //rgb to igb
+        matrix_16_255.x00 = 0x0155;
+        matrix_16_255.x01 = 0x0155;
+        matrix_16_255.x02 = 0x0155;
+        matrix_16_255.x03 = 0;
+        matrix_16_255.x10 = 0;
+        matrix_16_255.x11 = 0x0400;
+        matrix_16_255.x12 = 0;
+        matrix_16_255.x13 = 0;
+        matrix_16_255.x20 = 0;
+        matrix_16_255.x21 = 0;
+        matrix_16_255.x22 = 0x0400;
+        matrix_16_255.x23 = 0;
+        matrix_16_255.x30 = 0;
+        matrix_16_255.x31 = 0;
+        matrix_16_255.x32 = 0;
+        matrix_16_255.x33 = 0;
+        iDE_SCAL_Matrix_Mul(matrix_16_255, matrixresult, &matrixresult);
+#else
+		matrix_16_255.x00 = 0x00C3;
+		matrix_16_255.x01 = 0x029A;
+		matrix_16_255.x02 = 0x00A4;
+		matrix_16_255.x03 = 0x0000;
+		matrix_16_255.x10 = 0xFFFFFF8C;
+		matrix_16_255.x11 = 0xFFFFFE74;
+		matrix_16_255.x12 = 0x0200;
+		matrix_16_255.x13 = 0x20000; //0x0800;
+		matrix_16_255.x20 = 0x0200;
+		matrix_16_255.x21 = 0xFFFFFE65;
+		matrix_16_255.x22 = 0xFFFFFF9B;
+		matrix_16_255.x23 = 0x20000; //0x0800;
+		matrix_16_255.x30 = 0x0000;
+		matrix_16_255.x31 = 0x0000;
+		matrix_16_255.x32 = 0x0000;
+		matrix_16_255.x33 = 0x0000;
+		ptmatrix = &matrix_16_255;
+		iDE_SCAL_Matrix_Mul(matrixEn, *ptmatrix, &matrixresult);
+#endif
+	}
+
+	if(out_color_range == 0)//[16,255]
+    {
+        __scal_matrix4x4 matrix_16_255;
+        matrix_16_255.x00 = 0x03c4;
+        matrix_16_255.x01 = 0;
+        matrix_16_255.x02 = 0;
+        matrix_16_255.x03 = 0x0100;
+        matrix_16_255.x10 = 0;
+        matrix_16_255.x11 = 0x03c4;
+        matrix_16_255.x12 = 0;
+        matrix_16_255.x13 = 0x0100;
+        matrix_16_255.x20 = 0;
+        matrix_16_255.x21 = 0;
+        matrix_16_255.x22 = 0x03c4;
+        matrix_16_255.x23 = 0x0100;
+        matrix_16_255.x30 = 0;
+        matrix_16_255.x31 = 0;
+        matrix_16_255.x32 = 0;
+        matrix_16_255.x33 = 0;
+        iDE_SCAL_Matrix_Mul(matrix_16_255, matrixresult, &matrixresult);
+    }
+	else if(out_color_range == 2)//[16,235]
+    {
+        __scal_matrix4x4 matrix_16_255;
+        matrix_16_255.x00 = 0x0370;
+        matrix_16_255.x01 = 0;
+        matrix_16_255.x02 = 0;
+        matrix_16_255.x03 = 0x0100;
+        matrix_16_255.x10 = 0;
+        matrix_16_255.x11 = 0x0370;
+        matrix_16_255.x12 = 0;
+        matrix_16_255.x13 = 0x0100;
+        matrix_16_255.x20 = 0;
+        matrix_16_255.x21 = 0;
+        matrix_16_255.x22 = 0x0370;
+        matrix_16_255.x23 = 0x0100;
+        matrix_16_255.x30 = 0;
+        matrix_16_255.x31 = 0;
+        matrix_16_255.x32 = 0;
+        matrix_16_255.x33 = 0;
+        iDE_SCAL_Matrix_Mul(matrix_16_255, matrixresult, &matrixresult);
+    }
 
-	brightness = (brightness-50) * 10;
-	saturaion = saturaion * 10 / 50;
-	contrast = contrast * 10 / 50;
-
-	Rr=(1164*183*contrast+1793*439*saturaion) / (1000*1000*10/1024);
-	Rg=(1164*614*contrast-1793*399*saturaion) / (1000*1000*10/1024);
-	Rb=(1164*62*contrast-1793*40*saturaion) / (1000*1000*10/1024);
-	Rc=((1164*(16*contrast*10+brightness*contrast-16*10*10))*0x10) / (1000*10*10);
-
-	Gr=(1164*183*contrast-534*439*saturaion+213*101*saturaion) / (1000*1000*10/1024);
-	Gg=(1164*614*contrast+534*399*saturaion+213*338*saturaion) / (1000*1000*10/1024);
-	Gb=(1164*62*contrast+534*40*saturaion-213*439*saturaion) / (1000*1000*10/1024);
-	Gc=((1164*(16*contrast*10+brightness*contrast-16*10*10))*0x10) / (1000*10*10);
-
-	Br=(1164*183*contrast-2115*101*saturaion) / (1000*1000*10/1024);
-	Bg=(1164*614*contrast-2115*338*saturaion) / (1000*1000*10/1024);
-	Bb=(1164*62*contrast+2115*439*saturaion) / (1000*1000*10/1024);
-	Bc=((1164*(16*contrast*10+brightness*contrast-16*10*10))*0x10) / (1000*10*10);
-
-	Rr = (Rr > max_rgb)?max_rgb:((Rr < min_rgb)?min_rgb:Rr);
-	Rg = (Rg > max_rgb)?max_rgb:((Rg < min_rgb)?min_rgb:Rg);
-	Rb = (Rb > max_rgb)?max_rgb:((Rb < min_rgb)?min_rgb:Rb);
-	Rc = (Rc > max_c)?max_c:((Rc < min_c)?min_c:Rc);
-
-	Gr = (Gr > max_rgb)?max_rgb:((Gr < min_rgb)?min_rgb:Gr);
-	Gg = (Gg > max_rgb)?max_rgb:((Gg < min_rgb)?min_rgb:Gg);
-	Gb = (Gb > max_rgb)?max_rgb:((Gb < min_rgb)?min_rgb:Gb);
-	Gc = (Gc > max_c)?max_c:((Gc < min_c)?min_c:Gc);
-
-	Br = (Br > max_rgb)?max_rgb:((Br < min_rgb)?min_rgb:Br);
-	Bg = (Bg > max_rgb)?max_rgb:((Bg < min_rgb)?min_rgb:Bg);
-	Bb = (Bb > max_rgb)?max_rgb:((Bb < min_rgb)?min_rgb:Bb);
-	Bc = (Bc > max_c)?max_c:((Bc < min_c)?min_c:Bc);
-
-    DE_BE_WUINT32(sel, DE_BE_OUT_COLOR_R_COEFF_OFF + 0, (__s32)Rr);
-    DE_BE_WUINT32(sel, DE_BE_OUT_COLOR_R_COEFF_OFF + 4, (__s32)Rg);
-    DE_BE_WUINT32(sel, DE_BE_OUT_COLOR_R_COEFF_OFF + 8, (__s32)Rb);
-    DE_BE_WUINT32(sel, DE_BE_OUT_COLOR_R_CONSTANT_OFF, (__s32)Rc);
-
-    DE_BE_WUINT32(sel, DE_BE_OUT_COLOR_G_COEFF_OFF + 0, (__s32)Gr);
-    DE_BE_WUINT32(sel, DE_BE_OUT_COLOR_G_COEFF_OFF + 4, (__s32)Gg);
-    DE_BE_WUINT32(sel, DE_BE_OUT_COLOR_G_COEFF_OFF + 8, (__s32)Gb);
-    DE_BE_WUINT32(sel, DE_BE_OUT_COLOR_G_CONSTANT_OFF, (__s32)Gc);
-
-    DE_BE_WUINT32(sel, DE_BE_OUT_COLOR_B_COEFF_OFF + 0, (__s32)Br);
-    DE_BE_WUINT32(sel, DE_BE_OUT_COLOR_B_COEFF_OFF + 4, (__s32)Bg);
-    DE_BE_WUINT32(sel, DE_BE_OUT_COLOR_B_COEFF_OFF + 8, (__s32)Bb);
-    DE_BE_WUINT32(sel, DE_BE_OUT_COLOR_B_CONSTANT_OFF, (__s32)Bc);
+	//data bit convert, 1 bit  sign, 2 bit integer, 10 bits fractrional for coefficient; 1 bit sign,9 bit integer, 4 bit fractional for constant
+	//range limited
+	iDE_SCAL_Csc_Lmt(&matrixresult.x00, -8191, 8191, 0, 16383);
+	iDE_SCAL_Csc_Lmt(&matrixresult.x01, -8191, 8191, 0, 16383);
+	iDE_SCAL_Csc_Lmt(&matrixresult.x02, -8191, 8191, 0, 16383);
+	iDE_SCAL_Csc_Lmt(&matrixresult.x03, -16383, 16383, 6, 32767);
+	iDE_SCAL_Csc_Lmt(&matrixresult.x10, -8191, 8191, 0, 16383);
+	iDE_SCAL_Csc_Lmt(&matrixresult.x11, -8191, 8191, 0, 16383);
+	iDE_SCAL_Csc_Lmt(&matrixresult.x12, -8191, 8191, 0, 16383);
+	iDE_SCAL_Csc_Lmt(&matrixresult.x13, -16383, 16383, 6, 32767);
+	iDE_SCAL_Csc_Lmt(&matrixresult.x20, -8191, 8191, 0, 16383);
+	iDE_SCAL_Csc_Lmt(&matrixresult.x21, -8191, 8191, 0, 16383);
+	iDE_SCAL_Csc_Lmt(&matrixresult.x22, -8191, 8191, 0, 16383);
+	iDE_SCAL_Csc_Lmt(&matrixresult.x23, -16383, 16383, 6, 32767);
+
+    //write csc register
+    pt = &(matrixresult.x00);
+
+	for(i=0;i<4;i++)
+	{
+		DE_BE_WUINT32(sel, DE_BE_OUT_COLOR_R_COEFF_OFF+ 4*i, *(pt + i));
+		DE_BE_WUINT32(sel, DE_BE_OUT_COLOR_G_COEFF_OFF+ 4*i, *(pt + 4 + i));
+		DE_BE_WUINT32(sel, DE_BE_OUT_COLOR_B_COEFF_OFF+ 4*i, *(pt + 8 + i));
+		//OSAL_PRINTF("R:%x,\tG:%x,\tB:%x\n",*(pt + i),*(pt + 4 + i),*(pt + 8 + i));
+	}
 
+	DE_BE_enhance_enable(sel, 1);
     return 0;
 }
 
@@ -501,66 +621,7 @@ __s32 DE_BE_Set_Outitl_enable(__u32 sel, __bool enable)
 {
 	DE_BE_WUINT32(sel, DE_BE_MODE_CTL_OFF,(DE_BE_RUINT32(sel, DE_BE_MODE_CTL_OFF)&(~(1<<28))) | (enable<<28));
 
-    return 0;
-}
 
-__s32 DE_BE_Output_Cfg_Csc_Coeff(__u32 sel, __bool bout_yuv, __u32 out_color_range)
-{
-	if(bout_yuv)
-	{
-		DE_BE_WUINT32(sel, DE_BE_YG_COEFF_OFF + 0, (DE_BE_RUINT32(sel, DE_BE_YG_COEFF_OFF + 0) & 0x0000ffff) | (0x0274<<16));
-		DE_BE_WUINT32(sel, DE_BE_YG_COEFF_OFF + 4, (DE_BE_RUINT32(sel, DE_BE_YG_COEFF_OFF + 4) & 0x0000ffff) | (0x00bb<<16));
-		DE_BE_WUINT32(sel, DE_BE_YG_COEFF_OFF + 8, (DE_BE_RUINT32(sel, DE_BE_YG_COEFF_OFF + 8) & 0x0000ffff) | (0x003f<<16));
-		DE_BE_WUINT32(sel, DE_BE_YG_CONSTANT_OFF , (DE_BE_RUINT32(sel, DE_BE_YG_CONSTANT_OFF) & 0x0000ffff) | (0x0100<<16));
-		DE_BE_WUINT32(sel, DE_BE_UR_COEFF_OFF + 0, (DE_BE_RUINT32(sel, DE_BE_UR_COEFF_OFF + 0) & 0x0000ffff) | (0x1ea5<<16));
-		DE_BE_WUINT32(sel, DE_BE_UR_COEFF_OFF + 4, (DE_BE_RUINT32(sel, DE_BE_UR_COEFF_OFF + 4) & 0x0000ffff) | (0x1f98<<16));
-		DE_BE_WUINT32(sel, DE_BE_UR_COEFF_OFF + 8, (DE_BE_RUINT32(sel, DE_BE_UR_COEFF_OFF + 8) & 0x0000ffff) | (0x01c1<<16));
-		DE_BE_WUINT32(sel, DE_BE_UR_CONSTANT_OFF, (DE_BE_RUINT32(sel, DE_BE_UR_CONSTANT_OFF) & 0x0000ffff) | (0x0800<<16));
-		DE_BE_WUINT32(sel, DE_BE_VB_COEFF_OFF + 0, (DE_BE_RUINT32(sel, DE_BE_VB_COEFF_OFF + 0) & 0x0000ffff) | (0x1e67<<16));
-		DE_BE_WUINT32(sel, DE_BE_VB_COEFF_OFF + 4, (DE_BE_RUINT32(sel, DE_BE_VB_COEFF_OFF + 4) & 0x0000ffff) | (0x01c1<<16));
-		DE_BE_WUINT32(sel, DE_BE_VB_COEFF_OFF + 8, (DE_BE_RUINT32(sel, DE_BE_VB_COEFF_OFF + 8) & 0x0000ffff) | (0x1fd7<<16));
-		DE_BE_WUINT32(sel, DE_BE_VB_CONSTANT_OFF, (DE_BE_RUINT32(sel, DE_BE_VB_CONSTANT_OFF) & 0x0000ffff) | (0x0800<<16));
-		DE_BE_output_csc_enable(sel, 1);
-	}
-	else
-	{
-    	if(out_color_range == DISP_COLOR_RANGE_16_255)
-        {
-            DE_BE_WUINT32(sel, DE_BE_YG_COEFF_OFF + 0, (DE_BE_RUINT32(sel, DE_BE_YG_COEFF_OFF + 0) & 0x0000ffff) | (0x0000<<16));
-            DE_BE_WUINT32(sel, DE_BE_YG_COEFF_OFF + 4, (DE_BE_RUINT32(sel, DE_BE_YG_COEFF_OFF + 4) & 0x0000ffff) | (0x03c4<<16));
-            DE_BE_WUINT32(sel, DE_BE_YG_COEFF_OFF + 8, (DE_BE_RUINT32(sel, DE_BE_YG_COEFF_OFF + 8) & 0x0000ffff) | (0x0000<<16));
-            DE_BE_WUINT32(sel, DE_BE_YG_CONSTANT_OFF , (DE_BE_RUINT32(sel, DE_BE_YG_CONSTANT_OFF) & 0x0000ffff) | (0x0100<<16));
-            DE_BE_WUINT32(sel, DE_BE_UR_COEFF_OFF + 0, (DE_BE_RUINT32(sel, DE_BE_UR_COEFF_OFF + 0) & 0x0000ffff) | (0x03c4<<16));
-            DE_BE_WUINT32(sel, DE_BE_UR_COEFF_OFF + 4, (DE_BE_RUINT32(sel, DE_BE_UR_COEFF_OFF + 4) & 0x0000ffff) | (0x0000<<16));
-            DE_BE_WUINT32(sel, DE_BE_UR_COEFF_OFF + 8, (DE_BE_RUINT32(sel, DE_BE_UR_COEFF_OFF + 8) & 0x0000ffff) | (0x0000<<16));
-            DE_BE_WUINT32(sel, DE_BE_UR_CONSTANT_OFF, (DE_BE_RUINT32(sel, DE_BE_UR_CONSTANT_OFF) & 0x0000ffff) | (0x0100<<16));
-            DE_BE_WUINT32(sel, DE_BE_VB_COEFF_OFF + 0, (DE_BE_RUINT32(sel, DE_BE_VB_COEFF_OFF + 0) & 0x0000ffff) | (0x0000<<16));
-            DE_BE_WUINT32(sel, DE_BE_VB_COEFF_OFF + 4, (DE_BE_RUINT32(sel, DE_BE_VB_COEFF_OFF + 4) & 0x0000ffff) | (0x0000<<16));
-            DE_BE_WUINT32(sel, DE_BE_VB_COEFF_OFF + 8, (DE_BE_RUINT32(sel, DE_BE_VB_COEFF_OFF + 8) & 0x0000ffff) | (0x03c4<<16));
-            DE_BE_WUINT32(sel, DE_BE_VB_CONSTANT_OFF, (DE_BE_RUINT32(sel, DE_BE_VB_CONSTANT_OFF) & 0x0000ffff) | (0x0100<<16));
-            DE_BE_output_csc_enable(sel, 1);
-        }
-    	else if(out_color_range == DISP_COLOR_RANGE_16_235)
-        {
-            DE_BE_WUINT32(sel, DE_BE_YG_COEFF_OFF + 0, (DE_BE_RUINT32(sel, DE_BE_YG_COEFF_OFF + 0) & 0x0000ffff) | (0x0000<<16));
-            DE_BE_WUINT32(sel, DE_BE_YG_COEFF_OFF + 4, (DE_BE_RUINT32(sel, DE_BE_YG_COEFF_OFF + 4) & 0x0000ffff) | (0x0370<<16));
-            DE_BE_WUINT32(sel, DE_BE_YG_COEFF_OFF + 8, (DE_BE_RUINT32(sel, DE_BE_YG_COEFF_OFF + 8) & 0x0000ffff) | (0x0000<<16));
-            DE_BE_WUINT32(sel, DE_BE_YG_CONSTANT_OFF , (DE_BE_RUINT32(sel, DE_BE_YG_CONSTANT_OFF) & 0x0000ffff) | (0x0100<<16));
-            DE_BE_WUINT32(sel, DE_BE_UR_COEFF_OFF + 0, (DE_BE_RUINT32(sel, DE_BE_UR_COEFF_OFF + 0) & 0x0000ffff) | (0x0370<<16));
-            DE_BE_WUINT32(sel, DE_BE_UR_COEFF_OFF + 4, (DE_BE_RUINT32(sel, DE_BE_UR_COEFF_OFF + 4) & 0x0000ffff) | (0x0000<<16));
-            DE_BE_WUINT32(sel, DE_BE_UR_COEFF_OFF + 8, (DE_BE_RUINT32(sel, DE_BE_UR_COEFF_OFF + 8) & 0x0000ffff) | (0x0000<<16));
-            DE_BE_WUINT32(sel, DE_BE_UR_CONSTANT_OFF, (DE_BE_RUINT32(sel, DE_BE_UR_CONSTANT_OFF) & 0x0000ffff) | (0x0100<<16));
-            DE_BE_WUINT32(sel, DE_BE_VB_COEFF_OFF + 0, (DE_BE_RUINT32(sel, DE_BE_VB_COEFF_OFF + 0) & 0x0000ffff) | (0x0000<<16));
-            DE_BE_WUINT32(sel, DE_BE_VB_COEFF_OFF + 4, (DE_BE_RUINT32(sel, DE_BE_VB_COEFF_OFF + 4) & 0x0000ffff) | (0x0000<<16));
-            DE_BE_WUINT32(sel, DE_BE_VB_COEFF_OFF + 8, (DE_BE_RUINT32(sel, DE_BE_VB_COEFF_OFF + 8) & 0x0000ffff) | (0x0370<<16));
-            DE_BE_WUINT32(sel, DE_BE_VB_CONSTANT_OFF, (DE_BE_RUINT32(sel, DE_BE_VB_CONSTANT_OFF) & 0x0000ffff) | (0x0100<<16));
-            DE_BE_output_csc_enable(sel, 1);
-        }
-    	else
-        {
-            DE_BE_output_csc_enable(sel, 0);
-        }
-    }
 
     return 0;
 }
diff --git a/drivers/video/sunxi/disp/de_bsp_sun5i/de/ebios/de_fe.c b/drivers/video/sunxi/disp/de_bsp_sun5i/de/ebios/de_fe.c
index e02f458..278bf2a 100644
--- a/drivers/video/sunxi/disp/de_bsp_sun5i/de/ebios/de_fe.c
+++ b/drivers/video/sunxi/disp/de_bsp_sun5i/de/ebios/de_fe.c
@@ -23,8 +23,7 @@
 
 #include "de_fe.h"
 
-//static volatile __de_scal_dev_t *scal_dev[2];
-static __de_scal_dev_t * scal_dev[2];
+static volatile __de_scal_dev_t *scal_dev[2];
 static __u32 de_scal_ch0_offset;
 static __u32 de_scal_ch1_offset;
 static __u32 de_scal_ch2_offset;
@@ -427,7 +426,7 @@ __s32 DE_SCAL_Set_Scaling_Factor(__u8 sel, __scal_scan_mod_t *in_scan, __scal_sr
 {
     __s32 in_w0, in_h0, out_w0, out_h0;
     __s32 ch0_hstep, ch0_vstep ;
-	__u32 w_shift, h_shift;
+	__s8 w_shift, h_shift;
 
     in_w0 = in_size->scal_width;
     in_h0 = in_size->scal_height;
@@ -490,8 +489,8 @@ __s32 DE_SCAL_Set_Scaling_Factor(__u8 sel, __scal_scan_mod_t *in_scan, __scal_sr
 
 	scal_dev[sel]->ch0_horzfact.dwval = ch0_hstep;
     scal_dev[sel]->ch0_vertfact.dwval = ch0_vstep<<(out_scan->field);
-    scal_dev[sel]->ch1_horzfact.dwval = ch0_hstep>>w_shift;
-    scal_dev[sel]->ch1_vertfact.dwval = (ch0_vstep>>h_shift)<<(out_scan->field);
+    scal_dev[sel]->ch1_horzfact.dwval = (w_shift>0) ? (ch0_hstep>>w_shift) : ch0_hstep<<(0-w_shift);
+    scal_dev[sel]->ch1_vertfact.dwval = (h_shift>0) ? (ch0_vstep>>h_shift)<<(out_scan->field) : (ch0_vstep<<(0-h_shift))<<(out_scan->field);
 
 	return 0;
 }
@@ -698,9 +697,9 @@ __s32 DE_SCAL_Set_Scaling_Coef(__u8 sel, __scal_scan_mod_t *in_scan, __scal_src_
 
 	//added for aw1625, wait ceof access
 	scal_dev[sel]->frm_ctrl.bits.coef_access_ctrl= 1;
-	/*while(scal_dev[sel]->status.bits.coef_access_status == 0)
+	while(scal_dev[sel]->status.bits.coef_access_status == 0)
 	{
-	}*/
+	}
     for(i=0; i<32; i++)
     {
 	    scal_dev[sel]->ch0_horzcoef0[i].dwval = fir_tab[(ch0h_fir_coef_addr>>2) + i];
@@ -1461,6 +1460,10 @@ __s32 DE_SCAL_Set_CSC_Coef_Enhance(__u8 sel, __u8 in_csc_mode, __u8 out_csc_mode
 	__u32 i;
 	__s32 sinv, cosv;   //sin_tab: 7 bit fractional
 
+	bright = bright*64/100;
+	bright = saturaion*64/100;
+	bright = contrast*64/100;
+	bright = hue*64/100;
 	sinv = image_enhance_tab[8*12 + (hue&0x3f)];
 	cosv = image_enhance_tab[8*12 + 8*8 + (hue&0x3f)];
 
@@ -2324,7 +2327,7 @@ __s32 DE_SCAL_Vpp_Set_Luma_Sharpness_Level(__u8 sel, __u32 level)
 	scal_dev[sel]->vpp_lp2.bits.lpf_gain = 31;
 	scal_dev[sel]->vpp_lp2.bits.neggain = 3;
 	scal_dev[sel]->vpp_lp2.bits.delta = 3;
-	scal_dev[sel]->vpp_lp2.bits.limit_thr = 40;
+	scal_dev[sel]->vpp_lp2.bits.limit_thr = 3;
 
 	switch(level)
 	{
@@ -2480,22 +2483,22 @@ __s32 DE_SCAL_Vpp_Set_White_Level_Extension(__u8 sel, __u32 level)
 		break;
 
 		case	0x1:
-			scal_dev[sel]->vpp_wle.bits.wle_gain = 112;
+			scal_dev[sel]->vpp_wle.bits.wle_gain = 73;
 			scal_dev[sel]->vpp_wle.bits.wle_en = 0x1;
 		break;
 
 		case	0x2:
-			scal_dev[sel]->vpp_wle.bits.wle_gain = 160;
+			scal_dev[sel]->vpp_wle.bits.wle_gain = 79;
 			scal_dev[sel]->vpp_wle.bits.wle_en = 0x1;
 		break;
 
 		case	0x3:
-			scal_dev[sel]->vpp_wle.bits.wle_gain = 208;
+			scal_dev[sel]->vpp_wle.bits.wle_gain = 92;
 			scal_dev[sel]->vpp_wle.bits.wle_en = 0x1;
 		break;
 
 		case	0x4:
-			scal_dev[sel]->vpp_wle.bits.wle_gain = 255;
+			scal_dev[sel]->vpp_wle.bits.wle_gain = 127;
 			scal_dev[sel]->vpp_wle.bits.wle_en = 0x1;
 		break;
 
@@ -2529,22 +2532,22 @@ __s32 DE_SCAL_Vpp_Set_Black_Level_Extension(__u8 sel, __u32 level)
 		break;
 
 		case	0x1:
-			scal_dev[sel]->vpp_ble.bits.ble_gain = 64;
+			scal_dev[sel]->vpp_ble.bits.ble_gain = 9;
 			scal_dev[sel]->vpp_ble.bits.ble_en = 0x1;
 		break;
 
 		case	0x2:
-			scal_dev[sel]->vpp_ble.bits.ble_gain = 128;
+			scal_dev[sel]->vpp_ble.bits.ble_gain = 16;
 			scal_dev[sel]->vpp_ble.bits.ble_en = 0x1;
 		break;
 
 		case	0x3:
-			scal_dev[sel]->vpp_ble.bits.ble_gain = 192;
+			scal_dev[sel]->vpp_ble.bits.ble_gain = 32;
 			scal_dev[sel]->vpp_ble.bits.ble_en = 0x1;
 		break;
 
 		case	0x4:
-			scal_dev[sel]->vpp_ble.bits.ble_gain = 255;
+			scal_dev[sel]->vpp_ble.bits.ble_gain = 64;
 			scal_dev[sel]->vpp_ble.bits.ble_en = 0x0;
 		break;
 
diff --git a/drivers/video/sunxi/disp/de_bsp_sun5i/de/ebios/de_lcdc.c b/drivers/video/sunxi/disp/de_bsp_sun5i/de/ebios/de_lcdc.c
index 5c3993d..6277200 100644
--- a/drivers/video/sunxi/disp/de_bsp_sun5i/de/ebios/de_lcdc.c
+++ b/drivers/video/sunxi/disp/de_bsp_sun5i/de/ebios/de_lcdc.c
@@ -1248,30 +1248,7 @@ void LCD_CPU_Burst_Write(__u32 sel, int addr,int data1,int data2)
 
 __u32 LCD_CPU_Busy(__u32 sel)
 {
-	volatile __u32 i;
-	__u32 counter=0;
-	__u32 reg_val;
-
-	LCDC_SET_BIT(sel, LCDC_CPUIF_OFF,LCDC_BIT0);
-	for(i=0;i<80;i++);
-
-	while(1)
-	{
-		reg_val = LCDC_RUINT32(sel, LCDC_CPUIF_OFF);
-		if(reg_val & 0x00c00000)
-		{
-			if(counter>200)
-				return 0;
-		    else
-		    	counter++;
-		}
-		else
-		{
-			return 0;
-		}
-	}
-
-//	return (LCDC_RUINT32(sel, LCDC_CPUIF_OFF) & (LCDC_BIT23 | LCDC_BIT22));
+	return (LCDC_RUINT32(sel, LCDC_CPUIF_OFF) & (LCDC_BIT23 | LCDC_BIT22));
 }
 
 void LCD_CPU_WR_INDEX_24b(__u32 sel, __u32 index)
diff --git a/drivers/video/sunxi/disp/de_bsp_sun5i/de/ebios/de_tvec.c b/drivers/video/sunxi/disp/de_bsp_sun5i/de/ebios/de_tvec.c
index 5126c9d..41fad3c 100644
--- a/drivers/video/sunxi/disp/de_bsp_sun5i/de/ebios/de_tvec.c
+++ b/drivers/video/sunxi/disp/de_bsp_sun5i/de/ebios/de_tvec.c
@@ -101,7 +101,7 @@ __s32 TVE_open(__u32 sel)
 __s32 TVE_close(__u32 sel)
 {
     TVE_CLR_BIT(sel,TVE_000, 0x1<<0);
-
+    TVE_WUINT32(sel,TVE_024,0x18181818);
     return 0;
 }
 
@@ -130,7 +130,7 @@ __s32 TVE_set_tv_mode(__u32 sel, __u8 mode)
 		TVE_WUINT32(sel,TVE_00C, 0x00000120);
 		TVE_WUINT32(sel,TVE_020, 0x00fc00fc);
 		TVE_WUINT32(sel,TVE_10C, 0x00002828);
-		TVE_WUINT32(sel,TVE_128, 0x00000000);//
+		TVE_WUINT32(sel,TVE_128, 0x00000002);//
 		TVE_WUINT32(sel,TVE_118, 0x0000e0e0);
 		TVE_WUINT32(sel,TVE_12C, 0x00000101);//
 		break;
@@ -152,7 +152,7 @@ __s32 TVE_set_tv_mode(__u32 sel, __u8 mode)
 		TVE_WUINT32(sel,TVE_11C, 0x001000f0);
 		TVE_WUINT32(sel,TVE_010, 0x21e6efe3);//add for pal-m
 		TVE_WUINT32(sel,TVE_100, 0x00000000);//add for pal-m
-		TVE_WUINT32(sel,TVE_128, 0x00000000);//
+		TVE_WUINT32(sel,TVE_128, 0x00000002);//
 		TVE_WUINT32(sel,TVE_12C, 0x00000101);//
 		break;
 
@@ -169,7 +169,7 @@ __s32 TVE_set_tv_mode(__u32 sel, __u8 mode)
 		TVE_WUINT32(sel,TVE_020, 0x00fc00fc);
 		TVE_WUINT32(sel,TVE_10C, 0x00002828);
 		TVE_WUINT32(sel,TVE_010, 0x21F69446);//add for PAL-NC
-		TVE_WUINT32(sel,TVE_128, 0x00000000);//
+		TVE_WUINT32(sel,TVE_128, 0x00000002);//
 		TVE_WUINT32(sel,TVE_118, 0x0000e0e0);
 		TVE_WUINT32(sel,TVE_12C, 0x00000101);//
 		break;
@@ -189,7 +189,7 @@ __s32 TVE_set_tv_mode(__u32 sel, __u8 mode)
 		TVE_WUINT32(sel,TVE_110, 0x00000000);
 		TVE_WUINT32(sel,TVE_118, 0x0000a0a0);
 		TVE_WUINT32(sel,TVE_11C, 0x001000f0);
-		TVE_WUINT32(sel,TVE_128, 0x00000000);//
+		TVE_WUINT32(sel,TVE_128, 0x00000002);//
 		TVE_WUINT32(sel,TVE_12C, 0x00000101);//
 		break;
 
@@ -344,15 +344,17 @@ __s32 TVE_set_tv_mode(__u32 sel, __u8 mode)
 	TVE_CLR_BIT(sel,TVE_008,0xfff<<4);
 	TVE_SET_BIT(sel,TVE_008,0x3<<16);
 	TVE_SET_BIT(sel,TVE_008,0xf<<18);
-	TVE_WUINT32(sel,TVE_024,0x1F1F1F1F);
+	TVE_WUINT32(sel,TVE_024,0x18181818);
 	return 0;
 }
 
 __s32 TVE_set_vga_mode(__u32 sel)
 {
+    __u32 readval;
     TVE_WUINT32(sel,TVE_004, 0x20000000);
-    TVE_WUINT32(sel,TVE_008, 0x40031ac7);
-    TVE_WUINT32(sel,TVE_024, 0x00000000);
+    TVE_WUINT32(sel,TVE_008, 0x403f1ac7);
+    readval = TVE_RUINT32(sel,TVE_024);
+    TVE_WUINT32(sel,TVE_024, readval&0xff000000);
     TVE_INIT_BIT(0,TVE_000, 0xfff<<4,0x321<<4);
 	return 0;
 }
@@ -403,10 +405,6 @@ __s32 TVE_get_dac_status(__u32 index)
         return -1;
     }
 
-    TVE_SET_BIT(sel,TVE_008,0x3<<16);
-    TVE_SET_BIT(sel,TVE_008,0xf<<18);
-    TVE_WUINT32(sel,TVE_024,0x18181818);
-
     status = TVE_RUINT32(sel,TVE_038)>>(dac*8);
     status &= 0x3;
 
diff --git a/drivers/video/sunxi/disp/de_bsp_sun5i/de/ebios/ebios_de.h b/drivers/video/sunxi/disp/de_bsp_sun5i/de/ebios/ebios_de.h
index 4b1012b..9bb2881 100644
--- a/drivers/video/sunxi/disp/de_bsp_sun5i/de/ebios/ebios_de.h
+++ b/drivers/video/sunxi/disp/de_bsp_sun5i/de/ebios/ebios_de.h
@@ -28,7 +28,7 @@
 
 #define DE_WB_END_IE    			(1<<7)      /*write back end interrupt */
 #define DE_FE_INTEN_ALL             0x1ff     /*front-end all interrupt enable*/
-#define DE_IMG_IRDY_IE  (1<<6)
+#define DE_IMG_REG_LOAD_FINISH  (1<<1)
 
 #define SCAL_WB_ERR_SYNC (1<<15) //sync reach flag when capture in process
 #define SCAL_WB_ERR_LOSEDATA (1<<14) //lose data flag when capture in process
@@ -320,6 +320,7 @@ __s32 DE_BE_EnableINT(__u8 sel,__u32 irqsrc);
 __s32 DE_BE_DisableINT(__u8 sel, __u32 irqsrc);
 __u32 DE_BE_QueryINT(__u8 sel);
 __u32 DE_BE_ClearINT(__u8 sel,__u32 irqsrc);
+__s32 DE_BE_reg_auto_load_en(__u32 sel, __u32 en);
 
 __s32 DE_BE_Layer_Enable(__u32 sel, __u8 layidx, __bool enable);
 __s32 DE_BE_Layer_Set_Format(__u32 sel, __u8 layidx,__u8 format,__bool br_swap,__u8 order);
@@ -354,7 +355,7 @@ __s32 DE_BE_Sprite_Block_Set_Size(__u32 sel, __u8 blk_idx,__u32 xsize,__u32 ysiz
 __s32 DE_BE_Sprite_Block_Set_fb(__u32 sel, __u8 blk_idx,__u32 addr, __u32 line_width);
 __s32 DE_BE_Sprite_Block_Set_Next_Id(__u32 sel, __u8 blk_idx,__u8 next_blk_id);
 __s32 DE_BE_Sprite_Set_Palette_Table(__u32 sel, __u32 address, __u32 offset, __u32 size);
-__s32 DE_BE_Set_Enhance(__u8 sel,__u32 brightness, __u32 contrast, __u32 saturaion);
+__s32 DE_BE_Set_Enhance(__u8 sel, __u32 out_csc, __u32 out_color_range, __s32 brightness, __s32 contrast, __s32 saturaion, __s32 hue);
 __s32 DE_BE_enhance_enable(__u32 sel, __bool enable);
 __s32 DE_BE_set_display_size(__u32 sel, __u32 width, __u32 height);
 __s32 DE_BE_get_display_width(__u32 sel);
@@ -362,7 +363,7 @@ __s32 DE_BE_get_display_height(__u32 sel);
 __s32 DE_BE_deflicker_enable(__u32 sel, __bool enable);
 __s32 DE_BE_output_csc_enable(__u32 sel, __bool enable);
 __s32 DE_BE_Set_Outitl_enable(__u32 sel, __bool enable);
-__s32 DE_BE_Output_Cfg_Csc_Coeff(__u32 sel, __bool bout_yuv, __u32 out_color_range);
+
 //__s32 DE_BE_Output_Cfg_Csc_Coeff(__u32 sel, __u8 cs_mode);
 __s32 DE_BE_Format_To_Bpp(__u32 sel, __u8 format);
 __u32 DE_BE_Offset_To_Addr(__u32 src_addr,__u32 width,__u32 x,__u32 y,__u32 bpp);
diff --git a/drivers/video/sunxi/disp/de_bsp_sun5i/iep/de_iep.c b/drivers/video/sunxi/disp/de_bsp_sun5i/iep/de_iep.c
new file mode 100644
index 0000000..334e048
--- /dev/null
+++ b/drivers/video/sunxi/disp/de_bsp_sun5i/iep/de_iep.c
@@ -0,0 +1,424 @@
+#include "de_iep.h"
+
+static __de_iep_dev_t *iep_dev;
+
+#define ____SEPARATOR_IEP____
+
+__s32 DE_IEP_Set_Reg_Base(__u32 sel, __u32 base)
+{
+	if(sel == 0)
+	{
+		iep_dev = (__de_iep_dev_t *)base;
+		return 0;
+	}
+	else
+	{
+		return -1;
+	}
+}
+
+__u32 DE_IEP_Get_Reg_Base(__u32 sel, __u32 base)
+{
+	__u32 ret = 0;
+	if(sel == 0)
+	{
+		ret = (__u32)iep_dev;
+		return ret;
+	}
+	else
+	{
+		return 0;
+	}
+}
+
+__s32 DE_IEP_Enable(__u32 sel)
+{
+	if(sel == 0)
+	{
+		iep_dev->gnectl.bits.en = 1;
+		return 0;
+	}
+	else
+	{
+		return -1;
+	}
+}
+
+__s32 DE_IEP_Disable(__u32 sel)
+{
+	if(sel == 0)
+	{
+		iep_dev->gnectl.bits.en = 0;
+		return 0;
+	}
+	else
+	{
+		return -1;
+	}
+}
+
+__s32 DE_IEP_Set_Mode(__u32 sel, __u32 mod)
+{
+	if(sel == 0)
+	{
+		iep_dev->gnectl.bits.mod = mod;
+		return 0;
+	}
+	else
+	{
+		return -1;
+	}
+}
+
+__s32 DE_IEP_Bist_Enable(__u32 sel, __u32 en)
+{
+	if(sel == 0)
+	{
+		iep_dev->gnectl.bits.bist_en = en;
+		return 0;
+	}
+	else
+	{
+		return -1;
+	}
+}
+
+__s32 DE_IEP_Set_Reg_Refresh_Edge(__u32 sel, __u32 falling)
+{
+	if(sel == 0)
+	{
+		iep_dev->gnectl.bits.sync_edge = falling;
+		return 0;
+	}
+	else
+	{
+		return -1;
+	}
+}
+__s32 DE_IEP_Set_Csc_Coeff(__u32 sel, __u32 mod)
+{
+	if(sel == 0)
+	{
+		if(mod==2)		//yuv2rgb for drc mode
+		{
+			//bt709 full range(to fit output CSC in DEBE )
+			iep_dev->cscygcoff[0].bits.csc_yg_coff = 0x4a7;
+			iep_dev->cscygcoff[1].bits.csc_yg_coff = 0x000;
+			iep_dev->cscygcoff[2].bits.csc_yg_coff = 0x72c;
+			iep_dev->cscygcon.bits.csc_yg_con =      0x307d;
+			iep_dev->cscurcoff[0].bits.csc_ur_coff = 0x4a7;
+			iep_dev->cscurcoff[1].bits.csc_ur_coff = 0x1f25;
+			iep_dev->cscurcoff[2].bits.csc_ur_coff = 0x1ddd;
+			iep_dev->cscurcon.bits.csc_ur_con =      0x4cf;
+			iep_dev->cscvbcoff[0].bits.csc_vb_coff = 0x4a7;
+			iep_dev->cscvbcoff[1].bits.csc_vb_coff = 0x875;
+			iep_dev->cscvbcoff[2].bits.csc_vb_coff = 0x000;
+			iep_dev->cscvbcon.bits.csc_vb_con =      0x2dea;
+		}
+		else if(mod==3)
+		{
+#if 0
+			//IGB to RGB
+			iep_dev->cscygcoff[0].bits.csc_yg_coff = 0x0c00;
+			iep_dev->cscygcoff[1].bits.csc_yg_coff = 0x1c00;
+			iep_dev->cscygcoff[2].bits.csc_yg_coff = 0x1c00;
+			iep_dev->cscygcon.bits.csc_yg_con =      0x0000;
+			iep_dev->cscurcoff[0].bits.csc_ur_coff = 0x0000;
+			iep_dev->cscurcoff[1].bits.csc_ur_coff = 0x0400;
+			iep_dev->cscurcoff[2].bits.csc_ur_coff = 0x0000;
+			iep_dev->cscurcon.bits.csc_ur_con =      0x0000;
+			iep_dev->cscvbcoff[0].bits.csc_vb_coff = 0x0000;
+			iep_dev->cscvbcoff[1].bits.csc_vb_coff = 0x0000;
+			iep_dev->cscvbcoff[2].bits.csc_vb_coff = 0x0400;
+			iep_dev->cscvbcon.bits.csc_vb_con =      0x0000;
+#else
+			//YUV2RGB when Er = 19%, Eg = 65%, Eb = 16%.
+			iep_dev->cscygcoff[0].bits.csc_yg_coff = 0x0400;
+   			iep_dev->cscygcoff[1].bits.csc_yg_coff = 0x0000;
+   			iep_dev->cscygcoff[2].bits.csc_yg_coff = 0x067B;
+   			iep_dev->cscygcon.bits.csc_yg_con = 	 0x330A;
+   			iep_dev->cscurcoff[0].bits.csc_ur_coff = 0x0400;
+   			iep_dev->cscurcoff[1].bits.csc_ur_coff = 0x1E59;
+   			iep_dev->cscurcoff[2].bits.csc_ur_coff = 0x1E1B;
+   			iep_dev->cscurcon.bits.csc_ur_con = 	 0x0719;
+   			iep_dev->cscvbcoff[0].bits.csc_vb_coff = 0x0400;
+   			iep_dev->cscvbcoff[1].bits.csc_vb_coff = 0x06B8;
+   			iep_dev->cscvbcoff[2].bits.csc_vb_coff = 0x0000;
+   			iep_dev->cscvbcon.bits.csc_vb_con = 	 0x328F;
+
+#endif
+		}
+		else		//yuv2yuv	for de-flicker mode
+		{
+			iep_dev->cscygcoff[0].bits.csc_yg_coff = 0x400;
+			iep_dev->cscygcoff[1].bits.csc_yg_coff = 0x000;
+			iep_dev->cscygcoff[2].bits.csc_yg_coff = 0x000;
+			iep_dev->cscygcon.bits.csc_yg_con =		 0x000;
+			iep_dev->cscurcoff[0].bits.csc_ur_coff = 0x000;
+			iep_dev->cscurcoff[1].bits.csc_ur_coff = 0x400;
+			iep_dev->cscurcoff[2].bits.csc_ur_coff = 0x000;
+			iep_dev->cscurcon.bits.csc_ur_con =      0x000;
+			iep_dev->cscvbcoff[0].bits.csc_vb_coff = 0x000;
+			iep_dev->cscvbcoff[1].bits.csc_vb_coff = 0x000;
+			iep_dev->cscvbcoff[2].bits.csc_vb_coff = 0x400;
+			iep_dev->cscvbcon.bits.csc_vb_con =      0x000;
+		}
+		return 0;
+	}
+	else
+	{
+		return -1;
+	}
+}
+
+__s32 DE_IEP_Set_Display_Size(__u32 sel, __u32 width, __u32 height)
+{
+	if(sel == 0)
+	{
+		iep_dev->drcsize.bits.disp_w = width - 1;
+		iep_dev->drcsize.bits.disp_h = height - 1;
+		return 0;
+	}
+	else
+	{
+		return -1;
+	}
+}
+
+__s32 DE_IEP_Demo_Win_Enable(__u32 sel, __u32 en)
+{
+	if(sel == 0)
+	{
+		iep_dev->drcctl.bits.win_en = en;
+		return 0;
+	}
+	else
+	{
+		return -1;
+	}
+}
+
+__u32 DE_IEP_Set_Demo_Win_Para(__u32 sel, __u32 top, __u32 bot, __u32 left, __u32 right)
+{
+	if(sel == 0)
+	{
+		iep_dev->drc_wp0.bits.win_left = left;
+		iep_dev->drc_wp0.bits.win_top = top;
+		iep_dev->drc_wp1.bits.win_right = right;
+		iep_dev->drc_wp1.bits.win_bottom = bot;
+		return 0;
+	}
+	else
+	{
+		return -1;
+	}
+}
+
+#define ____SEPARATOR_DRC____
+
+__s32 DE_IEP_Drc_Cfg_Rdy(__u32 sel)
+{
+	if(sel == 0)
+	{
+		iep_dev->drcctl.bits.dbrdy_ctl = 1;
+		iep_dev->drcctl.bits.db_en = 1;
+		return 0;
+	}
+	else
+	{
+		return -1;
+	}
+}
+
+__u32 DE_IEP_Drc_Set_Lgc_Addr(__u32 sel, __u32 addr)
+{
+	if(sel == 0)
+	{
+		iep_dev->drclgc_addr.bits.lgc_addr = addr;
+		return 0;
+	}
+	else
+	{
+		return -1;
+	}
+}
+
+__u32 DE_IEP_Drc_Set_Lgc_Autoload_Disable(__u32 sel, __u32 disable)
+{
+	if(sel == 0)
+	{
+		iep_dev->drc_set.bits.gain_autoload_dis = disable;
+		return 0;
+	}
+	else
+	{
+		return -1;
+	}
+}
+
+__u32 DE_IEP_Drc_Adjust_Enable(__u32 sel, __u32 en)
+{
+	if(sel == 0)
+	{
+		iep_dev->drc_set.bits.adjust_en = en;
+		return 0;
+	}
+	else
+	{
+		return -1;
+	}
+}
+
+__u32 DE_IEP_Drc_Set_Adjust_Para(__u32 sel, __u32 abslumperval, __u32 abslumshf)
+{
+	if(sel == 0)
+	{
+		iep_dev->drc_set.bits.lgc_abslumshf = abslumshf;
+		iep_dev->drc_set.bits.lgc_abslumperval = abslumperval;
+		return 0;
+	}
+	else
+	{
+		return -1;
+	}
+}
+
+__u32 DE_IEP_Drc_Set_Spa_Coeff(__u32 sel, __u8 spatab[IEP_DRC_SPA_TAB_LEN])
+{
+	if(sel == 0)
+	{
+		iep_dev->drcspacoff[0].bits.spa_coff0 = spatab[0];
+		iep_dev->drcspacoff[0].bits.spa_coff1 = spatab[1];
+		iep_dev->drcspacoff[0].bits.spa_coff2 = spatab[2];
+		iep_dev->drcspacoff[1].bits.spa_coff0 = spatab[3];
+		iep_dev->drcspacoff[1].bits.spa_coff1 = spatab[4];
+		iep_dev->drcspacoff[1].bits.spa_coff2 = spatab[5];
+		iep_dev->drcspacoff[2].bits.spa_coff0 = spatab[6];
+		iep_dev->drcspacoff[2].bits.spa_coff1 = spatab[7];
+		iep_dev->drcspacoff[2].bits.spa_coff2 = spatab[8];
+
+		return 0;
+	}
+	else
+	{
+		return -1;
+	}
+}
+
+__u32 DE_IEP_Drc_Set_Int_Coeff(__u32 sel,  __u8 inttab[IEP_DRC_INT_TAB_LEN])
+{
+	__u32 i;
+
+	if(sel == 0)
+	{
+		for(i=0;i<IEP_DRC_INT_TAB_LEN/4;i++)
+		{
+			iep_dev->drcintcoff[i].bits.inten_coff0 = inttab[4*i];
+			iep_dev->drcintcoff[i].bits.inten_coff1 = inttab[4*i+1];
+			iep_dev->drcintcoff[i].bits.inten_coff2 = inttab[4*i+2];
+			iep_dev->drcintcoff[i].bits.inten_coff3 = inttab[4*i+3];
+		}
+
+		return 0;
+	}
+	else
+	{
+		return -1;
+	}
+}
+
+/*__u32 DE_IEP_Drc_Set_Lgc_Coeff(__u32 sel,  __u16 lgctab[IEP_DRC_INT_TAB_LEN])
+{
+	__u32 i;
+
+	if(sel == 0)
+	{
+		return 0;
+	}
+	else
+	{
+		return -1;
+	}
+}*/
+
+#define ____SEPARATOR_LH____
+
+__u32 DE_IEP_Lh_Set_Mode(__u32 sel, __u32 mod)
+{
+	if(sel == 0)
+	{
+		iep_dev->lhctl.bits.lh_mod = mod;	//0:current frame case;	1:average case
+		return 0;
+	}
+	else
+	{
+		return -1;
+	}
+
+}
+
+__u32 DE_IEP_Lh_Clr_Rec(__u32 sel)
+{
+	if(sel == 0)
+	{
+		iep_dev->lhctl.bits.lh_rec_clr = 1;
+		return 0;
+	}
+	else
+	{
+		return -1;
+	}
+}
+
+__u32 DE_IEP_Lh_Set_Thres(__u32 sel, __u8 thres[])
+{
+	if(sel == 0)
+	{
+		iep_dev->lhthr0.bits.lh_thres_val1 = thres[0];
+		iep_dev->lhthr0.bits.lh_thres_val2 = thres[1];
+		iep_dev->lhthr0.bits.lh_thres_val3 = thres[2];
+		iep_dev->lhthr0.bits.lh_thres_val4 = thres[3];
+		iep_dev->lhthr1.bits.lh_thres_val5 = thres[4];
+		iep_dev->lhthr1.bits.lh_thres_val6 = thres[5];
+		iep_dev->lhthr1.bits.lh_thres_val7 = thres[6];
+		return 0;
+	}
+	else
+	{
+		return -1;
+	}
+}
+
+__u32 DE_IEP_Lh_Get_Sum_Rec(__u32 sel, __u32 *sum)
+{
+	__u32 i;
+
+	if(sel == 0)
+	{
+		for(i=0;i<IEP_LH_INTERVAL_NUM;i++)
+		{
+			*sum++ = iep_dev->lhslum[i].bits.lh_lum_data;
+		}
+		return 0;
+	}
+
+	return -1;
+}
+
+__u32 DE_IEP_Lh_Get_Cnt_Rec(__u32 sel, __u32 *cnt)
+{
+	__u32 i;
+
+	if(sel == 0)
+	{
+		for(i=0;i<IEP_LH_INTERVAL_NUM;i++)
+		{
+			*cnt++ = iep_dev->lhscnt[i].bits.lh_cnt_data;
+		}
+	}
+
+	return 0;
+}
+
+#define ____SEPARATOR_DF____
+
diff --git a/drivers/video/sunxi/disp/de_bsp_sun5i/iep/de_iep.h b/drivers/video/sunxi/disp/de_bsp_sun5i/iep/de_iep.h
new file mode 100644
index 0000000..6e93da8
--- /dev/null
+++ b/drivers/video/sunxi/disp/de_bsp_sun5i/iep/de_iep.h
@@ -0,0 +1,370 @@
+//*****************************************************************************
+//  All Winner Micro, All Right Reserved. 2006-2011 Copyright (c)
+//
+//  File name   :        de_iep.h
+//
+//  Description :  display engine Image Enhancement Processor registers and interface functions define
+//                 for aw1625
+//  History     :
+//                2011/09/01      vito       v0.1    Initial version
+//******************************************************************************
+#ifndef __DE_IEP_H__
+#define __DE_IEP_H__
+
+#include "../bsp_display.h"
+
+#define IEP_DRC_SPA_TAB_LEN	9
+#define IEP_DRC_INT_TAB_LEN 256
+#define IEP_DRC_LGC_TAB_LEN 256
+#define IEP_LH_INTERVAL_NUM 8
+#define IEP_LH_THRES_NUM    7
+
+typedef union
+{
+	__u32 dwval;
+	struct
+	{
+		__u32	en				:1;	//bit0
+		__u32	r0				:7;	//bit1~7
+		__u32	mod				:2;	//bit8~9
+		__u32	r1				:6; //bit10~15
+		__u32   sync_edge		:1; //bit16
+		__u32  	field_parity	:1; //bit17
+		__u32	r2				:13; //bit18~30
+		__u32	bist_en			:1;	//bit31
+	}bits;
+}__imgehc_gnectl_reg_t;	//0x0
+
+typedef union
+{
+	__u32 dwval;
+	struct
+	{
+		__u32 disp_w			:12; //bit0~11
+		__u32 r0				:4;	 //bit12~15
+		__u32 disp_h			:12; //bit16~27
+		__u32 r1				:4;  //bit31~28
+	}bits;
+}__imgehc_drcsize_reg_t;
+
+typedef union
+{
+	__u32 dwval;
+	struct
+	{
+		__u32	db_en			:1;	//bit0
+		__u32	dbrdy_ctl		:1;	//bit1
+		__u32	r0				:6;	//bit2~7
+		__u32	win_en			:1; //bit8
+		__u32	r1				:23;//bit9~31
+	}bits;
+}__imgehc_drcctl_reg_t;	//0x10
+
+typedef union
+{
+	__u32 dwval;
+	struct
+	{
+		__u32	lgc_addr		:32;//bit0~31
+	}bits;
+}__imgehc_drclgc_staadd_reg_t;	//0x14
+
+typedef union
+{
+	__u32 dwval;
+	struct
+	{
+		__u32	lgc_abslumshf	:1;	//bit0
+		__u32	adjust_en		:1;	//bit1
+		__u32	r0				:6;	//bit2~7
+		__u32	lgc_abslumperval:8;	//bit8~15
+		__u32	r1				:8;	//bit16~23
+		__u32	gain_autoload_dis:1;//bit24
+		__u32	r2				:7;	//bit25~31
+	}bits;
+}__imgehc_drc_set_reg_t;		//0x18
+
+typedef union
+{
+	__u32 dwval;
+	struct
+	{
+		__u32	win_left		:12;//bit0~11
+		__u32	r0				:4;	//bit12~15
+		__u32	win_top			:12;//bit16~27
+		__u32	r1				:4;	//bit28~31
+	}bits;
+}__imgehc_drc_wp_reg0_t;		//0x1c
+
+typedef union
+{
+	__u32 dwval;
+	struct
+	{
+		__u32	win_right		:12;//bit0~11
+		__u32	r0				:4;	//bit12~15
+		__u32	win_bottom		:12;//bit16~27
+		__u32	r1				:4;	//bit28~31
+	}bits;
+}__imgehc_drc_wp_reg1_t;		//0x20
+
+typedef union
+{
+	__u32 dwval;
+	struct
+	{
+		__u32	wb_en			:1;//bit0
+		__u32   r0				:7;//bit1~7
+		__u32	wb_mode			:1;//bit8
+		__u32   r1				:7;//bit9~15
+		__u32   wb_ps			:1;//bit16
+		__u32   r2				:7;//bit17~23
+		__u32   field           :1;//bit24
+		__u32   r3              :6;//bit25~30
+		__u32   wb_sts			:1;//bit31
+	}bits;
+}__imgehc_wbctl_reg_t;		//0x24
+
+typedef union
+{
+	__u32 dwval;
+	struct
+	{
+		__u32   wb_addr			:32;
+	}bits;
+}__imgehc_wbaddr_reg_t;		//0x28
+
+typedef union
+{
+	__u32 dwval;
+	struct
+	{
+		__u32   linestride		:32;
+	}bits;
+}__imgehc_wbline_reg_t;		//0x2c
+
+typedef union
+{
+	__u32 dwval;
+	struct
+	{
+		__u32	lh_rec_clr		:1;	//bit0
+		__u32	lh_mod			:1;	//bit1
+		__u32	r0				:30;//bit2~31
+	}bits;
+}__imgehc_lhctl_reg_t;		//0x30
+
+typedef union
+{
+	__u32 dwval;
+	struct
+	{
+		__u32	lh_thres_val1	:8;	//bit0~7
+		__u32	lh_thres_val2	:8;	//bit8~15
+		__u32	lh_thres_val3	:8;	//bit16~23
+		__u32	lh_thres_val4	:8;	//bit24~31
+	}bits;
+}__imgehc_lhthr_reg0_t;		//0x34
+
+typedef union
+{
+	__u32 dwval;
+	struct
+	{
+		__u32	lh_thres_val5	:8;	//bit0~7
+		__u32	lh_thres_val6	:8;	//bit8~15
+		__u32	lh_thres_val7	:8;	//bit16~23
+		__u32	r0				:8;	//bit24~31
+	}bits;
+}__imgehc_lhthr_reg1_t;		//0x38
+
+typedef union
+{
+	__u32 dwval;
+	struct
+	{
+		__u32	lh_lum_data		:32;//bit0~31
+	}bits;
+}__imgehc_lhslum_reg_t;		// 0x0040 ~ 0x005c
+
+typedef union
+{
+	__u32 dwval;
+	struct
+	{
+		__u32	lh_cnt_data		:32;//bit0~31
+	}bits;
+}__imgehc_lhscnt_reg_t;		//0x0060 ~ 0x007c
+
+typedef union
+{
+	__u32 dwval;
+	struct
+	{
+		__u32	df_en			:1;//bit0
+		__u32   r0				:7;//bit1~7
+		__u32   df_y_bypass		:1;//bit8
+		__u32	df_u_bypass		:1;//bit9
+		__u32   df_v_bypass		:1;//bit10
+		__u32	r1				:21;//bit11~31
+	}bits;
+}__imgehc_dfctl_reg_t;		//0x0080
+
+typedef union
+{
+	__u32 dwval;
+	struct
+	{
+		__u32	csc_yg_coff		:13;//bit0~12
+		__u32	r0				:19;//bit13~31
+	}bits;
+}__imgehc_cscygcoff_reg_t;	//0xc0~0xc8
+
+typedef union
+{
+	__u32 dwval;
+	struct
+	{
+		__u32	csc_yg_con		:14;//bit0~13
+		__u32	r0				:18;//bit14~31
+	}bits;
+}__imgehc_cscygcon_reg_t;	//0xcc
+
+typedef union
+{
+	__u32 dwval;
+	struct
+	{
+		__u32	csc_ur_coff		:13;//bit0~12
+		__u32	r0				:19;//bit13~31
+	}bits;
+}__imgehc_cscurcoff_reg_t;	//0xd0~0xd8
+
+typedef union
+{
+	__u32 dwval;
+	struct
+	{
+		__u32	csc_ur_con		:14;//bit0~13
+		__u32	r0				:18;//bit14~31
+	}bits;
+}__imgehc_cscurcon_reg_t;	//0xdc
+
+typedef union
+{
+	__u32 dwval;
+	struct
+	{
+		__u32	csc_vb_coff		:13;//bit0~12
+		__u32	r0				:19;//bit13~31
+	}bits;
+}__imgehc_cscvbcoff_reg_t;	//0xe0~0xe8
+
+typedef union
+{
+	__u32 dwval;
+	struct
+	{
+		__u32	csc_vb_con		:14;//bit0~13
+		__u32	r0				:18;//bit14~31
+	}bits;
+}__imgehc_cscvbcon_reg_t;	//0xec
+
+typedef union
+{
+	__u32 dwval;
+	struct
+	{
+		__u32	spa_coff0		:8;	//bit0~7
+		__u32	spa_coff1		:8;	//bit8~15
+		__u32	spa_coff2		:8;	//bit16~23
+		__u32	r0				:8;	//bit24~31
+	}bits;
+}__imgehc_drcspacoff_reg_t;		//0xf0~0xf8
+
+typedef union
+{
+	__u32 dwval;
+	struct
+	{
+		__u32	inten_coff0		:8;	//bit0~7
+		__u32	inten_coff1		:8;	//bit8~15
+		__u32	inten_coff2		:8;	//bit16~23
+		__u32	inten_coff3		:8;	//bit24~31
+	}bits;
+}__imgehc_drcintcoff_reg_t;		//0x0100 ~ 0x01fc
+
+typedef union
+{
+	__u32 dwval;
+	struct
+	{
+		__u32	lumagain_coff0	:16;//bit0~15
+		__u32	lumagain_coff1	:16;//bit16~31
+	}bits;
+}__imgehc_drclgcoff_reg_t;		//0x0200 ~ 0x03fc
+
+
+typedef struct
+{
+	__imgehc_gnectl_reg_t			gnectl;	//0x00
+	__imgehc_drcsize_reg_t          drcsize;//0x04
+	__u32							r0[2];	//0x08~0x0c
+	__imgehc_drcctl_reg_t			drcctl;	//0x10
+	__imgehc_drclgc_staadd_reg_t	drclgc_addr;//0x14
+	__imgehc_drc_set_reg_t			drc_set;//0x18
+	__imgehc_drc_wp_reg0_t			drc_wp0;//0x1c
+	__imgehc_drc_wp_reg1_t			drc_wp1;//0x20
+	__imgehc_wbctl_reg_t			wbctl;	//0x24
+	__imgehc_wbaddr_reg_t			wbaddr;	//0x28
+	__imgehc_wbline_reg_t			wbline;	//0x2c
+	__imgehc_lhctl_reg_t			lhctl;	//0x30
+	__imgehc_lhthr_reg0_t			lhthr0;	//0x34
+	__imgehc_lhthr_reg1_t			lhthr1;	//0x38
+	__u32							r2;		//0x3c
+	__imgehc_lhslum_reg_t			lhslum[8];	//0x40~0x5c
+	__imgehc_lhscnt_reg_t			lhscnt[8];	//0x0060 ~ 0x007c
+	__imgehc_dfctl_reg_t			dfctl;	//0x80
+	__u32							r3[15];	//0x84~0xbc
+	__imgehc_cscygcoff_reg_t		cscygcoff[3];	//0xc0~0xc8
+	__imgehc_cscygcon_reg_t			cscygcon;	//0xcc
+	__imgehc_cscurcoff_reg_t		cscurcoff[3];	//0xd0~0xd8
+	__imgehc_cscurcon_reg_t			cscurcon;	//0xdc
+	__imgehc_cscvbcoff_reg_t		cscvbcoff[3];	//0xe0~0xe8
+	__imgehc_cscvbcon_reg_t			cscvbcon;	//0xec
+	__imgehc_drcspacoff_reg_t		drcspacoff[3];	//0xf0~0xf8
+	__u32							r4;			//0xff
+	__imgehc_drcintcoff_reg_t		drcintcoff[64];//0x0100 ~ 0x01fc
+	__imgehc_drclgcoff_reg_t		drclgcoff[128];//0x0200 ~ 0x03fc
+}__de_iep_dev_t;
+
+#define ____SEPARATOR_IEP____
+
+__s32 DE_IEP_Set_Reg_Base(__u32 sel, __u32 base);
+__u32 DE_IEP_Get_Reg_Base(__u32 sel, __u32 base);
+__s32 DE_IEP_Enable(__u32 sel);
+__s32 DE_IEP_Disable(__u32 sel);
+__s32 DE_IEP_Set_Mode(__u32 sel, __u32 mod);
+__s32 DE_IEP_Bist_Enable(__u32 sel, __u32 en);
+__s32 DE_IEP_Set_Reg_Refresh_Edge(__u32 sel, __u32 falling);
+__s32 DE_IEP_Set_Csc_Coeff(__u32 sel, __u32 mod);
+__s32 DE_IEP_Set_Display_Size(__u32 sel, __u32 width, __u32 height);
+__s32 DE_IEP_Demo_Win_Enable(__u32 sel, __u32 en);
+__u32 DE_IEP_Set_Demo_Win_Para(__u32 sel, __u32 top, __u32 bot, __u32 left, __u32 right);
+#define ____SEPARATOR_DRC____
+__s32 DE_IEP_Drc_Cfg_Rdy(__u32 sel);
+__u32 DE_IEP_Drc_Set_Lgc_Addr(__u32 sel, __u32 addr);
+__u32 DE_IEP_Drc_Set_Lgc_Autoload_Disable(__u32 sel, __u32 disable);
+__u32 DE_IEP_Drc_Adjust_Enable(__u32 sel, __u32 en);
+__u32 DE_IEP_Drc_Set_Adjust_Para(__u32 sel, __u32 abslumperval, __u32 abslumshf);
+__u32 DE_IEP_Drc_Set_Spa_Coeff(__u32 sel, __u8 spatab[IEP_DRC_SPA_TAB_LEN]);
+__u32 DE_IEP_Drc_Set_Int_Coeff(__u32 sel,  __u8 inttab[IEP_DRC_INT_TAB_LEN]);
+//__u32 DE_IEP_Drc_Set_Lgc_Coeff(__u32 sel,  __u16 lgctab[IEP_DRC_INT_TAB_LEN]);
+#define ____SEPARATOR_LH____
+__u32 DE_IEP_Lh_Set_Mode(__u32 sel, __u32 mod);
+__u32 DE_IEP_Lh_Clr_Rec(__u32 sel);
+__u32 DE_IEP_Lh_Set_Thres(__u32 sel, __u8 thres[IEP_LH_THRES_NUM]);
+__u32 DE_IEP_Lh_Get_Sum_Rec(__u32 sel, __u32 *sum);
+__u32 DE_IEP_Lh_Get_Cnt_Rec(__u32 sel, __u32 *cnt);
+#define ____SEPARATOR_DF____
+#endif
diff --git a/drivers/video/sunxi/disp/de_bsp_sun5i/iep/de_iep_tab.h b/drivers/video/sunxi/disp/de_bsp_sun5i/iep/de_iep_tab.h
new file mode 100644
index 0000000..1b19fcc
--- /dev/null
+++ b/drivers/video/sunxi/disp/de_bsp_sun5i/iep/de_iep_tab.h
@@ -0,0 +1,285 @@
+__u16 pwrsv_lgc_tab[128][256] =
+{
+//tab index : 128
+{},
+//tab index : 129
+{},
+//tab index : 130
+{},
+//tab index : 131
+{},
+//tab index : 132
+{},
+//tab index : 133
+{},
+//tab index : 134
+{2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2831,2824,2818,2811,2805,2798,2792,2785,2779,2773,2766,2760,2753,2747,2740,2734,2727,2721,2714,2708,2701,2695,2688,2682,2676,2669,2663,2656,2650,2643,2637,2630,2624,2617,2611,2604,2598,2591,2585,2579,2572,2566,2559,2553,2546,2540,2533,2527,2520,2514,2507,2501,2494,2488,2481,2475,2469,2462,2456,2449,2443,2436,2430,2423,2417,2410,2404,2397,2391,2384,2378,2371,2365,2359,2352,2346,2339,2333,2326,2320,2313,2307,2300,2294,2287,2281,2274,2268,2262,2255,2249,2242,2236,2229,2223,2216,2210,2203,2197,2190,2184,2177,2171,2164,2158,2152,2145,2139,2132,2126,2119,2113,2106,2100,2093,2087,2080,2074,2067,2061,2054,2048},
+//tab index : 135
+{},
+//tab index : 136
+{2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2810,2804,2797,2791,2785,2778,2772,2766,2760,2753,2747,2741,2734,2728,2722,2715,2709,2703,2696,2690,2684,2677,2671,2665,2658,2652,2646,2639,2633,2627,2620,2614,2608,2601,2595,2588,2582,2576,2569,2563,2557,2550,2544,2537,2531,2525,2518,2512,2505,2499,2493,2486,2480,2473,2467,2461,2454,2448,2441,2435,2429,2422,2416,2409,2403,2396,2390,2384,2377,2371,2364,2358,2351,2345,2339,2332,2326,2319,2313,2306,2300,2294,2287,2281,2274,2268,2261,2255,2248,2242,2235,2229,2223,2216,2210,2203,2197,2190,2184,2177,2171,2164,2158,2152,2145,2139,2132,2126,2119,2113,2106,2100,2093,2087,2080,2074,2067,2061,2054,2048},
+//tab index : 137
+{},
+//tab index : 138
+{},
+//tab index : 139
+{},
+//tab index : 140
+{},
+//tab index : 141
+{},
+//tab index : 142
+{},
+//tab index : 143
+{},
+//tab index : 144
+{},
+//tab index : 145
+{},
+//tab index : 146
+{},
+//tab index : 147
+{},
+//tab index : 148
+{},
+//tab index : 149
+{},
+//tab index : 150
+{},
+//tab index : 151
+{},
+//tab index : 152
+{},
+//tab index : 153
+{2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2649,2644,2639,2634,2629,2624,2619,2614,2609,2604,2599,2594,2589,2583,2578,2573,2567,2562,2557,2551,2546,2541,2535,2530,2524,2519,2513,2507,2502,2496,2491,2485,2479,2474,2468,2462,2456,2451,2445,2439,2433,2428,2422,2416,2410,2404,2398,2392,2386,2380,2374,2368,2362,2356,2350,2344,2338,2332,2326,2320,2314,2308,2302,2296,2289,2283,2277,2271,2265,2258,2252,2246,2240,2233,2227,2221,2215,2208,2202,2196,2189,2183,2177,2170,2164,2158,2151,2145,2138,2132,2126,2119,2113,2106,2100,2093,2087,2080,2074,2068,2061,2055,2048},
+//tab index : 154
+{2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2641,2636,2631,2626,2621,2616,2611,2606,2601,2596,2591,2586,2581,2575,2570,2565,2560,2554,2549,2544,2538,2533,2528,2522,2517,2511,2506,2500,2495,2489,2484,2478,2472,2467,2461,2455,2450,2444,2438,2432,2426,2421,2415,2409,2403,2397,2391,2386,2380,2374,2368,2362,2356,2350,2344,2338,2332,2326,2320,2313,2307,2301,2295,2289,2283,2277,2271,2264,2258,2252,2246,2240,2233,2227,2221,2215,2208,2202,2196,2189,2183,2177,2170,2164,2158,2151,2145,2138,2132,2126,2119,2113,2106,2100,2093,2087,2080,2074,2068,2061,2055,2048},
+//tab index : 155
+{},
+//tab index : 156
+{},
+//tab index : 157
+{2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2615,2611,2606,2601,2596,2592,2587,2582,2577,2572,2567,2562,2557,2552,2547,2542,2537,2532,2527,2522,2516,2511,2506,2500,2495,2490,2484,2479,2473,2468,2462,2457,2451,2446,2440,2435,2429,2423,2418,2412,2406,2400,2395,2389,2383,2377,2372,2366,2360,2354,2348,2342,2336,2330,2324,2318,2312,2306,2300,2294,2288,2282,2276,2270,2264,2257,2251,2245,2239,2233,2227,2220,2214,2208,2202,2195,2189,2183,2176,2170,2164,2157,2151,2145,2138,2132,2126,2119,2113,2106,2100,2093,2087,2081,2074,2068,2061,2055,2048},
+//tab index : 158
+{},
+//tab index : 159
+{2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2599,2594,2590,2585,2580,2576,2571,2566,2562,2557,2552,2547,2542,2537,2532,2527,2522,2517,2512,2507,2502,2497,2491,2486,2481,2476,2470,2465,2459,2454,2449,2443,2438,2432,2427,2421,2415,2410,2404,2399,2393,2387,2381,2376,2370,2364,2358,2353,2347,2341,2335,2329,2323,2317,2311,2305,2299,2293,2287,2281,2275,2269,2263,2257,2251,2245,2239,2232,2226,2220,2214,2208,2201,2195,2189,2183,2176,2170,2164,2157,2151,2145,2138,2132,2126,2119,2113,2106,2100,2093,2087,2081,2074,2068,2061,2055,2048},
+//tab index : 160
+{},
+//tab index : 161
+{},
+//tab index : 162
+{},
+//tab index : 163
+{},
+//tab index : 164
+{},
+//tab index : 165
+{},
+//tab index : 166
+{},
+//tab index : 167
+{},
+//tab index : 168
+{},
+//tab index : 169
+{},
+//tab index : 170
+{},
+//tab index : 171
+{},
+//tab index : 172
+{},
+//tab index : 173
+{},
+//tab index : 174
+{2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2484,2480,2477,2473,2469,2465,2461,2457,2453,2449,2445,2440,2436,2432,2427,2423,2418,2414,2409,2404,2400,2395,2390,2385,2380,2376,2371,2366,2361,2355,2350,2345,2340,2335,2329,2324,2319,2313,2308,2303,2297,2292,2286,2280,2275,2269,2264,2258,2252,2246,2241,2235,2229,2223,2217,2211,2205,2199,2193,2187,2181,2175,2169,2163,2156,2150,2144,2138,2132,2125,2119,2113,2106,2100,2093,2087,2081,2074,2068,2061,2055,2048},
+//tab index : 175
+{},
+//tab index : 176
+{},
+//tab index : 177
+{2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2463,2459,2456,2452,2448,2445,2441,2437,2433,2429,2425,2420,2416,2412,2408,2403,2399,2394,2390,2385,2381,2376,2371,2366,2362,2357,2352,2347,2342,2337,2332,2327,2321,2316,2311,2306,2300,2295,2290,2284,2279,2273,2268,2262,2256,2251,2245,2239,2234,2228,2222,2216,2210,2204,2199,2193,2187,2181,2175,2168,2162,2156,2150,2144,2138,2131,2125,2119,2113,2106,2100,2093,2087,2081,2074,2068,2061,2055,2048},
+//tab index : 178
+{},
+//tab index : 179
+{},
+//tab index : 180
+{},
+//tab index : 181
+{},
+//tab index : 182
+{2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2429,2426,2422,2419,2415,2411,2408,2404,2400,2396,2392,2388,2384,2380,2376,2372,2367,2363,2358,2354,2349,2345,2340,2336,2331,2326,2321,2316,2311,2306,2301,2296,2291,2286,2281,2275,2270,2265,2259,2254,2248,2243,2237,2232,2226,2220,2215,2209,2203,2197,2192,2186,2180,2174,2168,2162,2156,2150,2143,2137,2131,2125,2119,2112,2106,2100,2093,2087,2081,2074,2068,2061,2055,2048},
+//tab index : 183
+{},
+//tab index : 184
+{},
+//tab index : 185
+{},
+//tab index : 186
+{2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2403,2399,2396,2393,2389,2386,2382,2379,2375,2371,2367,2363,2359,2355,2351,2347,2343,2339,2334,2330,2325,2321,2316,2311,2307,2302,2297,2292,2287,2282,2277,2272,2267,2262,2257,2251,2246,2241,2235,2230,2224,2219,2213,2208,2202,2196,2191,2185,2179,2173,2167,2161,2155,2149,2143,2137,2131,2125,2118,2112,2106,2100,2093,2087,2081,2074,2068,2061,2055,2048},
+//tab index : 187
+{2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2396,2393,2390,2387,2383,2380,2376,2372,2369,2365,2361,2357,2353,2349,2345,2341,2337,2333,2328,2324,2319,2315,2310,2306,2301,2296,2291,2286,2281,2276,2271,2266,2261,2256,2251,2246,2240,2235,2229,2224,2218,2213,2207,2202,2196,2190,2185,2179,2173,2167,2161,2155,2149,2143,2137,2131,2125,2118,2112,2106,2100,2093,2087,2081,2074,2068,2061,2055,2048},
+//tab index : 188
+{},
+//tab index : 189
+{},
+//tab index : 190
+{},
+//tab index : 191
+{},
+//tab index : 192
+{},
+//tab index : 193
+{},
+//tab index : 194
+{},
+//tab index : 195
+{},
+//tab index : 196
+{},
+//tab index : 197
+{},
+//tab index : 198
+{},
+//tab index : 199
+{},
+//tab index : 200
+{},
+//tab index : 201
+{},
+//tab index : 202
+{},
+//tab index : 203
+{2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2300,2297,2294,2292,2289,2285,2282,2279,2276,2272,2269,2265,2261,2257,2253,2249,2245,2241,2237,2232,2228,2223,2219,2214,2209,2205,2200,2195,2190,2184,2179,2174,2169,2163,2158,2152,2146,2141,2135,2129,2123,2117,2111,2105,2099,2093,2087,2080,2074,2068,2061,2055,2048},
+//tab index : 204
+{},
+//tab index : 205
+{},
+//tab index : 206
+{},
+//tab index : 207
+{},
+//tab index : 208
+{},
+//tab index : 209
+{},
+//tab index : 210
+{},
+//tab index : 211
+{},
+//tab index : 212
+{},
+//tab index : 213
+{},
+//tab index : 214
+{2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2240,2238,2235,2232,2230,2227,2224,2220,2217,2214,2210,2206,2203,2199,2195,2191,2186,2182,2177,2173,2168,2163,2159,2154,2149,2143,2138,2133,2127,2122,2116,2110,2104,2098,2092,2086,2080,2074,2068,2061,2055,2048},
+//tab index : 215
+{},
+//tab index : 216
+{},
+//tab index : 217
+{},
+//tab index : 218
+{},
+//tab index : 219
+{},
+//tab index : 220
+{},
+//tab index : 221
+{},
+//tab index : 222
+{},
+//tab index : 223
+{2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2194,2192,2190,2187,2184,2181,2178,2175,2172,2168,2164,2160,2156,2152,2148,2144,2139,2134,2129,2124,2119,2114,2109,2103,2098,2092,2086,2080,2074,2067,2061,2055,2048},
+//tab index : 224
+{},
+//tab index : 225
+{2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2185,2182,2180,2177,2175,2172,2168,2165,2162,2158,2154,2150,2146,2142,2138,2133,2128,2124,2119,2114,2108,2103,2097,2092,2086,2080,2074,2067,2061,2055,2048},
+//tab index : 226
+{},
+//tab index : 227
+{},
+//tab index : 228
+{},
+//tab index : 229
+{},
+//tab index : 230
+{},
+//tab index : 231
+{},
+//tab index : 232
+{},
+//tab index : 233
+{},
+//tab index : 234
+{},
+//tab index : 235
+{},
+//tab index : 236
+{},
+//tab index : 237
+{},
+//tab index : 238
+{},
+//tab index : 239
+{},
+//tab index : 240
+{},
+//tab index : 241
+{},
+//tab index : 242
+{},
+//tab index : 243
+{},
+//tab index : 244
+{2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2098,2095,2093,2089,2086,2081,2077,2072,2067,2061,2055,2048},
+//tab index : 245
+{},
+//tab index : 246
+{},
+//tab index : 247
+{},
+//tab index : 248
+{},
+//tab index : 249
+{},
+//tab index : 250
+{},
+//tab index : 251
+{},
+//tab index : 252
+{},
+//tab index : 253
+{},
+//tab index : 254
+{},
+//tab index : 255
+{}
+};
+
+__u8 spatial_coeff[9]={228,241,228,241,255,241,228,241,228};
+
+__u8 intensity_coeff[256]={
+0xFF,0xFE,0xFE,0xFD,0xFB,0xF9,0xF7,0xF5,0xF2,0xEE,0xEB,0xE7,0xE3,0xDE,0xD9,0xD4,
+0xCF,0xCA,0xC4,0xBF,0xB9,0xB3,0xAD,0xA7,0xA0,0x9A,0x94,0x8E,0x88,0x82,0x7C,0x76,
+0x70,0x6A,0x65,0x5F,0x5A,0x55,0x50,0x4B,0x46,0x42,0x3E,0x3A,0x36,0x32,0x2E,0x2B,
+0x28,0x25,0x22,0x1F,0x1D,0x1A,0x18,0x16,0x14,0x12,0x11,0x0F,0x0E,0x0C,0x0B,0x0A,
+0x09,0x08,0x07,0x07,0x06,0x05,0x05,0x04,0x04,0x03,0x03,0x02,0x02,0x02,0x01,0x01,
+0x01,0x01,0x01,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};
+
+__u8 hist_thres_drc[8]={25,30,50,70,110,180,200,255};
+__u8 hist_thres_pwrsv[8] = {128,147,175,199,219,235,247,255};
+__u8 drc_filter[IEP_LH_PWRSV_NUM] = {9,10,11,12,14,15,17,18,20,22,25,27,30,33,37,41,45,50,55,61,67,74,82,90};
+
+
diff --git a/drivers/video/sunxi/disp/de_bsp_sun5i/iep/disp_iep.c b/drivers/video/sunxi/disp/de_bsp_sun5i/iep/disp_iep.c
new file mode 100644
index 0000000..3f3325c
--- /dev/null
+++ b/drivers/video/sunxi/disp/de_bsp_sun5i/iep/disp_iep.c
@@ -0,0 +1,853 @@
+#include "disp_iep.h"
+#include "de_iep.h"
+#include "de_iep_tab.h"
+#include "../de/disp_clk.h"
+#include "../de/disp_lcd.h"
+
+extern __u32 g_clk_status;
+
+static __hdle h_iepahbclk, h_iepdramclk, h_iepmclk;
+static __disp_iep_t giep[2];	//IEP module parameters
+static __disp_pwrsv_t gpwrsv[2];	//Power Saving algorithm parameters
+static __u32 *pttab;   //POINTER of LGC tab
+static __u32 printf_cnt=0; //for test
+
+//power save core
+#define SCENE_CHNG_THR   45	//
+#define SCENE_CHANGE_DETECT_DISABLE 1	//enable detetion cause filcker in actual ic test 111230, so disable it.
+
+#define CLK_ON 1
+#define CLK_OFF 0
+#define RST_INVAILD 0
+#define RST_VAILD   1
+
+//#define DRC_DEFAULT_ENABLE	//Enable drc default
+//#define DRC_DEMO //when defined DRC_DEFAULT_ENABLE, run DRC in DEMO mode
+#define PWRSAVE_PROC_THRES	85 //when BSP_disp_lcd_get_bright() exceed PWRSAVE_PROC_THRES, STOP PWRSAVE.
+
+#define ____SEPARATOR_IEP_DRC_CORE____
+
+/*
+*********************************************************************************************************
+*                                           PWRSAVE_CORE
+*
+* Description : PoWeRSAVE alg core
+*
+* Arguments   : sel		<screen index>
+*
+* Returns         :     0
+*
+*Note	       :    power save mode alg.  Dynamic adjust backlight and lgc gain through screen content and user backlight setting
+*                               Add SCENE CHANGE DETECT.
+*			  Add HANG-UP DETECT: When use PWRSAVE_CORE in LOW referential backlight condiction, backlight will flicker. So STOP use PWRSAVE_CORE.
+*
+*Date	:       11/12/21
+**********************************************************************************************************/
+static __inline __s32 PWRSAVE_CORE(__u32 sel)
+{
+	__u32 i;
+	__u32 hist_region_num = 8;
+	__u32 histcnt[IEP_LH_INTERVAL_NUM];
+	__u32 hist[IEP_LH_INTERVAL_NUM], p95;
+	__u32 size=0;
+	__u32 min_adj_index;
+	__u32 lgcaddr;
+	__u32 drc_filter_total=0, drc_filter_tmp=0;
+
+	if(BSP_disp_lcd_get_bright(sel) < PWRSAVE_PROC_THRES)
+	{
+		memset(gpwrsv[sel].min_adj_index_hist, 255, sizeof(__u8)*IEP_LH_PWRSV_NUM);
+		lgcaddr = (__u32)pttab + ((128-1)<<9);
+		lgcaddr = __pa(lgcaddr);
+		DE_IEP_Drc_Set_Lgc_Addr(sel, lgcaddr);	//set "gain=1" tab to lgc
+
+		gdisp.screen[sel].lcd_bright_dimming = 256;
+		BSP_disp_lcd_set_bright(sel, BSP_disp_lcd_get_bright(sel),1);
+
+	}
+	else
+	{
+		p95=0;
+
+		hist_region_num = (hist_region_num>8)? 8 : IEP_LH_INTERVAL_NUM;
+
+		//read histogram result
+		DE_IEP_Lh_Get_Cnt_Rec(sel, histcnt);
+
+		for(i=0; i<IEP_LH_INTERVAL_NUM; i++)
+		{
+			size += histcnt[i];
+		}
+		size = (size==0) ? 1 : size;
+
+		//calculate some var
+		hist[0] = (histcnt[0]*100)/size;
+		for (i = 1; i < hist_region_num; i++)
+		{
+			hist[i] = (histcnt[i]*100)/size + hist[i-1];
+		}
+
+		for (i = 0; i< hist_region_num; i++)
+		{
+			if (hist[i] >= 95)
+			{
+				p95 = hist_thres_pwrsv[i];
+				break;
+			}
+		}
+
+		if(i == hist_region_num)//sometime, hist[hist_region_num - 1] may less than 95 due to integer calc
+		{
+			p95 = hist_thres_pwrsv[7];
+		}
+
+		min_adj_index = p95;
+
+		//__inf("min_adj_index: %d\n", min_adj_index);
+
+#if SCENE_CHANGE_DETECT_DISABLE
+		for(i = 0; i <IEP_LH_PWRSV_NUM - 1; i++)
+		{
+			gpwrsv[sel].min_adj_index_hist[i] = gpwrsv[sel].min_adj_index_hist[i+1];
+		}
+		gpwrsv[sel].min_adj_index_hist[IEP_LH_PWRSV_NUM-1] = min_adj_index;
+
+		for (i = 0; i <IEP_LH_PWRSV_NUM; i++)
+		{
+			drc_filter_total += drc_filter[i];
+			drc_filter_tmp += drc_filter[i]*gpwrsv[sel].min_adj_index_hist[i];
+		}
+		min_adj_index = drc_filter_tmp/drc_filter_total;
+#else
+		//ADD frame average alg
+		//SCENE CHANGE DETECT
+		if (abs((__s32)min_adj_index - gpwrsv[sel].min_adj_index_hist[IEP_LH_PWRSV_NUM - 1]) > SCENE_CHNG_THR)
+		{
+			memset(gpwrsv[sel].min_adj_index_hist, min_adj_index, sizeof(__u8)*IEP_LH_PWRSV_NUM);
+		}
+		else
+		{
+			//store new gain index, shift history data
+			for(i = 0; i <IEP_LH_PWRSV_NUM - 1; i++)
+			{
+				gpwrsv[sel].min_adj_index_hist[i] = gpwrsv[sel].min_adj_index_hist[i+1];
+			}
+			gpwrsv[sel].min_adj_index_hist[IEP_LH_PWRSV_NUM-1] = min_adj_index;
+
+			for (i = 0; i <IEP_LH_PWRSV_NUM; i++)
+			{
+				drc_filter_total += drc_filter[i];
+				drc_filter_tmp += drc_filter[i]*gpwrsv[sel].min_adj_index_hist[i];
+			}
+			min_adj_index = drc_filter_tmp/drc_filter_total;
+		}
+
+#endif
+
+		min_adj_index = (min_adj_index >= 255)?255:((min_adj_index<hist_thres_pwrsv[0])?hist_thres_pwrsv[0]:min_adj_index);
+		gdisp.screen[sel].lcd_bright_dimming = (min_adj_index+1);
+
+		BSP_disp_lcd_set_bright(sel, BSP_disp_lcd_get_bright(sel),1);
+
+		//lgcaddr = (__u32)pwrsv_lgc_tab[min_adj_index-128];
+		lgcaddr = (__u32)pttab + ((min_adj_index - 128)<<9);
+
+		if(printf_cnt == 120)
+		{
+			__inf("save backlight power: %d percent\n", (256 - (__u32)min_adj_index)*100 / 256);
+			printf_cnt = 0;
+		}
+		else
+		{
+			printf_cnt++;
+		}
+
+		//virtual to physcal addr
+		lgcaddr = __pa(lgcaddr);
+
+		DE_IEP_Drc_Set_Lgc_Addr(sel, lgcaddr);
+	}
+
+	return 0;
+}
+
+#define ____SEPARATOR_IEP_BSP____
+
+/******************************************************************************/
+/************BSP_disp_iep_drc_enable********************************/
+/**开启/关闭自动背光控制功能**************************/
+/******************************************************************************/
+__s32 BSP_disp_iep_drc_enable(__u32 sel, __bool en)
+{
+	if(sel == 0)
+	{
+		if(en)
+		{
+			gdisp.screen[sel].iep_status |= DRC_REQUIRED;
+		}
+		else
+		{
+			gdisp.screen[sel].iep_status &= DRC_REQUIRED_MASK;
+		}
+		Disp_drc_enable(sel, en);
+		return DIS_SUCCESS;
+	}
+	else
+	{
+		return DIS_NOT_SUPPORT;
+	}
+
+}
+
+__s32 BSP_disp_iep_get_drc_enable(__u32 sel)
+{
+	__u32 ret;
+
+	if(sel == 0)
+	{
+		if(gdisp.screen[sel].iep_status & DRC_USED)	//used (ON)
+		{
+			ret = 1;
+		}
+		else if(!(gdisp.screen[sel].iep_status & DRC_USED) && (gdisp.screen[sel].iep_status & DRC_REQUIRED))	//required but not used(ON)
+		{
+			ret = 2;
+		}
+		else	//not required and not used (OFF)
+		{
+			ret = 0;
+		}
+
+		return ret;
+	}
+	else
+	{
+		return DIS_NOT_SUPPORT;
+	}
+}
+
+/******************************************************************************/
+/************BSP_disp_iep_deflicker_enable*************************/
+/**开启/关闭去行间抖动功能      **************************/
+/******************************************************************************/
+__s32 BSP_disp_iep_deflicker_enable(__u32 sel, __bool en)
+{
+	if(sel == 0)
+	{
+		if(en)
+		{
+			gdisp.screen[sel].iep_status |= DE_FLICKER_REQUIRED;
+		}
+		else
+		{
+			gdisp.screen[sel].iep_status &= DE_FLICKER_REQUIRED_MASK;
+		}
+		Disp_de_flicker_enable(sel, en);
+		return DIS_SUCCESS;
+	}
+	else
+	{
+		return DIS_NOT_SUPPORT;
+	}
+
+}
+
+__s32 BSP_disp_iep_get_deflicker_enable(__u32 sel)
+{
+	__u32 ret;
+
+	if(sel == 0)
+	{
+		if(gdisp.screen[sel].iep_status & DE_FLICKER_USED)	//used (ON)
+		{
+			ret = 1;
+		}
+		else if(!(gdisp.screen[sel].iep_status & DE_FLICKER_USED) && (gdisp.screen[sel].iep_status & DE_FLICKER_REQUIRED))	//required but not used(ON)
+		{
+			ret = 2;
+		}
+		else	//not required and not used (OFF)
+		{
+			ret = 0;
+		}
+
+		return ret;
+	}
+	else
+	{
+		return DIS_NOT_SUPPORT;
+	}
+}
+
+__s32 BSP_disp_iep_set_demo_win(__u32 sel, __u32 mode, __disp_rect_t *regn)
+{
+	__u32 scn_width, scn_height;
+
+	if(regn == NULL)
+    {
+    	DE_WRN("BSP_disp_iep_set_demo_win: parameters invalid!\n");
+        return DIS_PARA_FAILED;
+    }
+
+	scn_width = BSP_disp_get_screen_width(sel);
+    scn_height = BSP_disp_get_screen_height(sel);
+
+	if((regn->x < 0) || ((regn->x + regn->width)>scn_width) ||
+		(regn->y < 0) || ((regn->y + regn->height)>scn_height))
+	{
+		DE_WRN("BSP_disp_iep_set_demo_win: win_x: %d, win_y: %d, win_width: %d, win_height: %d.\n", regn->x, regn->y, regn->width, regn->height);
+		DE_WRN("IEP Windows Size Invaild!\n");
+		return DIS_PARA_FAILED;
+	}
+
+	if(mode == 2)	//drc
+	{
+		memcpy(&giep[sel].drc_win, regn, sizeof(__disp_rect_t));
+		DE_INF("BSP_disp_iep_set_demo_win: drc window  win_x: %d, win_y: %d, win_width: %d, win_height: %d.\n", giep[sel].drc_win.x, giep[sel].drc_win.y, giep[sel].drc_win.width, giep[sel].drc_win.height);
+	}
+	else if(mode == 1) //de-flicker
+	{
+		memcpy(&giep[sel].deflicker_win, regn, sizeof(__disp_rect_t));
+		DE_INF("BSP_disp_iep_set_demo_win: drc window  win_x: %d, win_y: %d, win_width: %d, win_height: %d.\n", giep[sel].drc_win.x, giep[sel].drc_win.y, giep[sel].drc_win.width, giep[sel].drc_win.height);
+	}
+	return DIS_SUCCESS;
+}
+
+#define ____SEPARATOR_IEP_MAIN_TASK____
+
+//en : 0-close when vbi
+//en : 1- open when vbi
+//en : 2-close immediately
+__s32 Disp_drc_enable(__u32 sel, __u32 en)
+{
+	if(sel == 0)
+	{
+		switch(en)
+		{
+			case 0:
+
+				if(gdisp.screen[sel].iep_status & DRC_USED)
+				{
+					gdisp.screen[sel].iep_status |= DRC_NEED_CLOSED;
+				}
+				else
+				{
+					DE_INF("de: DRC hasn't opened yet !\n");
+				}
+				break;
+
+			case 1:
+				if(gdisp.screen[sel].iep_status & DRC_REQUIRED)
+				{
+					if((gdisp.screen[sel].output_type == DISP_OUTPUT_TYPE_LCD) && (gdisp.screen[sel].status & LCD_ON))
+					{
+						if(!(gdisp.screen[sel].iep_status & DRC_USED))
+						{
+							Disp_drc_init(sel);
+							gdisp.screen[sel].iep_status |= DRC_USED;
+							DE_INF("de: DRC open now!\n");
+						}
+						else
+						{
+							DE_INF("de: DRC has already opened before !\n");
+						}
+					}
+					else
+					{
+						DE_INF("de: Will OPEN DRC when output to LCD !\n");
+					}
+				}
+				else
+				{
+					DE_INF("de: Run DISP_CMD_DRC_ON will open DRC !\n");
+				}
+				break;
+
+			case 2:
+				if(gdisp.screen[sel].iep_status & DRC_USED)
+				{
+					Disp_drc_close_proc(sel, 0);
+				}
+				else
+				{
+					DE_INF("de: DRC hasn't opened yet !\n");
+				}
+				break;
+
+		}
+		return 0;
+	}
+	else
+	{
+		return -1;
+	}
+}
+
+__s32 Disp_drc_init(__u32 sel)
+{
+	__u32 scn_width, scn_height;
+
+	scn_width = BSP_disp_get_screen_width(sel);
+    scn_height = BSP_disp_get_screen_height(sel);
+
+	if(sel == 0)
+	{
+		//BSP_disp_cfg_start(sel); //to prevent BE OUTCSC output YUV when IEP CSC not ready
+		//IEP clk
+		iep_clk_open(sel);
+
+		//another module
+		//DE_BE_Output_Cfg_Csc_Coeff(sel, DISP_OUTPUT_TYPE_TV, 0);	//when running drc mode, debe must output yuv format
+        //BSP_disp_set_output_csc(sel, gdisp.screen[sel].output_type, 1);
+		//IEP module
+		DE_IEP_Set_Mode(sel, 2);
+		DE_IEP_Set_Display_Size(sel, scn_width, scn_height);
+		//DE_IEP_Set_Csc_Coeff(sel, 3);
+		DE_IEP_Drc_Set_Spa_Coeff(sel, spatial_coeff);
+		DE_IEP_Drc_Set_Int_Coeff(sel, intensity_coeff);
+
+		DE_IEP_Drc_Adjust_Enable(sel, 0);	//default: no adjust
+		DE_IEP_Drc_Set_Lgc_Autoload_Disable(sel, 0); //default: autoload enable
+
+		DE_IEP_Lh_Set_Mode(sel, 0);	//default: histogram normal mode 				//DE_IEP_Lh_Set_Mode(sel, 1); // histogram average mode
+
+		//DE_IEP_Lh_Set_Thres(sel, hist_thres_drc);
+		DE_IEP_Lh_Set_Thres(sel, hist_thres_pwrsv);
+		//gpwrsv[sel].user_bl = gdisp.screen[sel].lcd_bright;
+
+		memset(gpwrsv[sel].min_adj_index_hist, 255, sizeof(__u8)*IEP_LH_PWRSV_NUM);
+
+		//giep[sel].drc_en = 1;
+		giep[sel].drc_win_en = 1;
+	/*	giep[sel].drc_win.x = 0;
+		giep[sel].drc_win.y = 0;
+		giep[sel].drc_win.width = scn_width;
+		giep[sel].drc_win.height = scn_height;*/ //will clear when drc enable actually, but apps dont know when, so delete it.
+		giep[sel].waitframe = 1;	//set 1 to make sure first frame wont get a random lgc table
+		giep[sel].runframe = 0;
+
+		//BSP_disp_cfg_finish(sel); //to prevent BE OUTCSC output YUV when IEP CSC not ready
+
+		return 0;
+	}
+	else
+	{
+		return -1;
+	}
+}
+
+//en : 0-close when vbi
+//en : 1- open when vbi
+//en : 2-close immediately
+__s32 Disp_de_flicker_enable(__u32 sel, __u32 en)
+{
+	__disp_tv_mode_t tv_mode;
+	__u32 scan_mode;
+	__u32 scaler_index;
+
+	tv_mode = gdisp.screen[sel].tv_mode;
+	scan_mode = gdisp.screen[sel].b_out_interlace;
+
+	if(sel == 0)
+	{
+		switch(en)
+		{
+			case 0:
+				if(gdisp.screen[sel].iep_status & DE_FLICKER_USED)
+				{
+					BSP_disp_cfg_start(sel);
+
+					for(scaler_index=0; scaler_index<2; scaler_index++)
+				    {
+				        if((gdisp.scaler[scaler_index].status & SCALER_USED) && (gdisp.scaler[scaler_index].screen_index == sel))
+				        {
+				            Scaler_Set_Outitl(scaler_index, TRUE);
+				            gdisp.scaler[scaler_index].b_reg_change = TRUE;
+				        }
+			      	}
+
+					DE_BE_Set_Outitl_enable(sel, TRUE);	//must do in sun5i
+
+					gdisp.screen[sel].iep_status &= DE_FLICKER_NEED_CLOSED;
+
+					BSP_disp_cfg_finish(sel);
+				}
+				else
+				{
+					DE_INF("de: De-flicker hasn't opened yet!\n");
+				}
+				break;
+
+			case 1:
+				if(gdisp.screen[sel].iep_status & DE_FLICKER_REQUIRED) //when set DISP_CMD_DE_FLICKER_ON before
+				{
+					if((gdisp.screen[sel].output_type == DISP_OUTPUT_TYPE_TV) && scan_mode && (gdisp.screen[sel].status & TV_ON)) //when interlaced tv on
+					{
+						if(!(gdisp.screen[sel].iep_status & DE_FLICKER_USED))
+						{
+							BSP_disp_cfg_start(sel);
+
+							//config defe to fit de-flicker
+							for(scaler_index=0; scaler_index<2; scaler_index++)
+					        {
+					            if((gdisp.scaler[scaler_index].status & SCALER_USED) && (gdisp.scaler[scaler_index].screen_index == sel))
+					            {
+					                Scaler_Set_Outitl(scaler_index, FALSE);
+					                gdisp.scaler[scaler_index].b_reg_change = TRUE;
+					            }
+					        }
+
+							//config debe to fit de-flicker
+							DE_BE_Set_Outitl_enable(sel, FALSE);	//must do in sun5i
+
+							Disp_de_flicker_init(sel);
+							gdisp.screen[sel].iep_status |= DE_FLICKER_USED;
+
+							BSP_disp_cfg_finish(sel);
+						}
+						else
+						{
+							DE_INF("de: De-flicker has already opened before !\n");
+						}
+					}
+					else
+					{
+						DE_INF("de: Will OPEN de-flicker when output to interlaced device !\n");
+					}
+				}
+				else
+				{
+					DE_INF("de: Run DISP_CMD_DE_FLICKER_ON will open de-flicker !\n");
+				}
+				break;
+
+			case 2:
+				if(gdisp.screen[sel].iep_status & DE_FLICKER_USED)
+				{
+					BSP_disp_cfg_start(sel);
+
+					for(scaler_index=0; scaler_index<2; scaler_index++)
+				    {
+				        if((gdisp.scaler[scaler_index].status & SCALER_USED) && (gdisp.scaler[scaler_index].screen_index == sel))
+				        {
+				            Scaler_Set_Outitl(scaler_index, TRUE);
+				            gdisp.scaler[scaler_index].b_reg_change = TRUE;
+				        }
+			      	}
+
+					DE_BE_Set_Outitl_enable(sel, TRUE);	//must do in sun5i
+
+					Disp_de_flicker_close_proc(sel, 1);
+
+					BSP_disp_cfg_finish(sel);
+				}
+				else
+				{
+					DE_INF("de: De-flicker hasn't opened yet!\n");
+				}
+				break;
+			}
+		return 0;
+	}
+	else
+	{
+		return -1;
+	}
+}
+
+__s32 Disp_de_flicker_init(__u32 sel)
+{
+	__u32 scn_width, scn_height;
+
+	scn_width = BSP_disp_get_screen_width(sel);
+    scn_height = BSP_disp_get_screen_height(sel);
+
+	if(sel == 0)
+	{
+		DE_IEP_Set_Mode(sel, 1);
+		DE_IEP_Set_Display_Size(sel, scn_width, scn_height);
+		DE_IEP_Set_Csc_Coeff(sel, 1);
+
+		giep[sel].deflicker_win_en = 1;
+
+		giep[sel].deflicker_win.x = 0;
+		giep[sel].deflicker_win.y = 0;
+		giep[sel].deflicker_win.width = scn_width;
+		giep[sel].deflicker_win.height = scn_height;
+
+		return 0;
+	}
+	else
+	{
+		return -1;
+	}
+}
+
+#define ____SEPARATOR_IEP_CLK____
+
+__s32 iep_clk_init(__u32 sel)
+{
+    h_iepahbclk = OSAL_CCMU_OpenMclk(AW_MOD_CLK_AHB_IEP);
+    h_iepdramclk = OSAL_CCMU_OpenMclk(AW_MOD_CLK_SDRAM_IEP);
+    h_iepmclk = OSAL_CCMU_OpenMclk(AW_MOD_CLK_IEP);
+
+	OSAL_CCMU_MclkReset(h_iepmclk, RST_INVAILD);
+	OSAL_CCMU_MclkOnOff(h_iepahbclk, CLK_ON);
+
+	g_clk_status  |= CLK_IEP_AHB_ON;
+	return DIS_SUCCESS;
+}
+
+__s32 iep_clk_exit(__u32 sel)
+{
+	OSAL_CCMU_MclkReset(h_iepmclk, RST_VAILD);
+
+	if(g_clk_status & CLK_IEP_DRAM_ON)
+	{
+		OSAL_CCMU_MclkOnOff(h_iepdramclk, CLK_OFF);
+	}
+
+	if(g_clk_status & CLK_IEP_MOD_ON)
+	{
+		OSAL_CCMU_MclkOnOff(h_iepmclk, CLK_OFF);
+	}
+
+	OSAL_CCMU_MclkOnOff(h_iepahbclk, CLK_OFF);
+
+	OSAL_CCMU_CloseMclk(h_iepahbclk);
+    OSAL_CCMU_CloseMclk(h_iepdramclk);
+    OSAL_CCMU_CloseMclk(h_iepmclk);
+
+	g_clk_status &= (CLK_IEP_AHB_OFF & CLK_IEP_MOD_OFF & CLK_IEP_DRAM_OFF);
+    return DIS_SUCCESS;
+}
+
+__s32 iep_clk_open(__u32 sel)
+{
+	OSAL_CCMU_MclkOnOff(h_iepmclk, CLK_ON);
+	OSAL_CCMU_MclkOnOff(h_iepdramclk, CLK_ON);
+
+	g_clk_status |= (CLK_IEP_MOD_ON | CLK_IEP_DRAM_ON);
+	return DIS_SUCCESS;
+}
+
+__s32 iep_clk_close(__u32 sel)
+{
+	OSAL_CCMU_MclkOnOff(h_iepmclk, CLK_OFF);
+	OSAL_CCMU_MclkOnOff(h_iepdramclk, CLK_OFF);
+
+	g_clk_status &= (CLK_IEP_MOD_OFF & CLK_IEP_DRAM_OFF);
+	return DIS_SUCCESS;
+}
+
+#define ____SEPARATOR_IEP_INIT_EXIT____
+
+__s32 Disp_iep_init(__u32 sel)
+{
+
+#ifdef DRC_DEFAULT_ENABLE
+	__disp_rect_t regn;
+#endif
+
+	memset(giep, 0, sizeof(giep));
+	memset(gpwrsv, 0, sizeof(gpwrsv));
+
+	if(sel == 0)
+	{
+		iep_clk_init(sel);
+        pttab = kmalloc(sizeof(pwrsv_lgc_tab), GFP_KERNEL | __GFP_ZERO);
+
+        memcpy(pttab, pwrsv_lgc_tab, sizeof(pwrsv_lgc_tab));
+
+#ifdef DRC_DEFAULT_ENABLE
+#ifdef DRC_DEMO
+		regn.x = BSP_disp_get_screen_width(sel)/2;
+		regn.y = 0;
+		regn.width = BSP_disp_get_screen_width(sel)/2;
+		regn.height = BSP_disp_get_screen_height(sel);
+#else
+		regn.x = 0;
+		regn.y = 0;
+		regn.width = BSP_disp_get_screen_width(sel);
+		regn.height = BSP_disp_get_screen_height(sel);
+#endif
+		BSP_disp_iep_drc_enable(sel, 1);
+		BSP_disp_iep_set_demo_win(sel,  2,  &regn);
+#endif
+
+		return 0;
+	}
+	else
+	{
+		return -1;
+	}
+}
+
+__s32 Disp_iep_exit(__u32 sel)
+{
+	if(sel == 0)
+	{
+		iep_clk_exit(sel);
+		kfree(pttab);
+		return 0;
+	}
+	else
+	{
+		return -1;
+	}
+}
+
+#define ____SEPARATOR_IEP_INT_PROC____
+
+__s32 IEP_Operation_In_Vblanking(__u32 sel, __u32 tcon_index)
+{
+	if(gpanel_info[sel].tcon_index == tcon_index)	//if use DMA mode for LCD panel??
+	{
+		if(gdisp.screen[sel].iep_status & DRC_NEED_CLOSED)
+		{
+			Disp_drc_close_proc(sel, tcon_index);
+		}
+		else if(gdisp.screen[sel].iep_status & DRC_USED)
+		{
+			Disp_drc_proc(sel, tcon_index);
+		}
+	}
+	else if(tcon_index == 1)
+	{
+		if(gdisp.screen[sel].iep_status & DE_FLICKER_NEED_CLOSED)
+		{
+			Disp_de_flicker_close_proc(sel, tcon_index);
+		}
+		else if(gdisp.screen[sel].iep_status & DE_FLICKER_USED)
+		{
+			Disp_de_flicker_proc(sel, tcon_index);
+		}
+	}
+
+	return DIS_SUCCESS;
+}
+
+__s32 Disp_drc_proc(__u32 sel, __u32 tcon_index)
+{
+	__u32 top, bot, left, right;
+	__u32 lgcaddr;
+
+	if(sel == 0)
+	{
+		if(giep[sel].runframe < giep[sel].waitframe)
+		{
+			//first  frame, wont get the valid histogram, so open a "zero" window
+			top = 0;
+			bot = 0;
+			left = 0;
+			right = 0;
+
+			DE_IEP_Set_Demo_Win_Para(sel, top, bot, left, right);
+			DE_IEP_Demo_Win_Enable(sel, 1);		//enable here
+			DE_IEP_Set_Csc_Coeff(sel, 3);		//12-04-01 debug flicker in LCD opening
+			BSP_disp_set_output_csc(sel, gdisp.screen[sel].output_type, 1);
+
+			lgcaddr = (__u32)pttab + ((128-1)<<9);
+			lgcaddr = __pa(lgcaddr);
+			DE_IEP_Drc_Set_Lgc_Addr(sel, lgcaddr);	//set "gain=1" tab to lgc
+			DE_IEP_Enable(sel);  //enable here
+    		//DE_INF("waitting for runframe %d up to%d!\n", giep.runframe, giep.waitframe);
+    		giep[sel].runframe++;
+		}
+		else
+		{
+			if(giep[sel].drc_win_en)
+			{
+				//convert rectangle to register
+				top = giep[sel].drc_win.y;
+				bot = giep[sel].drc_win.y + giep[sel].drc_win.height - 1;
+				left = giep[sel].drc_win.x;
+				right = giep[sel].drc_win.x + giep[sel].drc_win.width - 1;
+
+				DE_IEP_Set_Demo_Win_Para(sel, top, bot, left, right);
+			}
+			//BACKLIGHT Control ALG
+			PWRSAVE_CORE(sel);
+		}
+
+		return 0;
+	}
+	else
+	{
+		return -1;
+	}
+}
+
+__s32 Disp_drc_close_proc(__u32 sel, __u32 tcon_index)
+{
+	if(sel == 0)
+	{
+		//IEP module
+		DE_IEP_Disable(sel);
+
+		//another module
+        BSP_disp_set_output_csc(sel, gdisp.screen[sel].output_type, 0);;
+
+		//IEP clk
+		iep_clk_close(sel);
+
+		gdisp.screen[sel].iep_status &= DRC_USED_MASK;
+		gdisp.screen[sel].iep_status &= DRC_NEED_CLOSED_MASK;
+
+		gdisp.screen[sel].lcd_bright_dimming = 256;
+		BSP_disp_lcd_set_bright(sel, BSP_disp_lcd_get_bright(sel),1);
+		return 0;
+	}
+	else
+	{
+		return -1;
+	}
+}
+
+__s32 Disp_de_flicker_proc(__u32 sel, __u32 tcon_index)
+{
+	__u32 top, bot, left, right;
+
+	if(sel == 0)
+	{
+		if(giep[sel].deflicker_win_en)
+		{
+			top = giep[sel].deflicker_win.y;
+			bot = giep[sel].deflicker_win.y + giep[sel].deflicker_win.height - 1;
+			left = giep[sel].deflicker_win.x;
+			right = giep[sel].deflicker_win.x + giep[sel].deflicker_win.width - 1;
+
+			DE_IEP_Set_Demo_Win_Para(sel, top, bot, left, right);
+			DE_IEP_Demo_Win_Enable(sel, 1);
+		}
+
+		DE_IEP_Enable(sel);
+
+		return 0;
+	}
+	else
+	{
+		return -1;
+	}
+}
+
+__s32 Disp_de_flicker_close_proc(__u32 sel, __u32 tcon_index)
+{
+	if(sel == 0)
+	{
+		//IEP module
+		DE_IEP_Disable(sel);
+
+		//IEP clk
+		iep_clk_close(sel);
+		gdisp.screen[sel].iep_status &= DE_FLICKER_NEED_CLOSED_MASK;
+		gdisp.screen[sel].iep_status &= DE_FLICKER_USED_MASK;
+
+		return 0;
+	}
+	else
+	{
+		return -1;
+	}
+}
+
diff --git a/drivers/video/sunxi/disp/de_bsp_sun5i/iep/disp_iep.h b/drivers/video/sunxi/disp/de_bsp_sun5i/iep/disp_iep.h
new file mode 100644
index 0000000..e5654ff
--- /dev/null
+++ b/drivers/video/sunxi/disp/de_bsp_sun5i/iep/disp_iep.h
@@ -0,0 +1,83 @@
+#ifndef __DISP_IEP_H__
+#define __DISP_IEP_H__
+
+#include "../de/disp_display.h"
+#include "de_iep.h"
+#include "../de/disp_event.h"
+
+#define CLK_IEP_AHB_ON      0x00000008
+#define CLK_IEP_MOD_ON 		0x00000080
+#define CLK_IEP_DRAM_ON     0x00000800
+
+#define CLK_IEP_AHB_OFF		(~(CLK_IEP_AHB_ON	    ))
+#define CLK_IEP_MOD_OFF 	(~(CLK_IEP_MOD_ON	    ))
+#define CLK_IEP_DRAM_OFF 	(~(CLK_IEP_DRAM_ON	    ))
+
+#define DE_FLICKER_USED 				0x01000000
+#define DE_FLICKER_USED_MASK 			(~(DE_FLICKER_USED))
+#define DE_FLICKER_REQUIRED 			0x02000000
+#define DE_FLICKER_REQUIRED_MASK 		(~(DE_FLICKER_REQUIRED))
+#define DRC_USED 						0x04000000
+#define DRC_USED_MASK 					(~(DRC_USED))
+#define DRC_REQUIRED					0x08000000
+#define DRC_REQUIRED_MASK 				(~(DRC_REQUIRED))
+#define DE_FLICKER_NEED_CLOSED 			0x10000000
+#define DE_FLICKER_NEED_CLOSED_MASK 	(~(DE_FLICKER_NEED_CLOSED))
+#define DRC_NEED_CLOSED 				0x20000000
+#define DRC_NEED_CLOSED_MASK			(~(DRC_NEED_CLOSED))
+
+//for power saving mode alg0
+#define IEP_LH_PWRSV_NUM 24
+
+typedef struct
+{
+	__u32 			mod;
+
+	//drc
+	//__u32           drc_en;
+	__u32  			drc_win_en;
+	__disp_rect_t   drc_win;
+	__u32           adjust_en;
+	__u32           lgc_autoload_dis;
+	__u32           waitframe;
+	__u32           runframe;
+	__u32           valid_width;
+	__u32           valid_height;
+
+	//lh
+	__u32           lgc_base_add;
+	__u8            lh_thres_val[IEP_LH_THRES_NUM];
+
+	//de-flicker
+	//__u32           deflicker_en;
+	__u32           deflicker_win_en;
+	__disp_rect_t   deflicker_win;
+
+}__disp_iep_t;
+
+typedef struct
+{
+	__u8 			min_adj_index_hist[IEP_LH_PWRSV_NUM];
+	__u32           user_bl;
+}__disp_pwrsv_t;
+
+extern __s32 Disp_iep_init(__u32 sel);
+extern __s32 Disp_iep_exit(__u32 sel);
+extern __s32 Disp_drc_enable(__u32 sel, __u32 en);
+extern __s32 Disp_drc_init(__u32 sel);
+extern __s32 Disp_de_flicker_enable(__u32 sel, __u32 en);
+extern __s32 Disp_de_flicker_init(__u32 sel);
+extern __s32 iep_clk_init(__u32 sel);
+extern __s32 iep_clk_exit(__u32 sel);
+extern __s32 iep_clk_open(__u32 sel);
+extern __s32 iep_clk_close(__u32 sel);
+extern __s32 IEP_Operation_In_Vblanking(__u32 sel, __u32 tcon_index);
+extern __s32 Disp_drc_proc(__u32 sel, __u32 tcon_index);
+extern __s32 Disp_drc_close_proc(__u32 sel, __u32 tcon_index);
+extern __s32 Disp_de_flicker_proc(__u32 sel, __u32 tcon_index);
+extern __s32 Disp_de_flicker_close_proc(__u32 sel, __u32 tcon_index);
+
+extern __s32 DE_IEP_Set_Reg_Base(__u32 sel, __u32 base);
+
+#endif
+
diff --git a/drivers/video/sunxi/disp/dev_disp.c b/drivers/video/sunxi/disp/dev_disp.c
index cd364c3..ce29865 100644
--- a/drivers/video/sunxi/disp/dev_disp.c
+++ b/drivers/video/sunxi/disp/dev_disp.c
@@ -87,6 +87,13 @@ static struct resource disp_resource[DISP_IO_NUM] =
 		.end   = 0x01c1bfff,
 		.flags = IORESOURCE_MEM,
 	},
+#ifdef CONFIG_ARCH_SUN5I
+	[DISP_IO_IEP] = {
+		.start = 0x01e70000,
+		.end   = 0x01e703ff,
+		.flags = IORESOURCE_MEM,
+	},
+#endif
 };
 
 
@@ -257,6 +264,9 @@ __s32 DRV_DISP_Init(void)
     para.base_lcdc1     = (__u32)g_fbi.base_lcdc1;
     para.base_tvec0      = (__u32)g_fbi.base_tvec0;
     para.base_tvec1      = (__u32)g_fbi.base_tvec1;
+#ifdef CONFIG_ARCH_SUN5I
+    para.base_iep       = (__u32)g_fbi.base_iep;
+#endif
     para.base_ccmu      = (__u32)g_fbi.base_ccmu;
     para.base_sdram     = (__u32)g_fbi.base_sdram;
     para.base_pioc      = (__u32)g_fbi.base_pioc;
@@ -265,13 +275,11 @@ __s32 DRV_DISP_Init(void)
 
 	memset(&g_disp_drv, 0, sizeof(__disp_drv_t));
 
-#ifdef CONFIG_ARCH_SUN5I
-    sys_put_wvalue(0xf1c20118, 1<<19);
-#endif
-    
+
     BSP_disp_init(&para);
     BSP_disp_open();
 
+
     return 0;
 }
 
@@ -417,7 +425,9 @@ static int __devinit disp_probe(struct platform_device *pdev)
 	info->base_sdram = 0xf1c01000;
 	info->base_pioc = 0xf1c20800;
 	info->base_pwm = 0xf1c20c00;
-
+#ifdef CONFIG_ARCH_SUN5I
+	info->base_iep = 0xf1e70000;
+#endif
 	__inf("SCALER0 base 0x%08x\n", info->base_scaler0);
 	__inf("SCALER1 base 0x%08x\n", info->base_scaler1);
 	__inf("IMAGE0 base 0x%08x\n", info->base_image0+ 0x800);
@@ -426,6 +436,9 @@ static int __devinit disp_probe(struct platform_device *pdev)
 	__inf("LCDC1 base 0x%08x\n", info->base_lcdc1);
 	__inf("TVEC0 base 0x%08x\n", info->base_tvec0);
 	__inf("TVEC1 base 0x%08x\n", info->base_tvec1);
+#ifdef CONFIG_ARCH_SUN5I
+	__inf("IEP base 0x%08x\n", info->base_iep);
+#endif
 	__inf("CCMU base 0x%08x\n", info->base_ccmu);
 	__inf("SDRAM base 0x%08x\n", info->base_sdram);
 	__inf("PIO base 0x%08x\n", info->base_pioc);
@@ -769,7 +782,6 @@ long disp_ioctl(struct file *file, unsigned int cmd, unsigned long arg)
             ret = BSP_disp_get_saturation(ubuffer[0]);
     		break;
 
-#ifdef CONFIG_ARCH_SUN4I
         case DISP_CMD_SET_HUE:
             ret = BSP_disp_set_hue(ubuffer[0], ubuffer[1]);
     		break;
@@ -777,7 +789,7 @@ long disp_ioctl(struct file *file, unsigned int cmd, unsigned long arg)
         case DISP_CMD_GET_HUE:
             ret = BSP_disp_get_hue(ubuffer[0]);
     		break;
-#endif
+#ifdef CONFIG_ARCH_SUN4I
         case DISP_CMD_ENHANCE_ON:
             ret = BSP_disp_enhance_enable(ubuffer[0], 1);
     		break;
@@ -789,6 +801,7 @@ long disp_ioctl(struct file *file, unsigned int cmd, unsigned long arg)
         case DISP_CMD_GET_ENHANCE_EN:
             ret = BSP_disp_get_enhance_enable(ubuffer[0]);
     		break;
+#endif
 
     	case DISP_CMD_CAPTURE_SCREEN:
     	    ret = BSP_disp_capture_screen(ubuffer[0], (__disp_capture_screen_para_t *)ubuffer[1]);
@@ -798,14 +811,69 @@ long disp_ioctl(struct file *file, unsigned int cmd, unsigned long arg)
             ret = BSP_disp_set_screen_size(ubuffer[0], (__disp_rectsz_t*)ubuffer[1]);
             break;
 
+	//----iep----
         case DISP_CMD_DE_FLICKER_ON:
+#ifdef CONFIG_ARCH_SUN4I
             ret = BSP_disp_de_flicker_enable(ubuffer[0], 1);
+#else
+            ret = BSP_disp_iep_deflicker_enable(ubuffer[0], 1);
+#endif
             break;
 
         case DISP_CMD_DE_FLICKER_OFF:
+#ifdef CONFIG_ARCH_SUN4I
             ret = BSP_disp_de_flicker_enable(ubuffer[0], 0);
+#else
+            ret = BSP_disp_iep_deflicker_enable(ubuffer[0], 0);
+#endif
             break;
 
+#ifdef CONFIG_ARCH_SUN5I
+        case DISP_CMD_GET_DE_FLICKER_EN:
+        	ret = BSP_disp_iep_get_deflicker_enable(ubuffer[0]);
+        	break;
+
+        case DISP_CMD_DRC_ON:
+        	ret = BSP_disp_iep_drc_enable(ubuffer[0], 1);
+        	break;
+
+        case DISP_CMD_DRC_OFF:
+			ret = BSP_disp_iep_drc_enable(ubuffer[0], 0);
+        	break;
+
+		case DISP_CMD_GET_DRC_EN:
+			ret = BSP_disp_iep_get_drc_enable(ubuffer[0]);
+			break;
+
+        case DISP_CMD_DE_FLICKER_SET_WINDOW:
+        {
+          	__disp_rect_t para;
+
+    		if(copy_from_user(&para, (void __user *)ubuffer[1],sizeof(__disp_rect_t)))
+    		{
+    		    __wrn("copy_from_user fail\n");
+    			return  -EFAULT;
+    		}
+
+			ret = BSP_disp_iep_set_demo_win(ubuffer[0], 1, &para);
+			break;
+		}
+
+        case DISP_CMD_DRC_SET_WINDOW:
+		{
+			__disp_rect_t para;
+
+			if(copy_from_user(&para, (void __user *)ubuffer[1],sizeof(__disp_rect_t)))
+			{
+				__wrn("copy_from_user fail\n");
+				return	-EFAULT;
+			}
+
+			ret = BSP_disp_iep_set_demo_win(ubuffer[0], 2, &para);
+			break;
+		}
+#endif
+
     //----layer----
     	case DISP_CMD_LAYER_REQUEST:
     		ret = BSP_disp_layer_request(ubuffer[0], (__disp_layer_work_mode_t)ubuffer[1]);
@@ -1207,26 +1275,26 @@ long disp_ioctl(struct file *file, unsigned int cmd, unsigned long arg)
     //----lcd----
     	case DISP_CMD_LCD_ON:
     		ret = DRV_lcd_open(ubuffer[0]);
-#ifdef CONFIG_ARCH_SUN4I
             if(suspend_status != 0)
             {
                 suspend_output_type[ubuffer[0]] = DISP_OUTPUT_TYPE_LCD;
             }
-#endif
     		break;
 
     	case DISP_CMD_LCD_OFF:
     		ret = DRV_lcd_close(ubuffer[0]);
-#ifdef CONFIG_ARCH_SUN4I
             if(suspend_status != 0)
             {
                 suspend_output_type[ubuffer[0]] = DISP_OUTPUT_TYPE_NONE;
             }
-#endif
     		break;
 
     	case DISP_CMD_LCD_SET_BRIGHTNESS:
+#ifdef CONFIG_ARCH_SUN4I
     		ret = BSP_disp_lcd_set_bright(ubuffer[0], ubuffer[1]);
+#else
+    		ret = BSP_disp_lcd_set_bright(ubuffer[0], ubuffer[1],0);
+#endif
     		break;
 
     	case DISP_CMD_LCD_GET_BRIGHTNESS:
@@ -1258,22 +1326,18 @@ long disp_ioctl(struct file *file, unsigned int cmd, unsigned long arg)
     //----tv----
     	case DISP_CMD_TV_ON:
     		ret = BSP_disp_tv_open(ubuffer[0]);
-#ifdef CONFIG_ARCH_SUN4I
             if(suspend_status != 0)
             {
                 suspend_output_type[ubuffer[0]] = DISP_OUTPUT_TYPE_TV;
             }
-#endif
     		break;
 
     	case DISP_CMD_TV_OFF:
     		ret = BSP_disp_tv_close(ubuffer[0]);
-#ifdef CONFIG_ARCH_SUN4I
             if(suspend_status != 0)
             {
                 suspend_output_type[ubuffer[0]] = DISP_OUTPUT_TYPE_NONE;
             }
-#endif
     		break;
 
     	case DISP_CMD_TV_SET_MODE:
@@ -1329,22 +1393,18 @@ long disp_ioctl(struct file *file, unsigned int cmd, unsigned long arg)
     //----hdmi----
     	case DISP_CMD_HDMI_ON:
     		ret = BSP_disp_hdmi_open(ubuffer[0]);
-#ifdef CONFIG_ARCH_SUN4I
             if(suspend_status != 0)
             {
                 suspend_output_type[ubuffer[0]] = DISP_OUTPUT_TYPE_HDMI;
             }
-#endif
     		break;
 
     	case DISP_CMD_HDMI_OFF:
     		ret = BSP_disp_hdmi_close(ubuffer[0]);
-#ifdef CONFIG_ARCH_SUN4I
             if(suspend_status != 0)
             {
                 suspend_output_type[ubuffer[0]] = DISP_OUTPUT_TYPE_NONE;
             }
-#endif
     		break;
 
     	case DISP_CMD_HDMI_SET_MODE:
@@ -1377,22 +1437,18 @@ long disp_ioctl(struct file *file, unsigned int cmd, unsigned long arg)
     //----vga----
     	case DISP_CMD_VGA_ON:
     		ret = BSP_disp_vga_open(ubuffer[0]);
-#ifdef CONFIG_ARCH_SUN4I
             if(suspend_status != 0)
             {
                 suspend_output_type[ubuffer[0]] = DISP_OUTPUT_TYPE_VGA;
             }
-#endif
     		break;
 
     	case DISP_CMD_VGA_OFF:
     		ret = BSP_disp_vga_close(ubuffer[0]);
-#ifdef CONFIG_ARCH_SUN4I
             if(suspend_status != 0)
             {
                 suspend_output_type[ubuffer[0]] = DISP_OUTPUT_TYPE_NONE;
             }
-#endif
     		break;
 
     	case DISP_CMD_VGA_SET_MODE:
diff --git a/drivers/video/sunxi/disp/dev_disp.h b/drivers/video/sunxi/disp/dev_disp.h
index 1d33f94..a60376a 100644
--- a/drivers/video/sunxi/disp/dev_disp.h
+++ b/drivers/video/sunxi/disp/dev_disp.h
@@ -58,7 +58,9 @@ typedef struct
 	__u32                   base_sdram;
     __u32                   base_pioc;
 	__u32                   base_pwm;
-
+#ifdef CONFIG_ARCH_SUN5I
+	__u32					base_iep;
+#endif
     __disp_init_t           disp_init;
 
 	__bool                  fb_enable[SUNXI_MAX_FB];
diff --git a/drivers/video/sunxi/disp/drv_disp_i.h b/drivers/video/sunxi/disp/drv_disp_i.h
index aa6a4ac..0978964 100644
--- a/drivers/video/sunxi/disp/drv_disp_i.h
+++ b/drivers/video/sunxi/disp/drv_disp_i.h
@@ -50,8 +50,11 @@ typedef enum
 #define HANDTOID(handle)  ((handle) - 100)
 #define IDTOHAND(ID)  ((ID) + 100)
 
-
+#ifdef CONFIG_ARCH_SUN5I
+#define DISP_IO_NUM     9
+#else
 #define DISP_IO_NUM     8
+#endif
 #define DISP_IO_SCALER0 0
 #define DISP_IO_SCALER1 1
 #define DISP_IO_IMAGE0  2
@@ -60,6 +63,9 @@ typedef enum
 #define DISP_IO_LCDC1   5
 #define DISP_IO_TVEC0    6
 #define DISP_IO_TVEC1    7
+#ifdef CONFIG_ARCH_SUN5I
+#define DISP_IO_IEP      8
+#endif
 
 #define sys_get_hvalue(n)   (*((volatile __u16 *)(n)))         /* half word input */
 #define sys_put_hvalue(n,c) (*((volatile __u16 *)(n)) = (c))   /* half word output */
diff --git a/drivers/video/sunxi/hdmi/aw/hdmi_core.c b/drivers/video/sunxi/hdmi/aw/hdmi_core.c
index eac34b6..ff08c10 100644
--- a/drivers/video/sunxi/hdmi/aw/hdmi_core.c
+++ b/drivers/video/sunxi/hdmi/aw/hdmi_core.c
@@ -179,7 +179,7 @@ __s32 Hpd_Check(void)
     }
 }
 
-__s32 get_video_info(__s32 vic)
+static __s32 get_video_info(__s32 vic)
 {
 	__s32 i,count;
 	count = sizeof(video_timing);
@@ -193,7 +193,7 @@ __s32 get_video_info(__s32 vic)
 	return -1;
 }
 
-__s32 get_audio_info(__s32 sample_rate)
+static __s32 get_audio_info(__s32 sample_rate)
 {
    //ACR_N 32000 44100 48000 88200 96000 176400 192000
    //		4096  6272  6144  12544 12288  25088  24576
diff --git a/drivers/video/sunxi/hdmi/aw/hdmi_core.h b/drivers/video/sunxi/hdmi/aw/hdmi_core.h
index bbe3388..43a6356 100644
--- a/drivers/video/sunxi/hdmi/aw/hdmi_core.h
+++ b/drivers/video/sunxi/hdmi/aw/hdmi_core.h
@@ -84,8 +84,6 @@ __s32 hdmi_core_close(void);
 __s32 hdmi_main_task_loop(void);
 __s32 Hpd_Check(void);
 __s32 ParseEDID(void);
-__s32 get_video_info(__s32 vic);
-__s32 get_audio_info(__s32 sample_rate);
 __s32 video_config(__s32 vic);
 __s32 audio_config(void);
 
diff --git a/drivers/video/sunxi/lcd/lcd_panel_cfg_generic.c b/drivers/video/sunxi/lcd/lcd_panel_cfg_generic.c
index c748393..1b0faa0 100644
--- a/drivers/video/sunxi/lcd/lcd_panel_cfg_generic.c
+++ b/drivers/video/sunxi/lcd/lcd_panel_cfg_generic.c
@@ -39,14 +39,6 @@ static __s32 lcd_spi_mosi = 0;
 static __s32 lcd_spi_used = 0;
 static __s32 lcd_spi_module = -1;
 
-#ifdef CONFIG_ARCH_SUN5I
-#include "../../../power/axp_power/axp-gpio.h"
-extern int axp_gpio_set_io(int gpio, int io_state);
-extern int axp_gpio_get_io(int gpio, int *io_state);
-extern int axp_gpio_set_value(int gpio, int value);
-extern int axp_gpio_get_value(int gpio, int *value);
-#endif
-
 static void check_spi_used_value()
 {
 	if (SCRIPT_PARSER_OK
@@ -203,43 +195,23 @@ void LCD_SPI_Dinit(__u32 sel)
 
 void LCD_power_on_generic(__u32 sel)
 {
-#ifdef CONFIG_ARCH_SUN5I
-	axp_gpio_set_io(0, 1);
-	axp_gpio_set_value(0, 1);
-#else
 	LCD_POWER_EN(sel, 1); /* config lcd_power pin to open lcd power */
-#endif
 }
 
 void LCD_power_off_generic(__u32 sel)
 {
-#ifdef CONFIG_ARCH_SUN5I
-	axp_gpio_set_io(0, 1);
-	axp_gpio_set_value(0, 0);
-#else
 	LCD_POWER_EN(sel, 0); /* config lcd_power pin to close lcd power */
-#endif
 }
 
 void LCD_bl_open_generic(__u32 sel)
 {
 	LCD_PWM_EN(sel, 1); /* open pwm module */
-#ifdef CONFIG_ARCH_SUN5I
-	axp_gpio_set_io(1, 1);
-	axp_gpio_set_value(1, 1);
-#else
 	LCD_BL_EN(sel, 1); /* config lcd_bl_en pin to open lcd backlight */
-#endif
 }
 
 void LCD_bl_close_generic(__u32 sel)
 {
-#ifdef CONFIG_ARCH_SUN5I
-	axp_gpio_set_io(1, 1);
-	axp_gpio_set_value(1, 0);
-#else
 	LCD_BL_EN(sel, 0); /* config lcd_bl_en pin to close lcd backlight */
-#endif
 	LCD_PWM_EN(sel, 0); /* close pwm module */
 }
 
diff --git a/include/linux/drv_display.h b/include/linux/drv_display.h
index 1a9bbd7..e2f9384 100644
--- a/include/linux/drv_display.h
+++ b/include/linux/drv_display.h
@@ -26,9 +26,9 @@
 #if defined(CONFIG_ARCH_SUN3I)
 #include <linux/drv_display_sun3i.h>
 #elif defined(CONFIG_ARCH_SUN4I)
-#include <linux/drv_display_sun4i.h>
+#include <linux/drv_display_sunxi.h>
 #elif defined(CONFIG_ARCH_SUN5I)
-#include <linux/drv_display_sun5i.h>
+#include <linux/drv_display_sunxi.h>
 #else
 #error "no chip id defined"
 #endif
diff --git a/include/linux/drv_display_sun4i.h b/include/linux/drv_display_sun4i.h
deleted file mode 100644
index 9e3aeb1..0000000
--- a/include/linux/drv_display_sun4i.h
+++ /dev/null
@@ -1,810 +0,0 @@
-/*
- * include/linux/drv_display_sun4i.h
- *
- * (C) Copyright 2007-2012
- * Allwinner Technology Co., Ltd. <www.allwinnertech.com>
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License as
- * published by the Free Software Foundation; either version 2 of
- * the License, or (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.	 See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
- * MA 02111-1307 USA
- */
-
-#ifndef __DRV_DISPLAY_H__
-#define __DRV_DISPLAY_H__
-
-#define __bool signed char
-
-typedef struct {__u8  alpha;__u8 red;__u8 green; __u8 blue; }__disp_color_t;
-typedef struct {__s32 x; __s32 y; __u32 width; __u32 height;}__disp_rect_t;
-typedef struct {__u32 width;__u32 height;                   }__disp_rectsz_t;
-typedef struct {__s32 x; __s32 y;                           }__disp_pos_t;
-
-
-typedef enum
-{
-    DISP_FORMAT_1BPP        =0x0,
-    DISP_FORMAT_2BPP        =0x1,
-    DISP_FORMAT_4BPP        =0x2,
-    DISP_FORMAT_8BPP        =0x3,
-    DISP_FORMAT_RGB655      =0x4,
-    DISP_FORMAT_RGB565      =0x5,
-    DISP_FORMAT_RGB556      =0x6,
-    DISP_FORMAT_ARGB1555    =0x7,
-    DISP_FORMAT_RGBA5551    =0x8,
-    DISP_FORMAT_ARGB888     =0x9,//alpha padding to 0xff
-    DISP_FORMAT_ARGB8888    =0xa,
-    DISP_FORMAT_RGB888      =0xb,
-    DISP_FORMAT_ARGB4444    =0xc,
-
-    DISP_FORMAT_YUV444      =0x10,
-    DISP_FORMAT_YUV422      =0x11,
-    DISP_FORMAT_YUV420      =0x12,
-    DISP_FORMAT_YUV411      =0x13,
-    DISP_FORMAT_CSIRGB      =0x14,
-}__disp_pixel_fmt_t;
-
-
-typedef enum
-{
-    DISP_MOD_INTERLEAVED        =0x1,   //interleaved,1个地址
-    DISP_MOD_NON_MB_PLANAR      =0x0,   //无宏块平面模式,3个地址,RGB/YUV每个channel分别存放
-    DISP_MOD_NON_MB_UV_COMBINED =0x2,   //无宏块UV打包模式,2个地址,Y和UV分别存放
-    DISP_MOD_MB_PLANAR          =0x4,   //宏块平面模式,3个地址,RGB/YUV每个channel分别存放
-    DISP_MOD_MB_UV_COMBINED     =0x6,   //宏块UV打包模式 ,2个地址,Y和UV分别存放
-}__disp_pixel_mod_t;
-
-typedef enum
-{
-//for interleave argb8888
-    DISP_SEQ_ARGB   =0x0,//A在高位
-    DISP_SEQ_BGRA   =0x2,
-
-//for nterleaved yuv422
-    DISP_SEQ_UYVY   =0x3,
-    DISP_SEQ_YUYV   =0x4,
-    DISP_SEQ_VYUY   =0x5,
-    DISP_SEQ_YVYU   =0x6,
-
-//for interleaved yuv444
-    DISP_SEQ_AYUV   =0x7,
-    DISP_SEQ_VUYA   =0x8,
-
-//for uv_combined yuv420
-    DISP_SEQ_UVUV   =0x9,
-    DISP_SEQ_VUVU   =0xa,
-
-//for 16bpp rgb
-    DISP_SEQ_P10    = 0xd,//p1在高位
-    DISP_SEQ_P01    = 0xe,//p0在高位
-
-//for planar format or 8bpp rgb
-    DISP_SEQ_P3210  = 0xf,//p3在高位
-    DISP_SEQ_P0123  = 0x10,//p0在高位
-
-//for 4bpp rgb
-    DISP_SEQ_P76543210  = 0x11,
-    DISP_SEQ_P67452301  = 0x12,
-    DISP_SEQ_P10325476  = 0x13,
-    DISP_SEQ_P01234567  = 0x14,
-
-//for 2bpp rgb
-    DISP_SEQ_2BPP_BIG_BIG       = 0x15,//15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0
-    DISP_SEQ_2BPP_BIG_LITTER    = 0x16,//12,13,14,15,8,9,10,11,4,5,6,7,0,1,2,3
-    DISP_SEQ_2BPP_LITTER_BIG    = 0x17,//3,2,1,0,7,6,5,4,11,10,9,8,15,14,13,12
-    DISP_SEQ_2BPP_LITTER_LITTER = 0x18,//0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
-
-//for 1bpp rgb
-    DISP_SEQ_1BPP_BIG_BIG       = 0x19,//31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0
-    DISP_SEQ_1BPP_BIG_LITTER    = 0x1a,//24,25,26,27,28,29,30,31,16,17,18,19,20,21,22,23,8,9,10,11,12,13,14,15,0,1,2,3,4,5,6,7
-    DISP_SEQ_1BPP_LITTER_BIG    = 0x1b,//7,6,5,4,3,2,1,0,15,14,13,12,11,10,9,8,23,22,21,20,19,18,17,16,31,30,29,28,27,26,25,24
-    DISP_SEQ_1BPP_LITTER_LITTER = 0x1c,//0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31
-}__disp_pixel_seq_t;
-
-typedef enum
-{
-    DISP_3D_SRC_MODE_TB = 0x0,//top bottom
-    DISP_3D_SRC_MODE_FP = 0x1,//frame packing
-    DISP_3D_SRC_MODE_SSF = 0x2,//side by side full
-    DISP_3D_SRC_MODE_SSH = 0x3,//side by side half
-    DISP_3D_SRC_MODE_LI = 0x4,//line interleaved
-}__disp_3d_src_mode_t;
-
-typedef enum
-{
-    DISP_3D_OUT_MODE_CI_1 = 0x5,//column interlaved 1
-    DISP_3D_OUT_MODE_CI_2 = 0x6,//column interlaved 2
-    DISP_3D_OUT_MODE_CI_3 = 0x7,//column interlaved 3
-    DISP_3D_OUT_MODE_CI_4 = 0x8,//column interlaved 4
-    DISP_3D_OUT_MODE_LIRGB = 0x9,//line interleaved rgb
-
-    DISP_3D_OUT_MODE_TB = 0x0,//top bottom
-    DISP_3D_OUT_MODE_FP = 0x1,//frame packing
-    DISP_3D_OUT_MODE_SSF = 0x2,//side by side full
-    DISP_3D_OUT_MODE_SSH = 0x3,//side by side half
-    DISP_3D_OUT_MODE_LI = 0x4,//line interleaved
-    DISP_3D_OUT_MODE_FA = 0xa,//field alternative
-}__disp_3d_out_mode_t;
-
-typedef enum
-{
-    DISP_BT601  = 0,
-    DISP_BT709  = 1,
-    DISP_YCC    = 2,
-    DISP_VXYCC  = 3,
-}__disp_cs_mode_t;
-
-typedef enum
-{
-    DISP_COLOR_RANGE_16_255 = 0,
-    DISP_COLOR_RANGE_0_255 = 1,
-    DISP_COLOR_RANGE_16_235 = 2,
-}__disp_color_range_t;
-
-typedef enum
-{
-    DISP_OUTPUT_TYPE_NONE   = 0,
-    DISP_OUTPUT_TYPE_LCD    = 1,
-    DISP_OUTPUT_TYPE_TV     = 2,
-    DISP_OUTPUT_TYPE_HDMI   = 4,
-    DISP_OUTPUT_TYPE_VGA    = 8,
-}__disp_output_type_t;
-
-typedef enum
-{
-    DISP_TV_NONE    = 0,
-    DISP_TV_CVBS    = 1,
-    DISP_TV_YPBPR   = 2,
-    DISP_TV_SVIDEO  = 4,
-}__disp_tv_output_t;
-
-typedef enum
-{
-    DISP_TV_MOD_480I                = 0,
-    DISP_TV_MOD_576I                = 1,
-    DISP_TV_MOD_480P                = 2,
-    DISP_TV_MOD_576P                = 3,
-    DISP_TV_MOD_720P_50HZ           = 4,
-    DISP_TV_MOD_720P_60HZ           = 5,
-    DISP_TV_MOD_1080I_50HZ          = 6,
-    DISP_TV_MOD_1080I_60HZ          = 7,
-    DISP_TV_MOD_1080P_24HZ          = 8,
-    DISP_TV_MOD_1080P_50HZ          = 9,
-    DISP_TV_MOD_1080P_60HZ          = 0xa,
-    DISP_TV_MOD_1080P_24HZ_3D_FP    = 0x17,
-    DISP_TV_MOD_720P_50HZ_3D_FP     = 0x18,
-    DISP_TV_MOD_720P_60HZ_3D_FP     = 0x19,
-    DISP_TV_MOD_PAL                 = 0xb,
-    DISP_TV_MOD_PAL_SVIDEO          = 0xc,
-    DISP_TV_MOD_NTSC                = 0xe,
-    DISP_TV_MOD_NTSC_SVIDEO         = 0xf,
-    DISP_TV_MOD_PAL_M               = 0x11,
-    DISP_TV_MOD_PAL_M_SVIDEO        = 0x12,
-    DISP_TV_MOD_PAL_NC              = 0x14,
-    DISP_TV_MOD_PAL_NC_SVIDEO       = 0x15,
-    DISP_TV_MODE_NUM               = 0x1a,
-}__disp_tv_mode_t;
-
-typedef enum
-{
-    DISP_TV_DAC_SRC_COMPOSITE = 0,
-    DISP_TV_DAC_SRC_LUMA = 1,
-    DISP_TV_DAC_SRC_CHROMA = 2,
-    DISP_TV_DAC_SRC_Y = 4,
-    DISP_TV_DAC_SRC_PB = 5,
-    DISP_TV_DAC_SRC_PR = 6,
-    DISP_TV_DAC_SRC_NONE = 7,
-}__disp_tv_dac_source;
-
-typedef enum
-{
-    DISP_VGA_H1680_V1050    = 0,
-    DISP_VGA_H1440_V900     = 1,
-    DISP_VGA_H1360_V768     = 2,
-    DISP_VGA_H1280_V1024    = 3,
-    DISP_VGA_H1024_V768     = 4,
-    DISP_VGA_H800_V600      = 5,
-    DISP_VGA_H640_V480      = 6,
-    DISP_VGA_H1440_V900_RB  = 7,//not support yet
-    DISP_VGA_H1680_V1050_RB = 8,//not support yet
-    DISP_VGA_H1920_V1080_RB = 9,
-    DISP_VGA_H1920_V1080    = 0xa,
-    DISP_VGA_H1280_V720     = 0xb,
-    DISP_VGA_MODE_NUM       = 0xc,
-}__disp_vga_mode_t;
-
-
-typedef enum
-{
-    DISP_LCDC_SRC_DE_CH1    = 0,
-    DISP_LCDC_SRC_DE_CH2    = 1,
-    DISP_LCDC_SRC_DMA       = 2,
-    DISP_LCDC_SRC_WHITE     = 3,
-    DISP_LCDC_SRC_BLACK     = 4,
-    DISP_LCDC_SRC_BLUT      = 5,
-}__disp_lcdc_src_t;
-
-typedef enum
-{
-    DISP_LCD_BRIGHT_LEVEL0  = 0,
-    DISP_LCD_BRIGHT_LEVEL1  = 1,
-    DISP_LCD_BRIGHT_LEVEL2  = 2,
-    DISP_LCD_BRIGHT_LEVEL3  = 3,
-    DISP_LCD_BRIGHT_LEVEL4  = 4,
-    DISP_LCD_BRIGHT_LEVEL5  = 5,
-    DISP_LCD_BRIGHT_LEVEL6  = 6,
-    DISP_LCD_BRIGHT_LEVEL7  = 7,
-    DISP_LCD_BRIGHT_LEVEL8  = 8,
-    DISP_LCD_BRIGHT_LEVEL9  = 9,
-    DISP_LCD_BRIGHT_LEVEL10 = 0xa,
-    DISP_LCD_BRIGHT_LEVEL11 = 0xb,
-    DISP_LCD_BRIGHT_LEVEL12 = 0xc,
-    DISP_LCD_BRIGHT_LEVEL13 = 0xd,
-    DISP_LCD_BRIGHT_LEVEL14 = 0xe,
-    DISP_LCD_BRIGHT_LEVEL15 = 0xf,
-}__disp_lcd_bright_t;
-
-typedef enum
-{
-    DISP_LAYER_WORK_MODE_NORMAL     = 0,    //normal work mode
-    DISP_LAYER_WORK_MODE_PALETTE    = 1,    //palette work mode
-    DISP_LAYER_WORK_MODE_INTER_BUF  = 2,    //internal frame buffer work mode
-    DISP_LAYER_WORK_MODE_GAMMA      = 3,    //gamma correction work mode
-    DISP_LAYER_WORK_MODE_SCALER     = 4,    //scaler work mode
-}__disp_layer_work_mode_t;
-
-typedef enum
-{
-    DISP_VIDEO_NATUAL       = 0,
-    DISP_VIDEO_SOFT         = 1,
-    DISP_VIDEO_VERYSOFT     = 2,
-    DISP_VIDEO_SHARP        = 3,
-    DISP_VIDEO_VERYSHARP    = 4
-}__disp_video_smooth_t;
-
-typedef enum
-{
-    DISP_HWC_MOD_H32_V32_8BPP = 0,
-    DISP_HWC_MOD_H64_V64_2BPP = 1,
-    DISP_HWC_MOD_H64_V32_4BPP = 2,
-    DISP_HWC_MOD_H32_V64_4BPP = 3,
-}__disp_hwc_mode_t;
-
-typedef enum
-{
-    DISP_EXIT_MODE_CLEAN_ALL    = 0,
-    DISP_EXIT_MODE_CLEAN_PARTLY = 1,//only clean interrupt temply
-}__disp_exit_mode_t;
-
-
-typedef enum//only for debug!!!
-{
-    DISP_REG_SCALER0 = 0,
-    DISP_REG_SCALER1 = 1,
-    DISP_REG_IMAGE0 = 2,
-    DISP_REG_IMAGE1 = 3,
-    DISP_REG_LCDC0 = 4,
-    DISP_REG_LCDC1 = 5,
-    DISP_REG_TVEC0 = 6,
-    DISP_REG_TVEC1 = 7,
-    DISP_REG_CCMU = 8,
-    DISP_REG_PIOC = 9,
-    DISP_REG_PWM = 10,
-}__disp_reg_index_t;
-
-
-typedef struct
-{
-    __u32                   addr[3];    // frame buffer的内容地址，对于rgb类型，只有addr[0]有效
-    __disp_rectsz_t         size;//单位是pixel
-    __disp_pixel_fmt_t      format;
-    __disp_pixel_seq_t      seq;
-    __disp_pixel_mod_t      mode;
-    __bool                  br_swap;    // blue red color swap flag, FALSE:RGB; TRUE:BGR,only used in rgb format
-    __disp_cs_mode_t        cs_mode;    //color space
-    __bool                  b_trd_src; //if 3d source, used for scaler mode layer
-    __disp_3d_src_mode_t    trd_mode; //source 3d mode, used for scaler mode layer
-    __u32                   trd_right_addr[3];//used when in frame packing 3d mode
-}__disp_fb_t;
-
-typedef struct
-{
-    __disp_layer_work_mode_t    mode;       //layer work mode
-    __bool                      b_from_screen;
-    __u8                        pipe;       //layer pipe,0/1,if in scaler mode, scaler0 must be pipe0, scaler1 must be pipe1
-    __u8                        prio;       //layer priority,can get layer prio,but never set layer prio,从底至顶,优先级由低至高
-    __bool                      alpha_en;   //layer global alpha enable
-    __u16                       alpha_val;  //layer global alpha value
-    __bool                      ck_enable;  //layer color key enable
-    __disp_rect_t               src_win;    // framebuffer source window,only care x,y if is not scaler mode
-    __disp_rect_t               scn_win;    // screen window
-    __disp_fb_t                 fb;         //framebuffer
-    __bool                      b_trd_out;  //if output 3d mode, used for scaler mode layer
-    __disp_3d_out_mode_t        out_trd_mode; //output 3d mode, used for scaler mode layer
-}__disp_layer_info_t;
-
-typedef struct
-{
-    __disp_color_t   ck_max;
-    __disp_color_t   ck_min;
-    __u32             red_match_rule;//0/1:always match; 2:match if min<=color<=max; 3:match if color>max or color<min
-    __u32             green_match_rule;//0/1:always match; 2:match if min<=color<=max; 3:match if color>max or color<min
-    __u32             blue_match_rule;//0/1:always match; 2:match if min<=color<=max; 3:match if color>max or color<min
-}__disp_colorkey_t;
-
-typedef struct
-{
-    __s32   id;
-    __u32   addr[3];
-    __u32   addr_right[3];//used when in frame packing 3d mode
-    __bool  interlace;
-    __bool  top_field_first;
-    __u32   frame_rate; // *FRAME_RATE_BASE(现在定为1000)
-    __u32   flag_addr;//dit maf flag address
-    __u32   flag_stride;//dit maf flag line stride
-    __bool  maf_valid;
-    __bool  pre_frame_valid;
-}__disp_video_fb_t;
-
-typedef struct
-{
-    __bool maf_enable;
-    __bool pre_frame_enable;
-}__disp_dit_info_t;
-
-typedef struct
-{
-    __disp_hwc_mode_t     pat_mode;
-    __u32                 addr;
-}__disp_hwc_pattern_t;
-
-typedef struct
-{
-    __disp_fb_t     input_fb;
-    __disp_rect_t   source_regn;
-    __disp_fb_t     output_fb;
-    //__disp_rect_t   out_regn;
-}__disp_scaler_para_t;
-
-typedef struct
-{
-    __disp_fb_t       fb;
-    __disp_rect_t   src_win;//source region,only care x,y because of not scaler
-    __disp_rect_t   scn_win;// sceen region
-}__disp_sprite_block_para_t;
-
-typedef struct
-{
-    __disp_rectsz_t screen_size;//used when the screen is not displaying on any output device(lcd/hdmi/vga/tv)
-    __disp_fb_t     output_fb;
-}__disp_capture_screen_para_t;
-
-typedef struct
-{
-    __s32 (*Hdmi_open)(void);
-    __s32 (*Hdmi_close)(void);
-    __s32 (*hdmi_set_mode)(__disp_tv_mode_t mode);
-    __s32 (*hdmi_mode_support)(__disp_tv_mode_t mode);
-    __s32 (*hdmi_get_HPD_status)(void);
-    __s32 (*hdmi_set_pll)(__u32 pll, __u32 clk);
-}__disp_hdmi_func;
-
-typedef struct
-{
-	__u32   lcd_x;
-	__u32   lcd_y;
-	__u32   lcd_dclk_freq;
-	__u32   lcd_pwm_not_used;
-	__u32   lcd_pwm_ch;
-	__u32   lcd_pwm_freq;
-	__u32   lcd_pwm_pol;
-	__u32   lcd_srgb;
-	__u32   lcd_swap;
-
-	__u32   lcd_if; //0:hv(sync+de); 1:8080; 2:ttl; 3:lvds
-
-	__u32   lcd_uf;
-	__u32   lcd_vt;
-	__u32   lcd_ht;
-	__u32   lcd_vbp;
-	__u32   lcd_hbp;
-
-	__u32   lcd_hv_if;
-	__u32   lcd_hv_smode;
-	__u32   lcd_hv_s888_if;
-	__u32   lcd_hv_syuv_if;
-	__u32   lcd_hv_vspw;
-	__u32   lcd_hv_hspw;
-	__u32   lcd_hv_lde_used;
-	__u32   lcd_hv_lde_iovalue;
-
-	__u32   lcd_ttl_stvh;
-	__u32   lcd_ttl_stvdl;
-	__u32   lcd_ttl_stvdp;
-	__u32   lcd_ttl_ckvt;
-	__u32   lcd_ttl_ckvh;
-	__u32   lcd_ttl_ckvd;
-	__u32   lcd_ttl_oevt;
-	__u32   lcd_ttl_oevh;
-	__u32   lcd_ttl_oevd;
-	__u32   lcd_ttl_sthh;
-	__u32   lcd_ttl_sthd;
-	__u32   lcd_ttl_oehh;
-	__u32   lcd_ttl_oehd;
-	__u32   lcd_ttl_revd;
-	__u32   lcd_ttl_datarate;
-	__u32   lcd_ttl_revsel;
-	__u32   lcd_ttl_datainv_en;
-	__u32   lcd_ttl_datainv_sel;
-
-	__u32   lcd_lvds_ch;        // 0: single channel; 1:dual channel
-	__u32   lcd_lvds_mode;      // 0:NS mode; 1:JEIDA mode
-	__u32	lcd_lvds_bitwidth;  // 0:24bit; 1:18bit
-	__u32   lcd_lvds_io_cross;	// 0:normal; 1:pn cross
-
-	__u32   lcd_cpu_if;//0:18bit; 1:16bit mode0; 2:16bit mode1; 3:16bit mode2; 4:16bit mode3; 5:9bit; 6:8bit 256K; 7:8bit 65K
-	__u32   lcd_cpu_da;
-	__u32   lcd_frm;
-
-	__u32   lcd_io_cfg0;
-	__u32   lcd_io_cfg1;
-	__u32   lcd_io_strength;
-
-	__u32   lcd_gamma_correction_en;
-	__u32   lcd_gamma_tbl[256];
-
-	__u32   lcd_hv_srgb_seq0;
-	__u32   lcd_hv_srgb_seq1;
-	__u32   lcd_hv_syuv_seq;
-	__u32   lcd_hv_syuv_fdly;
-
-	__u32   port_index;
-	__u32   start_delay;//not need to config for user
-	__u32   tcon_index; //not need to config for user
-}__panel_para_t;
-
-typedef struct
-{
-	__u32	pixel_clk;//khz
-	__u32	hor_pixels;
-	__u32	ver_pixels;
-	__u32	hor_total_time;
-	__u32	hor_front_porch;
-	__u32	hor_sync_time;
-	__u32	hor_back_porch;
-	__u32	ver_total_time;
-	__u32	ver_front_porch;
-	__u32	ver_sync_time;
-	__u32	ver_back_porch;
-}__disp_tcon_timing_t;
-
-typedef struct
-{
-	__u32 base_lcdc0;
-	__u32 base_lcdc1;
-	__u32 base_pioc;
-	__u32 base_ccmu;
-	__u32 base_pwm;
-}__reg_bases_t;
-
-typedef void (*LCD_FUNC) (__u32 sel);
-typedef struct lcd_function
-{
-    LCD_FUNC func;
-    __u32 delay;//ms
-}__lcd_function_t;
-
-typedef struct lcd_flow
-{
-    __lcd_function_t func[5];
-    __u32 func_num;
-}__lcd_flow_t;
-
-typedef struct
-{
-    void (*cfg_panel_info)(__panel_para_t * info);
-    __s32 (*cfg_open_flow)(__u32 sel);
-    __s32 (*cfg_close_flow)(__u32 sel);
-    __s32 (*lcd_user_defined_func)(__u32 sel, __u32 para1, __u32 para2, __u32 para3);
-}__lcd_panel_fun_t;
-
-typedef struct
-{
-    __bool enable;
-    __u32 active_state;
-    __u32 duty_ns;
-    __u32 period_ns;
-}__pwm_info_t;
-///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-
-typedef enum
-{
-    FB_MODE_SCREEN0 = 0,
-    FB_MODE_SCREEN1 = 1,
-    FB_MODE_DUAL_SAME_SCREEN_TB = 2,//two screen, top buffer for screen0, bottom buffer for screen1
-    FB_MODE_DUAL_DIFF_SCREEN_SAME_CONTENTS = 3,//two screen, they have same contents;
-}__fb_mode_t;
-
-typedef struct
-{
-	__fb_mode_t                 fb_mode;
-	__disp_layer_work_mode_t    mode;
-	__u32                       buffer_num;
-	__u32                       width;
-	__u32                       height;
-
-	__u32                       output_width;//used when scaler mode
-	__u32                       output_height;//used when scaler mode
-
-	__u32                       primary_screen_id;//used when FB_MODE_DUAL_DIFF_SCREEN_SAME_CONTENTS
-	__u32                       aux_output_width;//used when FB_MODE_DUAL_DIFF_SCREEN_SAME_CONTENTS
-	__u32                       aux_output_height;//used when FB_MODE_DUAL_DIFF_SCREEN_SAME_CONTENTS
-
-//maybe not used anymore
-	__u32                       line_length;//in byte unit
-	__u32                       smem_len;
-	__u32                       ch1_offset;//use when PLANAR or UV_COMBINED mode
-	__u32                       ch2_offset;//use when PLANAR mode
-}__disp_fb_create_para_t;
-
-typedef enum
-{
-    DISP_INIT_MODE_SCREEN0 = 0,//fb0 for screen0
-    DISP_INIT_MODE_SCREEN1 = 1,//fb0 for screen1
-    DISP_INIT_MODE_TWO_DIFF_SCREEN = 2,//fb0 for screen0 and fb1 for screen1
-    DISP_INIT_MODE_TWO_SAME_SCREEN = 3,//fb0(up buffer for screen0, down buffer for screen1)
-    DISP_INIT_MODE_TWO_DIFF_SCREEN_SAME_CONTENTS = 4,//fb0 for two different screen(screen0 layer is normal layer, screen1 layer is scaler layer);
-}__disp_init_mode_t;
-
-
-typedef struct
-{
-    __bool                  b_init;
-    __disp_init_mode_t      disp_mode;//0:single screen0(fb0); 1:single screen1(fb0);  2:dual diff screen(fb0, fb1); 3:dual same screen(fb0 up and down); 4:dual diff screen same contents(fb0)
-
-    //for screen0 and screen1
-    __disp_output_type_t    output_type[2];
-    __disp_tv_mode_t        tv_mode[2];
-    __disp_vga_mode_t       vga_mode[2];
-
-    //for fb0 and fb1
-    __u32                   buffer_num[2];
-    __bool                  scaler_mode[2];
-    __disp_pixel_fmt_t      format[2];
-    __disp_pixel_seq_t      seq[2];
-    __bool                  br_swap[2];
-}__disp_init_t;
-
-
-typedef enum tag_DISP_CMD
-{
-//----disp global----
-    DISP_CMD_RESERVE0 = 0x00,
-    DISP_CMD_RESERVE1 = 0x01,
-    DISP_CMD_SET_BKCOLOR = 0x3f,//fail when the value is 0x02 in linux,why???
-    DISP_CMD_GET_BKCOLOR = 0x03,
-    DISP_CMD_SET_COLORKEY = 0x04,
-    DISP_CMD_GET_COLORKEY = 0x05,
-    DISP_CMD_SET_PALETTE_TBL = 0x06,
-    DISP_CMD_GET_PALETTE_TBL = 0x07,
-    DISP_CMD_SCN_GET_WIDTH = 0x08,
-    DISP_CMD_SCN_GET_HEIGHT = 0x09,
-    DISP_CMD_GET_OUTPUT_TYPE = 0x0a,
-    DISP_CMD_SET_EXIT_MODE = 0x0c,
-    DISP_CMD_SET_GAMMA_TABLE = 0x0d,
-    DISP_CMD_GAMMA_CORRECTION_ON = 0x0e,
-    DISP_CMD_GAMMA_CORRECTION_OFF = 0x0f,
-    DISP_CMD_START_CMD_CACHE =0x10,
-    DISP_CMD_EXECUTE_CMD_AND_STOP_CACHE = 0x11,
-    DISP_CMD_SET_BRIGHT = 0x12,
-    DISP_CMD_SET_CONTRAST = 0x13,
-    DISP_CMD_SET_SATURATION = 0x14,
-    DISP_CMD_SET_HUE=0x23,
-    DISP_CMD_GET_BRIGHT = 0x16,
-    DISP_CMD_GET_CONTRAST = 0x17,
-    DISP_CMD_GET_SATURATION = 0x18,
-    DISP_CMD_GET_HUE=0x24,
-    DISP_CMD_ENHANCE_ON = 0x1a,
-    DISP_CMD_ENHANCE_OFF = 0x1b,
-    DISP_CMD_GET_ENHANCE_EN = 0x1c,
-    DISP_CMD_CLK_ON = 0x1d,
-    DISP_CMD_CLK_OFF = 0x1e,
-    DISP_CMD_SET_SCREEN_SIZE = 0x1f,//when the screen is not used to display(lcd/tv/vga/hdmi) directly, maybe capture the screen and scaler to dram, or as a layer of another screen
-    DISP_CMD_CAPTURE_SCREEN = 0x20,//caputre screen and scaler to dram
-    DISP_CMD_DE_FLICKER_ON = 0x21,
-    DISP_CMD_DE_FLICKER_OFF = 0x22,
-
-//----layer----
-    DISP_CMD_LAYER_REQUEST = 0x40,
-    DISP_CMD_LAYER_RELEASE = 0x41,
-    DISP_CMD_LAYER_OPEN = 0x42,
-    DISP_CMD_LAYER_CLOSE = 0x43,
-    DISP_CMD_LAYER_SET_FB = 0x44,
-    DISP_CMD_LAYER_GET_FB = 0x45,
-    DISP_CMD_LAYER_SET_SRC_WINDOW = 0x46,
-    DISP_CMD_LAYER_GET_SRC_WINDOW = 0x47,
-    DISP_CMD_LAYER_SET_SCN_WINDOW = 0x48,
-    DISP_CMD_LAYER_GET_SCN_WINDOW = 0x49,
-    DISP_CMD_LAYER_SET_PARA = 0x4a,
-    DISP_CMD_LAYER_GET_PARA = 0x4b,
-    DISP_CMD_LAYER_ALPHA_ON = 0x4c,
-    DISP_CMD_LAYER_ALPHA_OFF = 0x4d,
-    DISP_CMD_LAYER_GET_ALPHA_EN = 0x4e,
-    DISP_CMD_LAYER_SET_ALPHA_VALUE = 0x4f,
-    DISP_CMD_LAYER_GET_ALPHA_VALUE = 0x50,
-    DISP_CMD_LAYER_CK_ON = 0x51,
-    DISP_CMD_LAYER_CK_OFF = 0x52,
-    DISP_CMD_LAYER_GET_CK_EN = 0x53,
-    DISP_CMD_LAYER_SET_PIPE = 0x54,
-    DISP_CMD_LAYER_GET_PIPE = 0x55,
-    DISP_CMD_LAYER_TOP = 0x56,
-    DISP_CMD_LAYER_BOTTOM = 0x57,
-    DISP_CMD_LAYER_GET_PRIO = 0x58,
-    DISP_CMD_LAYER_SET_SMOOTH = 0x59,
-    DISP_CMD_LAYER_GET_SMOOTH = 0x5a,
-    DISP_CMD_LAYER_SET_BRIGHT = 0x5b,//亮度
-    DISP_CMD_LAYER_SET_CONTRAST = 0x5c,//对比度
-    DISP_CMD_LAYER_SET_SATURATION = 0x5d,//饱和度
-    DISP_CMD_LAYER_SET_HUE = 0x5e,//色调,色度
-    DISP_CMD_LAYER_GET_BRIGHT = 0x5f,
-    DISP_CMD_LAYER_GET_CONTRAST = 0x60,
-    DISP_CMD_LAYER_GET_SATURATION = 0x61,
-    DISP_CMD_LAYER_GET_HUE = 0x62,
-    DISP_CMD_LAYER_ENHANCE_ON = 0x63,
-    DISP_CMD_LAYER_ENHANCE_OFF = 0x64,
-    DISP_CMD_LAYER_GET_ENHANCE_EN = 0x65,
-    DISP_CMD_LAYER_VPP_ON = 0x67,
-    DISP_CMD_LAYER_VPP_OFF = 0x68,
-    DISP_CMD_LAYER_GET_VPP_EN = 0x69,
-    DISP_CMD_LAYER_SET_LUMA_SHARP_LEVEL = 0x6a,
-    DISP_CMD_LAYER_GET_LUMA_SHARP_LEVEL = 0x6b,
-    DISP_CMD_LAYER_SET_CHROMA_SHARP_LEVEL = 0x6c,
-    DISP_CMD_LAYER_GET_CHROMA_SHARP_LEVEL = 0x6d,
-    DISP_CMD_LAYER_SET_WHITE_EXTEN_LEVEL = 0x6e,
-    DISP_CMD_LAYER_GET_WHITE_EXTEN_LEVEL = 0x6f,
-    DISP_CMD_LAYER_SET_BLACK_EXTEN_LEVEL = 0x70,
-    DISP_CMD_LAYER_GET_BLACK_EXTEN_LEVEL = 0x71,
-
-//----scaler----
-    DISP_CMD_SCALER_REQUEST = 0x80,
-    DISP_CMD_SCALER_RELEASE = 0x81,
-    DISP_CMD_SCALER_EXECUTE = 0x82,
-
-//----hwc----
-    DISP_CMD_HWC_OPEN = 0xc0,
-    DISP_CMD_HWC_CLOSE = 0xc1,
-    DISP_CMD_HWC_SET_POS = 0xc2,
-    DISP_CMD_HWC_GET_POS = 0xc3,
-    DISP_CMD_HWC_SET_FB = 0xc4,
-    DISP_CMD_HWC_SET_PALETTE_TABLE = 0xc5,
-
-//----video----
-    DISP_CMD_VIDEO_START = 0x100,
-    DISP_CMD_VIDEO_STOP = 0x101,
-    DISP_CMD_VIDEO_SET_FB = 0x102,
-    DISP_CMD_VIDEO_GET_FRAME_ID = 0x103,
-    DISP_CMD_VIDEO_GET_DIT_INFO = 0x104,
-
-//----lcd----
-    DISP_CMD_LCD_ON = 0x140,
-    DISP_CMD_LCD_OFF = 0x141,
-    DISP_CMD_LCD_SET_BRIGHTNESS = 0x142,
-    DISP_CMD_LCD_GET_BRIGHTNESS = 0x143,
-    DISP_CMD_LCD_CPUIF_XY_SWITCH = 0x146,
-    DISP_CMD_LCD_CHECK_OPEN_FINISH = 0x14a,
-    DISP_CMD_LCD_CHECK_CLOSE_FINISH = 0x14b,
-    DISP_CMD_LCD_SET_SRC = 0x14c,
-    DISP_CMD_LCD_USER_DEFINED_FUNC = 0x14d,
-
-//----tv----
-    DISP_CMD_TV_ON = 0x180,
-    DISP_CMD_TV_OFF = 0x181,
-    DISP_CMD_TV_SET_MODE = 0x182,
-    DISP_CMD_TV_GET_MODE = 0x183,
-    DISP_CMD_TV_AUTOCHECK_ON = 0x184,
-    DISP_CMD_TV_AUTOCHECK_OFF = 0x185,
-    DISP_CMD_TV_GET_INTERFACE = 0x186,
-    DISP_CMD_TV_SET_SRC = 0x187,
-    DISP_CMD_TV_GET_DAC_STATUS = 0x188,
-    DISP_CMD_TV_SET_DAC_SOURCE = 0x189,
-    DISP_CMD_TV_GET_DAC_SOURCE = 0x18a,
-
-//----hdmi----
-    DISP_CMD_HDMI_ON = 0x1c0,
-    DISP_CMD_HDMI_OFF = 0x1c1,
-    DISP_CMD_HDMI_SET_MODE = 0x1c2,
-    DISP_CMD_HDMI_GET_MODE = 0x1c3,
-    DISP_CMD_HDMI_SUPPORT_MODE = 0x1c4,
-    DISP_CMD_HDMI_GET_HPD_STATUS = 0x1c5,
-	DISP_CMD_HDMI_SET_SRC = 0x1c6,
-
-//----vga----
-    DISP_CMD_VGA_ON = 0x200,
-    DISP_CMD_VGA_OFF = 0x201,
-    DISP_CMD_VGA_SET_MODE = 0x202,
-    DISP_CMD_VGA_GET_MODE = 0x203,
-	DISP_CMD_VGA_SET_SRC = 0x204,
-
-//----sprite----
-    DISP_CMD_SPRITE_OPEN = 0x240,
-    DISP_CMD_SPRITE_CLOSE = 0x241,
-    DISP_CMD_SPRITE_SET_FORMAT = 0x242,
-    DISP_CMD_SPRITE_GLOBAL_ALPHA_ENABLE = 0x243,
-    DISP_CMD_SPRITE_GLOBAL_ALPHA_DISABLE = 0x244,
-    DISP_CMD_SPRITE_GET_GLOBAL_ALPHA_ENABLE = 0x252,
-    DISP_CMD_SPRITE_SET_GLOBAL_ALPHA_VALUE = 0x245,
-    DISP_CMD_SPRITE_GET_GLOBAL_ALPHA_VALUE = 0x253,
-    DISP_CMD_SPRITE_SET_ORDER = 0x246,
-    DISP_CMD_SPRITE_GET_TOP_BLOCK = 0x250,
-    DISP_CMD_SPRITE_GET_BOTTOM_BLOCK = 0x251,
-    DISP_CMD_SPRITE_SET_PALETTE_TBL = 0x247,
-    DISP_CMD_SPRITE_GET_BLOCK_NUM = 0x259,
-    DISP_CMD_SPRITE_BLOCK_REQUEST = 0x248,
-    DISP_CMD_SPRITE_BLOCK_RELEASE = 0x249,
-    DISP_CMD_SPRITE_BLOCK_OPEN = 0x257,
-    DISP_CMD_SPRITE_BLOCK_CLOSE = 0x258,
-    DISP_CMD_SPRITE_BLOCK_SET_SOURCE_WINDOW = 0x25a,
-    DISP_CMD_SPRITE_BLOCK_GET_SOURCE_WINDOW = 0x25b,
-    DISP_CMD_SPRITE_BLOCK_SET_SCREEN_WINDOW = 0x24a,
-    DISP_CMD_SPRITE_BLOCK_GET_SCREEN_WINDOW = 0x24c,
-    DISP_CMD_SPRITE_BLOCK_SET_FB = 0x24b,
-    DISP_CMD_SPRITE_BLOCK_GET_FB = 0x24d,
-    DISP_CMD_SPRITE_BLOCK_SET_PARA = 0x25c,
-    DISP_CMD_SPRITE_BLOCK_GET_PARA = 0x25d,
-    DISP_CMD_SPRITE_BLOCK_SET_TOP = 0x24e,
-    DISP_CMD_SPRITE_BLOCK_SET_BOTTOM = 0x24f,
-    DISP_CMD_SPRITE_BLOCK_GET_PREV_BLOCK = 0x254,
-    DISP_CMD_SPRITE_BLOCK_GET_NEXT_BLOCK = 0x255,
-    DISP_CMD_SPRITE_BLOCK_GET_PRIO = 0x256,
-
-//----framebuffer----
-	DISP_CMD_FB_REQUEST = 0x280,
-	DISP_CMD_FB_RELEASE = 0x281,
-	DISP_CMD_FB_GET_PARA = 0x282,
-	DISP_CMD_GET_DISP_INIT_PARA = 0x283,
-
-//---for Displayer Test --------
-	DISP_CMD_MEM_REQUEST = 0x2c0,
-	DISP_CMD_MEM_RELASE = 0x2c1,
-	DISP_CMD_MEM_GETADR = 0x2c2,
-	DISP_CMD_MEM_SELIDX = 0x2c3,
-
-	DISP_CMD_SUSPEND = 0x2d0,
-	DISP_CMD_RESUME = 0x2d1,
-
-	DISP_CMD_PRINT_REG = 0x2e0,
-
-//---pwm --------
-    DISP_CMD_PWM_SET_PARA = 0x300,
-    DISP_CMD_PWM_GET_PARA = 0x301,
-}__disP_cmd_t;
-
-
-#define GET_UMP_SECURE_ID_BUF1 _IOWR('m', 310, unsigned int)
-#define GET_UMP_SECURE_ID_BUF2 _IOWR('m', 311, unsigned int)
-
-#define FBIOGET_LAYER_HDL_0 0x4700
-#define FBIOGET_LAYER_HDL_1 0x4701
-
-#define FBIO_CLOSE 0x4710
-#define FBIO_OPEN 0x4711
-#define FBIO_ALPHA_ON 0x4712
-#define FBIO_ALPHA_OFF 0x4713
-#define FBIOPUT_ALPHA_VALUE 0x4714
-
-#define FBIO_DISPLAY_SCREEN0_ONLY 0x4720
-#define FBIO_DISPLAY_SCREEN1_ONLY 0x4721
-#define FBIO_DISPLAY_TWO_SAME_SCREEN_TB 0x4722
-#define FBIO_DISPLAY_TWO_DIFF_SCREEN_SAME_CONTENTS 0x4723
-
-#endif
diff --git a/include/linux/drv_display_sun5i.h b/include/linux/drv_display_sun5i.h
deleted file mode 100644
index 53b9060..0000000
--- a/include/linux/drv_display_sun5i.h
+++ /dev/null
@@ -1,807 +0,0 @@
-/*
- * include/linux/drv_display_sun5i.h
- *
- * (C) Copyright 2007-2012
- * Allwinner Technology Co., Ltd. <www.allwinnertech.com>
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License as
- * published by the Free Software Foundation; either version 2 of
- * the License, or (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.	 See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
- * MA 02111-1307 USA
- */
-
-#ifndef __DRV_DISPLAY_H__
-#define __DRV_DISPLAY_H__
-
-#define __bool signed char
-
-typedef struct {__u8  alpha;__u8 red;__u8 green; __u8 blue; }__disp_color_t;
-typedef struct {__s32 x; __s32 y; __u32 width; __u32 height;}__disp_rect_t;
-typedef struct {__u32 width;__u32 height;                   }__disp_rectsz_t;
-typedef struct {__s32 x; __s32 y;                           }__disp_pos_t;
-
-
-typedef enum
-{
-    DISP_FORMAT_1BPP        =0x0,
-    DISP_FORMAT_2BPP        =0x1,
-    DISP_FORMAT_4BPP        =0x2,
-    DISP_FORMAT_8BPP        =0x3,
-    DISP_FORMAT_RGB655      =0x4,
-    DISP_FORMAT_RGB565      =0x5,
-    DISP_FORMAT_RGB556      =0x6,
-    DISP_FORMAT_ARGB1555    =0x7,
-    DISP_FORMAT_RGBA5551    =0x8,
-    DISP_FORMAT_ARGB888     =0x9,//alpha padding to 0xff
-    DISP_FORMAT_ARGB8888    =0xa,
-    DISP_FORMAT_RGB888      =0xb,
-    DISP_FORMAT_ARGB4444    =0xc,
-
-    DISP_FORMAT_YUV444      =0x10,
-    DISP_FORMAT_YUV422      =0x11,
-    DISP_FORMAT_YUV420      =0x12,
-    DISP_FORMAT_YUV411      =0x13,
-    DISP_FORMAT_CSIRGB      =0x14,
-}__disp_pixel_fmt_t;
-
-
-typedef enum
-{
-    DISP_MOD_INTERLEAVED        =0x1,   //interleaved,1个地址
-    DISP_MOD_NON_MB_PLANAR      =0x0,   //无宏块平面模式,3个地址,RGB/YUV每个channel分别存放
-    DISP_MOD_NON_MB_UV_COMBINED =0x2,   //无宏块UV打包模式,2个地址,Y和UV分别存放
-    DISP_MOD_MB_PLANAR          =0x4,   //宏块平面模式,3个地址,RGB/YUV每个channel分别存放
-    DISP_MOD_MB_UV_COMBINED     =0x6,   //宏块UV打包模式 ,2个地址,Y和UV分别存放
-}__disp_pixel_mod_t;
-
-typedef enum
-{
-//for interleave argb8888
-    DISP_SEQ_ARGB   =0x0,//A在高位
-    DISP_SEQ_BGRA   =0x2,
-
-//for nterleaved yuv422
-    DISP_SEQ_UYVY   =0x3,
-    DISP_SEQ_YUYV   =0x4,
-    DISP_SEQ_VYUY   =0x5,
-    DISP_SEQ_YVYU   =0x6,
-
-//for interleaved yuv444
-    DISP_SEQ_AYUV   =0x7,
-    DISP_SEQ_VUYA   =0x8,
-
-//for uv_combined yuv420
-    DISP_SEQ_UVUV   =0x9,
-    DISP_SEQ_VUVU   =0xa,
-
-//for 16bpp rgb
-    DISP_SEQ_P10    = 0xd,//p1在高位
-    DISP_SEQ_P01    = 0xe,//p0在高位
-
-//for planar format or 8bpp rgb
-    DISP_SEQ_P3210  = 0xf,//p3在高位
-    DISP_SEQ_P0123  = 0x10,//p0在高位
-
-//for 4bpp rgb
-    DISP_SEQ_P76543210  = 0x11,
-    DISP_SEQ_P67452301  = 0x12,
-    DISP_SEQ_P10325476  = 0x13,
-    DISP_SEQ_P01234567  = 0x14,
-
-//for 2bpp rgb
-    DISP_SEQ_2BPP_BIG_BIG       = 0x15,//15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0
-    DISP_SEQ_2BPP_BIG_LITTER    = 0x16,//12,13,14,15,8,9,10,11,4,5,6,7,0,1,2,3
-    DISP_SEQ_2BPP_LITTER_BIG    = 0x17,//3,2,1,0,7,6,5,4,11,10,9,8,15,14,13,12
-    DISP_SEQ_2BPP_LITTER_LITTER = 0x18,//0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
-
-//for 1bpp rgb
-    DISP_SEQ_1BPP_BIG_BIG       = 0x19,//31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0
-    DISP_SEQ_1BPP_BIG_LITTER    = 0x1a,//24,25,26,27,28,29,30,31,16,17,18,19,20,21,22,23,8,9,10,11,12,13,14,15,0,1,2,3,4,5,6,7
-    DISP_SEQ_1BPP_LITTER_BIG    = 0x1b,//7,6,5,4,3,2,1,0,15,14,13,12,11,10,9,8,23,22,21,20,19,18,17,16,31,30,29,28,27,26,25,24
-    DISP_SEQ_1BPP_LITTER_LITTER = 0x1c,//0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31
-}__disp_pixel_seq_t;
-
-typedef enum
-{
-    DISP_3D_SRC_MODE_TB = 0x0,//top bottom
-    DISP_3D_SRC_MODE_FP = 0x1,//frame packing
-    DISP_3D_SRC_MODE_SSF = 0x2,//side by side full
-    DISP_3D_SRC_MODE_SSH = 0x3,//side by side half
-    DISP_3D_SRC_MODE_LI = 0x4,//line interleaved
-}__disp_3d_src_mode_t;
-
-typedef enum
-{
-    DISP_3D_OUT_MODE_CI_1 = 0x5,//column interlaved 1
-    DISP_3D_OUT_MODE_CI_2 = 0x6,//column interlaved 2
-    DISP_3D_OUT_MODE_CI_3 = 0x7,//column interlaved 3
-    DISP_3D_OUT_MODE_CI_4 = 0x8,//column interlaved 4
-    DISP_3D_OUT_MODE_LIRGB = 0x9,//line interleaved rgb
-
-    DISP_3D_OUT_MODE_TB = 0x0,//top bottom
-    DISP_3D_OUT_MODE_FP = 0x1,//frame packing
-    DISP_3D_OUT_MODE_SSF = 0x2,//side by side full
-    DISP_3D_OUT_MODE_SSH = 0x3,//side by side half
-    DISP_3D_OUT_MODE_LI = 0x4,//line interleaved
-    DISP_3D_OUT_MODE_FA = 0xa,//field alternative
-}__disp_3d_out_mode_t;
-
-typedef enum
-{
-    DISP_BT601  = 0,
-    DISP_BT709  = 1,
-    DISP_YCC    = 2,
-    DISP_VXYCC  = 3,
-}__disp_cs_mode_t;
-
-typedef enum
-{
-    DISP_COLOR_RANGE_16_255 = 0,
-    DISP_COLOR_RANGE_0_255 = 1,
-    DISP_COLOR_RANGE_16_235 = 2,
-}__disp_color_range_t;
-
-typedef enum
-{
-    DISP_OUTPUT_TYPE_NONE   = 0,
-    DISP_OUTPUT_TYPE_LCD    = 1,
-    DISP_OUTPUT_TYPE_TV     = 2,
-    DISP_OUTPUT_TYPE_HDMI   = 4,
-    DISP_OUTPUT_TYPE_VGA    = 8,
-}__disp_output_type_t;
-
-typedef enum
-{
-    DISP_TV_NONE    = 0,
-    DISP_TV_CVBS    = 1,
-    DISP_TV_YPBPR   = 2,
-    DISP_TV_SVIDEO  = 4,
-}__disp_tv_output_t;
-
-typedef enum
-{
-    DISP_TV_MOD_480I                = 0,
-    DISP_TV_MOD_576I                = 1,
-    DISP_TV_MOD_480P                = 2,
-    DISP_TV_MOD_576P                = 3,
-    DISP_TV_MOD_720P_50HZ           = 4,
-    DISP_TV_MOD_720P_60HZ           = 5,
-    DISP_TV_MOD_1080I_50HZ          = 6,
-    DISP_TV_MOD_1080I_60HZ          = 7,
-    DISP_TV_MOD_1080P_24HZ          = 8,
-    DISP_TV_MOD_1080P_50HZ          = 9,
-    DISP_TV_MOD_1080P_60HZ          = 0xa,
-    DISP_TV_MOD_1080P_24HZ_3D_FP    = 0x17,
-    DISP_TV_MOD_720P_50HZ_3D_FP     = 0x18,
-    DISP_TV_MOD_720P_60HZ_3D_FP     = 0x19,
-    DISP_TV_MOD_PAL                 = 0xb,
-    DISP_TV_MOD_PAL_SVIDEO          = 0xc,
-    DISP_TV_MOD_NTSC                = 0xe,
-    DISP_TV_MOD_NTSC_SVIDEO         = 0xf,
-    DISP_TV_MOD_PAL_M               = 0x11,
-    DISP_TV_MOD_PAL_M_SVIDEO        = 0x12,
-    DISP_TV_MOD_PAL_NC              = 0x14,
-    DISP_TV_MOD_PAL_NC_SVIDEO       = 0x15,
-    DISP_TV_MODE_NUM               = 0x1a,
-}__disp_tv_mode_t;
-
-typedef enum
-{
-    DISP_TV_DAC_SRC_COMPOSITE = 0,
-    DISP_TV_DAC_SRC_LUMA = 1,
-    DISP_TV_DAC_SRC_CHROMA = 2,
-    DISP_TV_DAC_SRC_Y = 4,
-    DISP_TV_DAC_SRC_PB = 5,
-    DISP_TV_DAC_SRC_PR = 6,
-    DISP_TV_DAC_SRC_NONE = 7,
-}__disp_tv_dac_source;
-
-typedef enum
-{
-    DISP_VGA_H1680_V1050    = 0,
-    DISP_VGA_H1440_V900     = 1,
-    DISP_VGA_H1360_V768     = 2,
-    DISP_VGA_H1280_V1024    = 3,
-    DISP_VGA_H1024_V768     = 4,
-    DISP_VGA_H800_V600      = 5,
-    DISP_VGA_H640_V480      = 6,
-    DISP_VGA_H1440_V900_RB  = 7,//not support yet
-    DISP_VGA_H1680_V1050_RB = 8,//not support yet
-    DISP_VGA_H1920_V1080_RB = 9,
-    DISP_VGA_H1920_V1080    = 0xa,
-    DISP_VGA_H1280_V720     = 0xb,
-    DISP_VGA_MODE_NUM       = 0xc,
-}__disp_vga_mode_t;
-
-
-typedef enum
-{
-    DISP_LCDC_SRC_DE_CH1    = 0,
-    DISP_LCDC_SRC_DE_CH2    = 1,
-    DISP_LCDC_SRC_DMA       = 2,
-    DISP_LCDC_SRC_WHITE     = 3,
-    DISP_LCDC_SRC_BLACK     = 4,
-    DISP_LCDC_SRC_BLUT      = 5,
-}__disp_lcdc_src_t;
-
-typedef enum
-{
-    DISP_LCD_BRIGHT_LEVEL0  = 0,
-    DISP_LCD_BRIGHT_LEVEL1  = 1,
-    DISP_LCD_BRIGHT_LEVEL2  = 2,
-    DISP_LCD_BRIGHT_LEVEL3  = 3,
-    DISP_LCD_BRIGHT_LEVEL4  = 4,
-    DISP_LCD_BRIGHT_LEVEL5  = 5,
-    DISP_LCD_BRIGHT_LEVEL6  = 6,
-    DISP_LCD_BRIGHT_LEVEL7  = 7,
-    DISP_LCD_BRIGHT_LEVEL8  = 8,
-    DISP_LCD_BRIGHT_LEVEL9  = 9,
-    DISP_LCD_BRIGHT_LEVEL10 = 0xa,
-    DISP_LCD_BRIGHT_LEVEL11 = 0xb,
-    DISP_LCD_BRIGHT_LEVEL12 = 0xc,
-    DISP_LCD_BRIGHT_LEVEL13 = 0xd,
-    DISP_LCD_BRIGHT_LEVEL14 = 0xe,
-    DISP_LCD_BRIGHT_LEVEL15 = 0xf,
-}__disp_lcd_bright_t;
-
-typedef enum
-{
-    DISP_LAYER_WORK_MODE_NORMAL     = 0,    //normal work mode
-    DISP_LAYER_WORK_MODE_PALETTE    = 1,    //palette work mode
-    DISP_LAYER_WORK_MODE_INTER_BUF  = 2,    //internal frame buffer work mode
-    DISP_LAYER_WORK_MODE_GAMMA      = 3,    //gamma correction work mode
-    DISP_LAYER_WORK_MODE_SCALER     = 4,    //scaler work mode
-}__disp_layer_work_mode_t;
-
-typedef enum
-{
-    DISP_VIDEO_NATUAL       = 0,
-    DISP_VIDEO_SOFT         = 1,
-    DISP_VIDEO_VERYSOFT     = 2,
-    DISP_VIDEO_SHARP        = 3,
-    DISP_VIDEO_VERYSHARP    = 4
-}__disp_video_smooth_t;
-
-typedef enum
-{
-    DISP_HWC_MOD_H32_V32_8BPP = 0,
-    DISP_HWC_MOD_H64_V64_2BPP = 1,
-    DISP_HWC_MOD_H64_V32_4BPP = 2,
-    DISP_HWC_MOD_H32_V64_4BPP = 3,
-}__disp_hwc_mode_t;
-
-typedef enum
-{
-    DISP_EXIT_MODE_CLEAN_ALL    = 0,
-    DISP_EXIT_MODE_CLEAN_PARTLY = 1,//only clean interrupt temply
-}__disp_exit_mode_t;
-
-
-typedef enum//only for debug!!!
-{
-    DISP_REG_SCALER0 = 0,
-    DISP_REG_SCALER1 = 1,
-    DISP_REG_IMAGE0 = 2,
-    DISP_REG_IMAGE1 = 3,
-    DISP_REG_LCDC0 = 4,
-    DISP_REG_LCDC1 = 5,
-    DISP_REG_TVEC0 = 6,
-    DISP_REG_TVEC1 = 7,
-    DISP_REG_CCMU = 8,
-    DISP_REG_PIOC = 9,
-    DISP_REG_PWM = 10,
-}__disp_reg_index_t;
-
-
-typedef struct
-{
-    __u32                   addr[3];    // frame buffer的内容地址，对于rgb类型，只有addr[0]有效
-    __disp_rectsz_t         size;//单位是pixel
-    __disp_pixel_fmt_t      format;
-    __disp_pixel_seq_t      seq;
-    __disp_pixel_mod_t      mode;
-    __bool                  br_swap;    // blue red color swap flag, FALSE:RGB; TRUE:BGR,only used in rgb format
-    __disp_cs_mode_t        cs_mode;    //color space
-    __bool                  b_trd_src; //if 3d source, used for scaler mode layer
-    __disp_3d_src_mode_t    trd_mode; //source 3d mode, used for scaler mode layer
-    __u32                   trd_right_addr[3];//used when in frame packing 3d mode
-}__disp_fb_t;
-
-typedef struct
-{
-    __disp_layer_work_mode_t    mode;       //layer work mode
-    __bool                      b_from_screen;
-    __u8                        pipe;       //layer pipe,0/1,if in scaler mode, scaler0 must be pipe0, scaler1 must be pipe1
-    __u8                        prio;       //layer priority,can get layer prio,but never set layer prio,从底至顶,优先级由低至高
-    __bool                      alpha_en;   //layer global alpha enable
-    __u16                       alpha_val;  //layer global alpha value
-    __bool                      ck_enable;  //layer color key enable
-    __disp_rect_t               src_win;    // framebuffer source window,only care x,y if is not scaler mode
-    __disp_rect_t               scn_win;    // screen window
-    __disp_fb_t                 fb;         //framebuffer
-    __bool                      b_trd_out;  //if output 3d mode, used for scaler mode layer
-    __disp_3d_out_mode_t        out_trd_mode; //output 3d mode, used for scaler mode layer
-}__disp_layer_info_t;
-
-typedef struct
-{
-    __disp_color_t   ck_max;
-    __disp_color_t   ck_min;
-    __u32             red_match_rule;//0/1:always match; 2:match if min<=color<=max; 3:match if color>max or color<min
-    __u32             green_match_rule;//0/1:always match; 2:match if min<=color<=max; 3:match if color>max or color<min
-    __u32             blue_match_rule;//0/1:always match; 2:match if min<=color<=max; 3:match if color>max or color<min
-}__disp_colorkey_t;
-
-typedef struct
-{
-    __s32   id;
-    __u32   addr[3];
-    __u32   addr_right[3];//used when in frame packing 3d mode
-    __bool  interlace;
-    __bool  top_field_first;
-    __u32   frame_rate; // *FRAME_RATE_BASE(现在定为1000)
-    __u32   flag_addr;//dit maf flag address
-    __u32   flag_stride;//dit maf flag line stride
-    __bool  maf_valid;
-    __bool  pre_frame_valid;
-}__disp_video_fb_t;
-
-typedef struct
-{
-    __bool maf_enable;
-    __bool pre_frame_enable;
-}__disp_dit_info_t;
-
-typedef struct
-{
-    __disp_hwc_mode_t     pat_mode;
-    __u32                 addr;
-}__disp_hwc_pattern_t;
-
-typedef struct
-{
-    __disp_fb_t     input_fb;
-    __disp_rect_t   source_regn;
-    __disp_fb_t     output_fb;
-    //__disp_rect_t   out_regn;
-}__disp_scaler_para_t;
-
-typedef struct
-{
-    __disp_fb_t       fb;
-    __disp_rect_t   src_win;//source region,only care x,y because of not scaler
-    __disp_rect_t   scn_win;// sceen region
-}__disp_sprite_block_para_t;
-
-typedef struct
-{
-    __disp_rectsz_t screen_size;//used when the screen is not displaying on any output device(lcd/hdmi/vga/tv)
-    __disp_fb_t     output_fb;
-}__disp_capture_screen_para_t;
-
-typedef struct
-{
-    __s32 (*Hdmi_open)(void);
-    __s32 (*Hdmi_close)(void);
-    __s32 (*hdmi_set_mode)(__disp_tv_mode_t mode);
-    __s32 (*hdmi_mode_support)(__disp_tv_mode_t mode);
-    __s32 (*hdmi_get_HPD_status)(void);
-    __s32 (*hdmi_set_pll)(__u32 pll, __u32 clk);
-}__disp_hdmi_func;
-
-typedef struct
-{
-	__u32   lcd_x;
-	__u32   lcd_y;
-	__u32   lcd_dclk_freq;
-	__u32   lcd_pwm_not_used;
-	__u32   lcd_pwm_ch;
-	__u32   lcd_pwm_freq;
-	__u32   lcd_pwm_pol;
-	__u32   lcd_srgb;
-	__u32   lcd_swap;
-
-	__u32   lcd_if; //0:hv(sync+de); 1:8080; 2:ttl; 3:lvds
-
-	__u32   lcd_uf;
-	__u32   lcd_vt;
-	__u32   lcd_ht;
-	__u32   lcd_vbp;
-	__u32   lcd_hbp;
-
-	__u32   lcd_hv_if;
-	__u32   lcd_hv_smode;
-	__u32   lcd_hv_s888_if;
-	__u32   lcd_hv_syuv_if;
-	__u32   lcd_hv_vspw;
-	__u32   lcd_hv_hspw;
-	__u32   lcd_hv_lde_used;
-	__u32   lcd_hv_lde_iovalue;
-
-	__u32   lcd_ttl_stvh;
-	__u32   lcd_ttl_stvdl;
-	__u32   lcd_ttl_stvdp;
-	__u32   lcd_ttl_ckvt;
-	__u32   lcd_ttl_ckvh;
-	__u32   lcd_ttl_ckvd;
-	__u32   lcd_ttl_oevt;
-	__u32   lcd_ttl_oevh;
-	__u32   lcd_ttl_oevd;
-	__u32   lcd_ttl_sthh;
-	__u32   lcd_ttl_sthd;
-	__u32   lcd_ttl_oehh;
-	__u32   lcd_ttl_oehd;
-	__u32   lcd_ttl_revd;
-	__u32   lcd_ttl_datarate;
-	__u32   lcd_ttl_revsel;
-	__u32   lcd_ttl_datainv_en;
-	__u32   lcd_ttl_datainv_sel;
-
-	__u32   lcd_lvds_ch;        // 0: single channel; 1:dual channel
-	__u32   lcd_lvds_mode;      // 0:NS mode; 1:JEIDA mode
-	__u32	lcd_lvds_bitwidth;  // 0:24bit; 1:18bit
-	__u32   lcd_lvds_io_cross;	// 0:normal; 1:pn cross
-
-	__u32   lcd_cpu_if;//0:18bit; 1:16bit mode0; 2:16bit mode1; 3:16bit mode2; 4:16bit mode3; 5:9bit; 6:8bit 256K; 7:8bit 65K
-	__u32   lcd_cpu_da;
-	__u32   lcd_frm;
-
-	__u32   lcd_io_cfg0;
-	__u32   lcd_io_cfg1;
-	__u32   lcd_io_strength;
-
-	__u32   lcd_gamma_correction_en;
-	__u32   lcd_gamma_tbl[256];
-
-	__u32   lcd_hv_srgb_seq0;
-	__u32   lcd_hv_srgb_seq1;
-	__u32   lcd_hv_syuv_seq;
-	__u32   lcd_hv_syuv_fdly;
-
-	__u32   port_index;
-	__u32   start_delay;//not need to config for user
-	__u32   tcon_index; //not need to config for user
-}__panel_para_t;
-
-typedef struct
-{
-	__u32	pixel_clk;//khz
-	__u32	hor_pixels;
-	__u32	ver_pixels;
-	__u32	hor_total_time;
-	__u32	hor_front_porch;
-	__u32	hor_sync_time;
-	__u32	hor_back_porch;
-	__u32	ver_total_time;
-	__u32	ver_front_porch;
-	__u32	ver_sync_time;
-	__u32	ver_back_porch;
-}__disp_tcon_timing_t;
-
-typedef struct
-{
-	__u32 base_lcdc0;
-	__u32 base_lcdc1;
-	__u32 base_pioc;
-	__u32 base_ccmu;
-	__u32 base_pwm;
-}__reg_bases_t;
-
-typedef void (*LCD_FUNC) (__u32 sel);
-typedef struct lcd_function
-{
-    LCD_FUNC func;
-    __u32 delay;//ms
-}__lcd_function_t;
-
-typedef struct lcd_flow
-{
-    __lcd_function_t func[5];
-    __u32 func_num;
-}__lcd_flow_t;
-
-typedef struct
-{
-    void (*cfg_panel_info)(__panel_para_t * info);
-    __s32 (*cfg_open_flow)(__u32 sel);
-    __s32 (*cfg_close_flow)(__u32 sel);
-    __s32 (*lcd_user_defined_func)(__u32 sel, __u32 para1, __u32 para2, __u32 para3);
-}__lcd_panel_fun_t;
-
-typedef struct
-{
-    __bool enable;
-    __u32 active_state;
-    __u32 duty_ns;
-    __u32 period_ns;
-}__pwm_info_t;
-///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-
-typedef enum
-{
-    FB_MODE_SCREEN0 = 0,
-    FB_MODE_SCREEN1 = 1,
-    FB_MODE_DUAL_SAME_SCREEN_TB = 2,//two screen, top buffer for screen0, bottom buffer for screen1
-    FB_MODE_DUAL_DIFF_SCREEN_SAME_CONTENTS = 3,//two screen, they have same contents;
-}__fb_mode_t;
-
-typedef struct
-{
-	__fb_mode_t                 fb_mode;
-	__disp_layer_work_mode_t    mode;
-	__u32                       buffer_num;
-	__u32                       width;
-	__u32                       height;
-
-	__u32                       output_width;//used when scaler mode
-	__u32                       output_height;//used when scaler mode
-
-	__u32                       primary_screen_id;//used when FB_MODE_DUAL_DIFF_SCREEN_SAME_CONTENTS
-	__u32                       aux_output_width;//used when FB_MODE_DUAL_DIFF_SCREEN_SAME_CONTENTS
-	__u32                       aux_output_height;//used when FB_MODE_DUAL_DIFF_SCREEN_SAME_CONTENTS
-
-//maybe not used anymore
-	__u32                       line_length;//in byte unit
-	__u32                       smem_len;
-	__u32                       ch1_offset;//use when PLANAR or UV_COMBINED mode
-	__u32                       ch2_offset;//use when PLANAR mode
-}__disp_fb_create_para_t;
-
-typedef enum
-{
-    DISP_INIT_MODE_SCREEN0 = 0,//fb0 for screen0
-    DISP_INIT_MODE_SCREEN1 = 1,//fb0 for screen1
-    DISP_INIT_MODE_TWO_DIFF_SCREEN = 2,//fb0 for screen0 and fb1 for screen1
-    DISP_INIT_MODE_TWO_SAME_SCREEN = 3,//fb0(up buffer for screen0, down buffer for screen1)
-    DISP_INIT_MODE_TWO_DIFF_SCREEN_SAME_CONTENTS = 4,//fb0 for two different screen(screen0 layer is normal layer, screen1 layer is scaler layer);
-}__disp_init_mode_t;
-
-
-typedef struct
-{
-    __bool                  b_init;
-    __disp_init_mode_t      disp_mode;//0:single screen0(fb0); 1:single screen1(fb0);  2:dual diff screen(fb0, fb1); 3:dual same screen(fb0 up and down); 4:dual diff screen same contents(fb0)
-
-    //for screen0 and screen1
-    __disp_output_type_t    output_type[2];
-    __disp_tv_mode_t        tv_mode[2];
-    __disp_vga_mode_t       vga_mode[2];
-
-    //for fb0 and fb1
-    __u32                   buffer_num[2];
-    __bool                  scaler_mode[2];
-    __disp_pixel_fmt_t      format[2];
-    __disp_pixel_seq_t      seq[2];
-    __bool                  br_swap[2];
-}__disp_init_t;
-
-
-typedef enum tag_DISP_CMD
-{
-//----disp global----
-    DISP_CMD_RESERVE0 = 0x00,
-    DISP_CMD_RESERVE1 = 0x01,
-    DISP_CMD_SET_BKCOLOR = 0x3f,//fail when the value is 0x02 in linux,why???
-    DISP_CMD_GET_BKCOLOR = 0x03,
-    DISP_CMD_SET_COLORKEY = 0x04,
-    DISP_CMD_GET_COLORKEY = 0x05,
-    DISP_CMD_SET_PALETTE_TBL = 0x06,
-    DISP_CMD_GET_PALETTE_TBL = 0x07,
-    DISP_CMD_SCN_GET_WIDTH = 0x08,
-    DISP_CMD_SCN_GET_HEIGHT = 0x09,
-    DISP_CMD_GET_OUTPUT_TYPE = 0x0a,
-    DISP_CMD_SET_EXIT_MODE = 0x0c,
-    DISP_CMD_SET_GAMMA_TABLE = 0x0d,
-    DISP_CMD_GAMMA_CORRECTION_ON = 0x0e,
-    DISP_CMD_GAMMA_CORRECTION_OFF = 0x0f,
-    DISP_CMD_START_CMD_CACHE =0x10,
-    DISP_CMD_EXECUTE_CMD_AND_STOP_CACHE = 0x11,
-    DISP_CMD_SET_BRIGHT = 0x12,
-    DISP_CMD_SET_CONTRAST = 0x13,
-    DISP_CMD_SET_SATURATION = 0x14,
-    DISP_CMD_GET_BRIGHT = 0x16,
-    DISP_CMD_GET_CONTRAST = 0x17,
-    DISP_CMD_GET_SATURATION = 0x18,
-    DISP_CMD_ENHANCE_ON = 0x1a,
-    DISP_CMD_ENHANCE_OFF = 0x1b,
-    DISP_CMD_GET_ENHANCE_EN = 0x1c,
-    DISP_CMD_CLK_ON = 0x1d,
-    DISP_CMD_CLK_OFF = 0x1e,
-    DISP_CMD_SET_SCREEN_SIZE = 0x1f,//when the screen is not used to display(lcd/tv/vga/hdmi) directly, maybe capture the screen and scaler to dram, or as a layer of another screen
-    DISP_CMD_CAPTURE_SCREEN = 0x20,//caputre screen and scaler to dram
-    DISP_CMD_DE_FLICKER_ON = 0x21,
-    DISP_CMD_DE_FLICKER_OFF = 0x22,
-
-//----layer----
-    DISP_CMD_LAYER_REQUEST = 0x40,
-    DISP_CMD_LAYER_RELEASE = 0x41,
-    DISP_CMD_LAYER_OPEN = 0x42,
-    DISP_CMD_LAYER_CLOSE = 0x43,
-    DISP_CMD_LAYER_SET_FB = 0x44,
-    DISP_CMD_LAYER_GET_FB = 0x45,
-    DISP_CMD_LAYER_SET_SRC_WINDOW = 0x46,
-    DISP_CMD_LAYER_GET_SRC_WINDOW = 0x47,
-    DISP_CMD_LAYER_SET_SCN_WINDOW = 0x48,
-    DISP_CMD_LAYER_GET_SCN_WINDOW = 0x49,
-    DISP_CMD_LAYER_SET_PARA = 0x4a,
-    DISP_CMD_LAYER_GET_PARA = 0x4b,
-    DISP_CMD_LAYER_ALPHA_ON = 0x4c,
-    DISP_CMD_LAYER_ALPHA_OFF = 0x4d,
-    DISP_CMD_LAYER_GET_ALPHA_EN = 0x4e,
-    DISP_CMD_LAYER_SET_ALPHA_VALUE = 0x4f,
-    DISP_CMD_LAYER_GET_ALPHA_VALUE = 0x50,
-    DISP_CMD_LAYER_CK_ON = 0x51,
-    DISP_CMD_LAYER_CK_OFF = 0x52,
-    DISP_CMD_LAYER_GET_CK_EN = 0x53,
-    DISP_CMD_LAYER_SET_PIPE = 0x54,
-    DISP_CMD_LAYER_GET_PIPE = 0x55,
-    DISP_CMD_LAYER_TOP = 0x56,
-    DISP_CMD_LAYER_BOTTOM = 0x57,
-    DISP_CMD_LAYER_GET_PRIO = 0x58,
-    DISP_CMD_LAYER_SET_SMOOTH = 0x59,
-    DISP_CMD_LAYER_GET_SMOOTH = 0x5a,
-    DISP_CMD_LAYER_SET_BRIGHT = 0x5b,//亮度
-    DISP_CMD_LAYER_SET_CONTRAST = 0x5c,//对比度
-    DISP_CMD_LAYER_SET_SATURATION = 0x5d,//饱和度
-    DISP_CMD_LAYER_SET_HUE = 0x5e,//色调,色度
-    DISP_CMD_LAYER_GET_BRIGHT = 0x5f,
-    DISP_CMD_LAYER_GET_CONTRAST = 0x60,
-    DISP_CMD_LAYER_GET_SATURATION = 0x61,
-    DISP_CMD_LAYER_GET_HUE = 0x62,
-    DISP_CMD_LAYER_ENHANCE_ON = 0x63,
-    DISP_CMD_LAYER_ENHANCE_OFF = 0x64,
-    DISP_CMD_LAYER_GET_ENHANCE_EN = 0x65,
-    DISP_CMD_LAYER_VPP_ON = 0x67,
-    DISP_CMD_LAYER_VPP_OFF = 0x68,
-    DISP_CMD_LAYER_GET_VPP_EN = 0x69,
-    DISP_CMD_LAYER_SET_LUMA_SHARP_LEVEL = 0x6a,
-    DISP_CMD_LAYER_GET_LUMA_SHARP_LEVEL = 0x6b,
-    DISP_CMD_LAYER_SET_CHROMA_SHARP_LEVEL = 0x6c,
-    DISP_CMD_LAYER_GET_CHROMA_SHARP_LEVEL = 0x6d,
-    DISP_CMD_LAYER_SET_WHITE_EXTEN_LEVEL = 0x6e,
-    DISP_CMD_LAYER_GET_WHITE_EXTEN_LEVEL = 0x6f,
-    DISP_CMD_LAYER_SET_BLACK_EXTEN_LEVEL = 0x70,
-    DISP_CMD_LAYER_GET_BLACK_EXTEN_LEVEL = 0x71,
-
-//----scaler----
-    DISP_CMD_SCALER_REQUEST = 0x80,
-    DISP_CMD_SCALER_RELEASE = 0x81,
-    DISP_CMD_SCALER_EXECUTE = 0x82,
-
-//----hwc----
-    DISP_CMD_HWC_OPEN = 0xc0,
-    DISP_CMD_HWC_CLOSE = 0xc1,
-    DISP_CMD_HWC_SET_POS = 0xc2,
-    DISP_CMD_HWC_GET_POS = 0xc3,
-    DISP_CMD_HWC_SET_FB = 0xc4,
-    DISP_CMD_HWC_SET_PALETTE_TABLE = 0xc5,
-
-//----video----
-    DISP_CMD_VIDEO_START = 0x100,
-    DISP_CMD_VIDEO_STOP = 0x101,
-    DISP_CMD_VIDEO_SET_FB = 0x102,
-    DISP_CMD_VIDEO_GET_FRAME_ID = 0x103,
-    DISP_CMD_VIDEO_GET_DIT_INFO = 0x104,
-
-//----lcd----
-    DISP_CMD_LCD_ON = 0x140,
-    DISP_CMD_LCD_OFF = 0x141,
-    DISP_CMD_LCD_SET_BRIGHTNESS = 0x142,
-    DISP_CMD_LCD_GET_BRIGHTNESS = 0x143,
-    DISP_CMD_LCD_CPUIF_XY_SWITCH = 0x146,
-    DISP_CMD_LCD_CHECK_OPEN_FINISH = 0x14a,
-    DISP_CMD_LCD_CHECK_CLOSE_FINISH = 0x14b,
-    DISP_CMD_LCD_SET_SRC = 0x14c,
-    DISP_CMD_LCD_USER_DEFINED_FUNC = 0x14d,
-
-//----tv----
-    DISP_CMD_TV_ON = 0x180,
-    DISP_CMD_TV_OFF = 0x181,
-    DISP_CMD_TV_SET_MODE = 0x182,
-    DISP_CMD_TV_GET_MODE = 0x183,
-    DISP_CMD_TV_AUTOCHECK_ON = 0x184,
-    DISP_CMD_TV_AUTOCHECK_OFF = 0x185,
-    DISP_CMD_TV_GET_INTERFACE = 0x186,
-    DISP_CMD_TV_SET_SRC = 0x187,
-    DISP_CMD_TV_GET_DAC_STATUS = 0x188,
-    DISP_CMD_TV_SET_DAC_SOURCE = 0x189,
-    DISP_CMD_TV_GET_DAC_SOURCE = 0x18a,
-
-//----hdmi----
-    DISP_CMD_HDMI_ON = 0x1c0,
-    DISP_CMD_HDMI_OFF = 0x1c1,
-    DISP_CMD_HDMI_SET_MODE = 0x1c2,
-    DISP_CMD_HDMI_GET_MODE = 0x1c3,
-    DISP_CMD_HDMI_SUPPORT_MODE = 0x1c4,
-    DISP_CMD_HDMI_GET_HPD_STATUS = 0x1c5,
-	DISP_CMD_HDMI_SET_SRC = 0x1c6,
-
-//----vga----
-    DISP_CMD_VGA_ON = 0x200,
-    DISP_CMD_VGA_OFF = 0x201,
-    DISP_CMD_VGA_SET_MODE = 0x202,
-    DISP_CMD_VGA_GET_MODE = 0x203,
-	DISP_CMD_VGA_SET_SRC = 0x204,
-
-//----sprite----
-    DISP_CMD_SPRITE_OPEN = 0x240,
-    DISP_CMD_SPRITE_CLOSE = 0x241,
-    DISP_CMD_SPRITE_SET_FORMAT = 0x242,
-    DISP_CMD_SPRITE_GLOBAL_ALPHA_ENABLE = 0x243,
-    DISP_CMD_SPRITE_GLOBAL_ALPHA_DISABLE = 0x244,
-    DISP_CMD_SPRITE_GET_GLOBAL_ALPHA_ENABLE = 0x252,
-    DISP_CMD_SPRITE_SET_GLOBAL_ALPHA_VALUE = 0x245,
-    DISP_CMD_SPRITE_GET_GLOBAL_ALPHA_VALUE = 0x253,
-    DISP_CMD_SPRITE_SET_ORDER = 0x246,
-    DISP_CMD_SPRITE_GET_TOP_BLOCK = 0x250,
-    DISP_CMD_SPRITE_GET_BOTTOM_BLOCK = 0x251,
-    DISP_CMD_SPRITE_SET_PALETTE_TBL = 0x247,
-    DISP_CMD_SPRITE_GET_BLOCK_NUM = 0x259,
-    DISP_CMD_SPRITE_BLOCK_REQUEST = 0x248,
-    DISP_CMD_SPRITE_BLOCK_RELEASE = 0x249,
-    DISP_CMD_SPRITE_BLOCK_OPEN = 0x257,
-    DISP_CMD_SPRITE_BLOCK_CLOSE = 0x258,
-    DISP_CMD_SPRITE_BLOCK_SET_SOURCE_WINDOW = 0x25a,
-    DISP_CMD_SPRITE_BLOCK_GET_SOURCE_WINDOW = 0x25b,
-    DISP_CMD_SPRITE_BLOCK_SET_SCREEN_WINDOW = 0x24a,
-    DISP_CMD_SPRITE_BLOCK_GET_SCREEN_WINDOW = 0x24c,
-    DISP_CMD_SPRITE_BLOCK_SET_FB = 0x24b,
-    DISP_CMD_SPRITE_BLOCK_GET_FB = 0x24d,
-    DISP_CMD_SPRITE_BLOCK_SET_PARA = 0x25c,
-    DISP_CMD_SPRITE_BLOCK_GET_PARA = 0x25d,
-    DISP_CMD_SPRITE_BLOCK_SET_TOP = 0x24e,
-    DISP_CMD_SPRITE_BLOCK_SET_BOTTOM = 0x24f,
-    DISP_CMD_SPRITE_BLOCK_GET_PREV_BLOCK = 0x254,
-    DISP_CMD_SPRITE_BLOCK_GET_NEXT_BLOCK = 0x255,
-    DISP_CMD_SPRITE_BLOCK_GET_PRIO = 0x256,
-
-//----framebuffer----
-	DISP_CMD_FB_REQUEST = 0x280,
-	DISP_CMD_FB_RELEASE = 0x281,
-	DISP_CMD_FB_GET_PARA = 0x282,
-	DISP_CMD_GET_DISP_INIT_PARA = 0x283,
-
-//---for Displayer Test --------
-	DISP_CMD_MEM_REQUEST = 0x2c0,
-	DISP_CMD_MEM_RELASE = 0x2c1,
-	DISP_CMD_MEM_GETADR = 0x2c2,
-	DISP_CMD_MEM_SELIDX = 0x2c3,
-
-	DISP_CMD_SUSPEND = 0x2d0,
-	DISP_CMD_RESUME = 0x2d1,
-
-	DISP_CMD_PRINT_REG = 0x2e0,
-
-//---pwm --------
-    DISP_CMD_PWM_SET_PARA = 0x300,
-    DISP_CMD_PWM_GET_PARA = 0x301,
-}__disp_cmd_t;
-
-#define GET_UMP_SECURE_ID_BUF1 _IOWR('m', 310, unsigned int)
-#define GET_UMP_SECURE_ID_BUF2 _IOWR('m', 311, unsigned int)
-
-#define FBIOGET_LAYER_HDL_0 0x4700
-#define FBIOGET_LAYER_HDL_1 0x4701
-
-#define FBIO_CLOSE 0x4710
-#define FBIO_OPEN 0x4711
-#define FBIO_ALPHA_ON 0x4712
-#define FBIO_ALPHA_OFF 0x4713
-#define FBIOPUT_ALPHA_VALUE 0x4714
-
-#define FBIO_DISPLAY_SCREEN0_ONLY 0x4720
-#define FBIO_DISPLAY_SCREEN1_ONLY 0x4721
-#define FBIO_DISPLAY_TWO_SAME_SCREEN_TB 0x4722
-#define FBIO_DISPLAY_TWO_DIFF_SCREEN_SAME_CONTENTS 0x4723
-
-#endif
diff --git a/include/linux/drv_display_sunxi.h b/include/linux/drv_display_sunxi.h
new file mode 100644
index 0000000..e8d8795
--- /dev/null
+++ b/include/linux/drv_display_sunxi.h
@@ -0,0 +1,816 @@
+/*
+ * include/linux/drv_display_sun4i.h
+ *
+ * (C) Copyright 2007-2012
+ * Allwinner Technology Co., Ltd. <www.allwinnertech.com>
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.	 See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+
+#ifndef __DRV_DISPLAY_H__
+#define __DRV_DISPLAY_H__
+
+#define __bool signed char
+
+typedef struct {__u8  alpha;__u8 red;__u8 green; __u8 blue; }__disp_color_t;
+typedef struct {__s32 x; __s32 y; __u32 width; __u32 height;}__disp_rect_t;
+typedef struct {__u32 width;__u32 height;                   }__disp_rectsz_t;
+typedef struct {__s32 x; __s32 y;                           }__disp_pos_t;
+
+
+typedef enum
+{
+    DISP_FORMAT_1BPP        =0x0,
+    DISP_FORMAT_2BPP        =0x1,
+    DISP_FORMAT_4BPP        =0x2,
+    DISP_FORMAT_8BPP        =0x3,
+    DISP_FORMAT_RGB655      =0x4,
+    DISP_FORMAT_RGB565      =0x5,
+    DISP_FORMAT_RGB556      =0x6,
+    DISP_FORMAT_ARGB1555    =0x7,
+    DISP_FORMAT_RGBA5551    =0x8,
+    DISP_FORMAT_ARGB888     =0x9,//alpha padding to 0xff
+    DISP_FORMAT_ARGB8888    =0xa,
+    DISP_FORMAT_RGB888      =0xb,
+    DISP_FORMAT_ARGB4444    =0xc,
+
+    DISP_FORMAT_YUV444      =0x10,
+    DISP_FORMAT_YUV422      =0x11,
+    DISP_FORMAT_YUV420      =0x12,
+    DISP_FORMAT_YUV411      =0x13,
+    DISP_FORMAT_CSIRGB      =0x14,
+}__disp_pixel_fmt_t;
+
+
+typedef enum
+{
+    DISP_MOD_INTERLEAVED        =0x1,   //interleaved,1个地址
+    DISP_MOD_NON_MB_PLANAR      =0x0,   //无宏块平面模式,3个地址,RGB/YUV每个channel分别存放
+    DISP_MOD_NON_MB_UV_COMBINED =0x2,   //无宏块UV打包模式,2个地址,Y和UV分别存放
+    DISP_MOD_MB_PLANAR          =0x4,   //宏块平面模式,3个地址,RGB/YUV每个channel分别存放
+    DISP_MOD_MB_UV_COMBINED     =0x6,   //宏块UV打包模式 ,2个地址,Y和UV分别存放
+}__disp_pixel_mod_t;
+
+typedef enum
+{
+//for interleave argb8888
+    DISP_SEQ_ARGB   =0x0,//A在高位
+    DISP_SEQ_BGRA   =0x2,
+
+//for nterleaved yuv422
+    DISP_SEQ_UYVY   =0x3,
+    DISP_SEQ_YUYV   =0x4,
+    DISP_SEQ_VYUY   =0x5,
+    DISP_SEQ_YVYU   =0x6,
+
+//for interleaved yuv444
+    DISP_SEQ_AYUV   =0x7,
+    DISP_SEQ_VUYA   =0x8,
+
+//for uv_combined yuv420
+    DISP_SEQ_UVUV   =0x9,
+    DISP_SEQ_VUVU   =0xa,
+
+//for 16bpp rgb
+    DISP_SEQ_P10    = 0xd,//p1在高位
+    DISP_SEQ_P01    = 0xe,//p0在高位
+
+//for planar format or 8bpp rgb
+    DISP_SEQ_P3210  = 0xf,//p3在高位
+    DISP_SEQ_P0123  = 0x10,//p0在高位
+
+//for 4bpp rgb
+    DISP_SEQ_P76543210  = 0x11,
+    DISP_SEQ_P67452301  = 0x12,
+    DISP_SEQ_P10325476  = 0x13,
+    DISP_SEQ_P01234567  = 0x14,
+
+//for 2bpp rgb
+    DISP_SEQ_2BPP_BIG_BIG       = 0x15,//15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0
+    DISP_SEQ_2BPP_BIG_LITTER    = 0x16,//12,13,14,15,8,9,10,11,4,5,6,7,0,1,2,3
+    DISP_SEQ_2BPP_LITTER_BIG    = 0x17,//3,2,1,0,7,6,5,4,11,10,9,8,15,14,13,12
+    DISP_SEQ_2BPP_LITTER_LITTER = 0x18,//0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
+
+//for 1bpp rgb
+    DISP_SEQ_1BPP_BIG_BIG       = 0x19,//31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0
+    DISP_SEQ_1BPP_BIG_LITTER    = 0x1a,//24,25,26,27,28,29,30,31,16,17,18,19,20,21,22,23,8,9,10,11,12,13,14,15,0,1,2,3,4,5,6,7
+    DISP_SEQ_1BPP_LITTER_BIG    = 0x1b,//7,6,5,4,3,2,1,0,15,14,13,12,11,10,9,8,23,22,21,20,19,18,17,16,31,30,29,28,27,26,25,24
+    DISP_SEQ_1BPP_LITTER_LITTER = 0x1c,//0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31
+}__disp_pixel_seq_t;
+
+typedef enum
+{
+    DISP_3D_SRC_MODE_TB = 0x0,//top bottom
+    DISP_3D_SRC_MODE_FP = 0x1,//frame packing
+    DISP_3D_SRC_MODE_SSF = 0x2,//side by side full
+    DISP_3D_SRC_MODE_SSH = 0x3,//side by side half
+    DISP_3D_SRC_MODE_LI = 0x4,//line interleaved
+}__disp_3d_src_mode_t;
+
+typedef enum
+{
+    DISP_3D_OUT_MODE_CI_1 = 0x5,//column interlaved 1
+    DISP_3D_OUT_MODE_CI_2 = 0x6,//column interlaved 2
+    DISP_3D_OUT_MODE_CI_3 = 0x7,//column interlaved 3
+    DISP_3D_OUT_MODE_CI_4 = 0x8,//column interlaved 4
+    DISP_3D_OUT_MODE_LIRGB = 0x9,//line interleaved rgb
+
+    DISP_3D_OUT_MODE_TB = 0x0,//top bottom
+    DISP_3D_OUT_MODE_FP = 0x1,//frame packing
+    DISP_3D_OUT_MODE_SSF = 0x2,//side by side full
+    DISP_3D_OUT_MODE_SSH = 0x3,//side by side half
+    DISP_3D_OUT_MODE_LI = 0x4,//line interleaved
+    DISP_3D_OUT_MODE_FA = 0xa,//field alternative
+}__disp_3d_out_mode_t;
+
+typedef enum
+{
+    DISP_BT601  = 0,
+    DISP_BT709  = 1,
+    DISP_YCC    = 2,
+    DISP_VXYCC  = 3,
+}__disp_cs_mode_t;
+
+typedef enum
+{
+    DISP_COLOR_RANGE_16_255 = 0,
+    DISP_COLOR_RANGE_0_255 = 1,
+    DISP_COLOR_RANGE_16_235 = 2,
+}__disp_color_range_t;
+
+typedef enum
+{
+    DISP_OUTPUT_TYPE_NONE   = 0,
+    DISP_OUTPUT_TYPE_LCD    = 1,
+    DISP_OUTPUT_TYPE_TV     = 2,
+    DISP_OUTPUT_TYPE_HDMI   = 4,
+    DISP_OUTPUT_TYPE_VGA    = 8,
+}__disp_output_type_t;
+
+typedef enum
+{
+    DISP_TV_NONE    = 0,
+    DISP_TV_CVBS    = 1,
+    DISP_TV_YPBPR   = 2,
+    DISP_TV_SVIDEO  = 4,
+}__disp_tv_output_t;
+
+typedef enum
+{
+    DISP_TV_MOD_480I                = 0,
+    DISP_TV_MOD_576I                = 1,
+    DISP_TV_MOD_480P                = 2,
+    DISP_TV_MOD_576P                = 3,
+    DISP_TV_MOD_720P_50HZ           = 4,
+    DISP_TV_MOD_720P_60HZ           = 5,
+    DISP_TV_MOD_1080I_50HZ          = 6,
+    DISP_TV_MOD_1080I_60HZ          = 7,
+    DISP_TV_MOD_1080P_24HZ          = 8,
+    DISP_TV_MOD_1080P_50HZ          = 9,
+    DISP_TV_MOD_1080P_60HZ          = 0xa,
+    DISP_TV_MOD_1080P_24HZ_3D_FP    = 0x17,
+    DISP_TV_MOD_720P_50HZ_3D_FP     = 0x18,
+    DISP_TV_MOD_720P_60HZ_3D_FP     = 0x19,
+    DISP_TV_MOD_PAL                 = 0xb,
+    DISP_TV_MOD_PAL_SVIDEO          = 0xc,
+    DISP_TV_MOD_NTSC                = 0xe,
+    DISP_TV_MOD_NTSC_SVIDEO         = 0xf,
+    DISP_TV_MOD_PAL_M               = 0x11,
+    DISP_TV_MOD_PAL_M_SVIDEO        = 0x12,
+    DISP_TV_MOD_PAL_NC              = 0x14,
+    DISP_TV_MOD_PAL_NC_SVIDEO       = 0x15,
+    DISP_TV_MODE_NUM               = 0x1a,
+}__disp_tv_mode_t;
+
+typedef enum
+{
+    DISP_TV_DAC_SRC_COMPOSITE = 0,
+    DISP_TV_DAC_SRC_LUMA = 1,
+    DISP_TV_DAC_SRC_CHROMA = 2,
+    DISP_TV_DAC_SRC_Y = 4,
+    DISP_TV_DAC_SRC_PB = 5,
+    DISP_TV_DAC_SRC_PR = 6,
+    DISP_TV_DAC_SRC_NONE = 7,
+}__disp_tv_dac_source;
+
+typedef enum
+{
+    DISP_VGA_H1680_V1050    = 0,
+    DISP_VGA_H1440_V900     = 1,
+    DISP_VGA_H1360_V768     = 2,
+    DISP_VGA_H1280_V1024    = 3,
+    DISP_VGA_H1024_V768     = 4,
+    DISP_VGA_H800_V600      = 5,
+    DISP_VGA_H640_V480      = 6,
+    DISP_VGA_H1440_V900_RB  = 7,//not support yet
+    DISP_VGA_H1680_V1050_RB = 8,//not support yet
+    DISP_VGA_H1920_V1080_RB = 9,
+    DISP_VGA_H1920_V1080    = 0xa,
+    DISP_VGA_H1280_V720     = 0xb,
+    DISP_VGA_MODE_NUM       = 0xc,
+}__disp_vga_mode_t;
+
+
+typedef enum
+{
+    DISP_LCDC_SRC_DE_CH1    = 0,
+    DISP_LCDC_SRC_DE_CH2    = 1,
+    DISP_LCDC_SRC_DMA       = 2,
+    DISP_LCDC_SRC_WHITE     = 3,
+    DISP_LCDC_SRC_BLACK     = 4,
+    DISP_LCDC_SRC_BLUT      = 5,
+}__disp_lcdc_src_t;
+
+typedef enum
+{
+    DISP_LCD_BRIGHT_LEVEL0  = 0,
+    DISP_LCD_BRIGHT_LEVEL1  = 1,
+    DISP_LCD_BRIGHT_LEVEL2  = 2,
+    DISP_LCD_BRIGHT_LEVEL3  = 3,
+    DISP_LCD_BRIGHT_LEVEL4  = 4,
+    DISP_LCD_BRIGHT_LEVEL5  = 5,
+    DISP_LCD_BRIGHT_LEVEL6  = 6,
+    DISP_LCD_BRIGHT_LEVEL7  = 7,
+    DISP_LCD_BRIGHT_LEVEL8  = 8,
+    DISP_LCD_BRIGHT_LEVEL9  = 9,
+    DISP_LCD_BRIGHT_LEVEL10 = 0xa,
+    DISP_LCD_BRIGHT_LEVEL11 = 0xb,
+    DISP_LCD_BRIGHT_LEVEL12 = 0xc,
+    DISP_LCD_BRIGHT_LEVEL13 = 0xd,
+    DISP_LCD_BRIGHT_LEVEL14 = 0xe,
+    DISP_LCD_BRIGHT_LEVEL15 = 0xf,
+}__disp_lcd_bright_t;
+
+typedef enum
+{
+    DISP_LAYER_WORK_MODE_NORMAL     = 0,    //normal work mode
+    DISP_LAYER_WORK_MODE_PALETTE    = 1,    //palette work mode
+    DISP_LAYER_WORK_MODE_INTER_BUF  = 2,    //internal frame buffer work mode
+    DISP_LAYER_WORK_MODE_GAMMA      = 3,    //gamma correction work mode
+    DISP_LAYER_WORK_MODE_SCALER     = 4,    //scaler work mode
+}__disp_layer_work_mode_t;
+
+typedef enum
+{
+    DISP_VIDEO_NATUAL       = 0,
+    DISP_VIDEO_SOFT         = 1,
+    DISP_VIDEO_VERYSOFT     = 2,
+    DISP_VIDEO_SHARP        = 3,
+    DISP_VIDEO_VERYSHARP    = 4
+}__disp_video_smooth_t;
+
+typedef enum
+{
+    DISP_HWC_MOD_H32_V32_8BPP = 0,
+    DISP_HWC_MOD_H64_V64_2BPP = 1,
+    DISP_HWC_MOD_H64_V32_4BPP = 2,
+    DISP_HWC_MOD_H32_V64_4BPP = 3,
+}__disp_hwc_mode_t;
+
+typedef enum
+{
+    DISP_EXIT_MODE_CLEAN_ALL    = 0,
+    DISP_EXIT_MODE_CLEAN_PARTLY = 1,//only clean interrupt temply
+}__disp_exit_mode_t;
+
+
+typedef enum//only for debug!!!
+{
+    DISP_REG_SCALER0 = 0,
+    DISP_REG_SCALER1 = 1,
+    DISP_REG_IMAGE0 = 2,
+    DISP_REG_IMAGE1 = 3,
+    DISP_REG_LCDC0 = 4,
+    DISP_REG_LCDC1 = 5,
+    DISP_REG_TVEC0 = 6,
+    DISP_REG_TVEC1 = 7,
+    DISP_REG_CCMU = 8,
+    DISP_REG_PIOC = 9,
+    DISP_REG_PWM = 10,
+}__disp_reg_index_t;
+
+
+typedef struct
+{
+    __u32                   addr[3];    // frame buffer的内容地址，对于rgb类型，只有addr[0]有效
+    __disp_rectsz_t         size;//单位是pixel
+    __disp_pixel_fmt_t      format;
+    __disp_pixel_seq_t      seq;
+    __disp_pixel_mod_t      mode;
+    __bool                  br_swap;    // blue red color swap flag, FALSE:RGB; TRUE:BGR,only used in rgb format
+    __disp_cs_mode_t        cs_mode;    //color space
+    __bool                  b_trd_src; //if 3d source, used for scaler mode layer
+    __disp_3d_src_mode_t    trd_mode; //source 3d mode, used for scaler mode layer
+    __u32                   trd_right_addr[3];//used when in frame packing 3d mode
+}__disp_fb_t;
+
+typedef struct
+{
+    __disp_layer_work_mode_t    mode;       //layer work mode
+    __bool                      b_from_screen;
+    __u8                        pipe;       //layer pipe,0/1,if in scaler mode, scaler0 must be pipe0, scaler1 must be pipe1
+    __u8                        prio;       //layer priority,can get layer prio,but never set layer prio,从底至顶,优先级由低至高
+    __bool                      alpha_en;   //layer global alpha enable
+    __u16                       alpha_val;  //layer global alpha value
+    __bool                      ck_enable;  //layer color key enable
+    __disp_rect_t               src_win;    // framebuffer source window,only care x,y if is not scaler mode
+    __disp_rect_t               scn_win;    // screen window
+    __disp_fb_t                 fb;         //framebuffer
+    __bool                      b_trd_out;  //if output 3d mode, used for scaler mode layer
+    __disp_3d_out_mode_t        out_trd_mode; //output 3d mode, used for scaler mode layer
+}__disp_layer_info_t;
+
+typedef struct
+{
+    __disp_color_t   ck_max;
+    __disp_color_t   ck_min;
+    __u32             red_match_rule;//0/1:always match; 2:match if min<=color<=max; 3:match if color>max or color<min
+    __u32             green_match_rule;//0/1:always match; 2:match if min<=color<=max; 3:match if color>max or color<min
+    __u32             blue_match_rule;//0/1:always match; 2:match if min<=color<=max; 3:match if color>max or color<min
+}__disp_colorkey_t;
+
+typedef struct
+{
+    __s32   id;
+    __u32   addr[3];
+    __u32   addr_right[3];//used when in frame packing 3d mode
+    __bool  interlace;
+    __bool  top_field_first;
+    __u32   frame_rate; // *FRAME_RATE_BASE(现在定为1000)
+    __u32   flag_addr;//dit maf flag address
+    __u32   flag_stride;//dit maf flag line stride
+    __bool  maf_valid;
+    __bool  pre_frame_valid;
+}__disp_video_fb_t;
+
+typedef struct
+{
+    __bool maf_enable;
+    __bool pre_frame_enable;
+}__disp_dit_info_t;
+
+typedef struct
+{
+    __disp_hwc_mode_t     pat_mode;
+    __u32                 addr;
+}__disp_hwc_pattern_t;
+
+typedef struct
+{
+    __disp_fb_t     input_fb;
+    __disp_rect_t   source_regn;
+    __disp_fb_t     output_fb;
+    //__disp_rect_t   out_regn;
+}__disp_scaler_para_t;
+
+typedef struct
+{
+    __disp_fb_t       fb;
+    __disp_rect_t   src_win;//source region,only care x,y because of not scaler
+    __disp_rect_t   scn_win;// sceen region
+}__disp_sprite_block_para_t;
+
+typedef struct
+{
+    __disp_rectsz_t screen_size;//used when the screen is not displaying on any output device(lcd/hdmi/vga/tv)
+    __disp_fb_t     output_fb;
+}__disp_capture_screen_para_t;
+
+typedef struct
+{
+    __s32 (*Hdmi_open)(void);
+    __s32 (*Hdmi_close)(void);
+    __s32 (*hdmi_set_mode)(__disp_tv_mode_t mode);
+    __s32 (*hdmi_mode_support)(__disp_tv_mode_t mode);
+    __s32 (*hdmi_get_HPD_status)(void);
+    __s32 (*hdmi_set_pll)(__u32 pll, __u32 clk);
+}__disp_hdmi_func;
+
+typedef struct
+{
+	__u32   lcd_x;
+	__u32   lcd_y;
+	__u32   lcd_dclk_freq;
+	__u32   lcd_pwm_not_used;
+	__u32   lcd_pwm_ch;
+	__u32   lcd_pwm_freq;
+	__u32   lcd_pwm_pol;
+	__u32   lcd_srgb;
+	__u32   lcd_swap;
+
+	__u32   lcd_if; //0:hv(sync+de); 1:8080; 2:ttl; 3:lvds
+
+	__u32   lcd_uf;
+	__u32   lcd_vt;
+	__u32   lcd_ht;
+	__u32   lcd_vbp;
+	__u32   lcd_hbp;
+
+	__u32   lcd_hv_if;
+	__u32   lcd_hv_smode;
+	__u32   lcd_hv_s888_if;
+	__u32   lcd_hv_syuv_if;
+	__u32   lcd_hv_vspw;
+	__u32   lcd_hv_hspw;
+	__u32   lcd_hv_lde_used;
+	__u32   lcd_hv_lde_iovalue;
+
+	__u32   lcd_ttl_stvh;
+	__u32   lcd_ttl_stvdl;
+	__u32   lcd_ttl_stvdp;
+	__u32   lcd_ttl_ckvt;
+	__u32   lcd_ttl_ckvh;
+	__u32   lcd_ttl_ckvd;
+	__u32   lcd_ttl_oevt;
+	__u32   lcd_ttl_oevh;
+	__u32   lcd_ttl_oevd;
+	__u32   lcd_ttl_sthh;
+	__u32   lcd_ttl_sthd;
+	__u32   lcd_ttl_oehh;
+	__u32   lcd_ttl_oehd;
+	__u32   lcd_ttl_revd;
+	__u32   lcd_ttl_datarate;
+	__u32   lcd_ttl_revsel;
+	__u32   lcd_ttl_datainv_en;
+	__u32   lcd_ttl_datainv_sel;
+
+	__u32   lcd_lvds_ch;        // 0: single channel; 1:dual channel
+	__u32   lcd_lvds_mode;      // 0:NS mode; 1:JEIDA mode
+	__u32	lcd_lvds_bitwidth;  // 0:24bit; 1:18bit
+	__u32   lcd_lvds_io_cross;	// 0:normal; 1:pn cross
+
+	__u32   lcd_cpu_if;//0:18bit; 1:16bit mode0; 2:16bit mode1; 3:16bit mode2; 4:16bit mode3; 5:9bit; 6:8bit 256K; 7:8bit 65K
+	__u32   lcd_cpu_da;
+	__u32   lcd_frm;
+
+	__u32   lcd_io_cfg0;
+	__u32   lcd_io_cfg1;
+	__u32   lcd_io_strength;
+
+	__u32   lcd_gamma_correction_en;
+	__u32   lcd_gamma_tbl[256];
+
+	__u32   lcd_hv_srgb_seq0;
+	__u32   lcd_hv_srgb_seq1;
+	__u32   lcd_hv_syuv_seq;
+	__u32   lcd_hv_syuv_fdly;
+
+	__u32   port_index;
+	__u32   start_delay;//not need to config for user
+	__u32   tcon_index; //not need to config for user
+}__panel_para_t;
+
+typedef struct
+{
+	__u32	pixel_clk;//khz
+	__u32	hor_pixels;
+	__u32	ver_pixels;
+	__u32	hor_total_time;
+	__u32	hor_front_porch;
+	__u32	hor_sync_time;
+	__u32	hor_back_porch;
+	__u32	ver_total_time;
+	__u32	ver_front_porch;
+	__u32	ver_sync_time;
+	__u32	ver_back_porch;
+}__disp_tcon_timing_t;
+
+typedef struct
+{
+	__u32 base_lcdc0;
+	__u32 base_lcdc1;
+	__u32 base_pioc;
+	__u32 base_ccmu;
+	__u32 base_pwm;
+}__reg_bases_t;
+
+typedef void (*LCD_FUNC) (__u32 sel);
+typedef struct lcd_function
+{
+    LCD_FUNC func;
+    __u32 delay;//ms
+}__lcd_function_t;
+
+typedef struct lcd_flow
+{
+    __lcd_function_t func[5];
+    __u32 func_num;
+}__lcd_flow_t;
+
+typedef struct
+{
+    void (*cfg_panel_info)(__panel_para_t * info);
+    __s32 (*cfg_open_flow)(__u32 sel);
+    __s32 (*cfg_close_flow)(__u32 sel);
+    __s32 (*lcd_user_defined_func)(__u32 sel, __u32 para1, __u32 para2, __u32 para3);
+}__lcd_panel_fun_t;
+
+typedef struct
+{
+    __bool enable;
+    __u32 active_state;
+    __u32 duty_ns;
+    __u32 period_ns;
+}__pwm_info_t;
+///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
+
+typedef enum
+{
+    FB_MODE_SCREEN0 = 0,
+    FB_MODE_SCREEN1 = 1,
+    FB_MODE_DUAL_SAME_SCREEN_TB = 2,//two screen, top buffer for screen0, bottom buffer for screen1
+    FB_MODE_DUAL_DIFF_SCREEN_SAME_CONTENTS = 3,//two screen, they have same contents;
+}__fb_mode_t;
+
+typedef struct
+{
+	__fb_mode_t                 fb_mode;
+	__disp_layer_work_mode_t    mode;
+	__u32                       buffer_num;
+	__u32                       width;
+	__u32                       height;
+
+	__u32                       output_width;//used when scaler mode
+	__u32                       output_height;//used when scaler mode
+
+	__u32                       primary_screen_id;//used when FB_MODE_DUAL_DIFF_SCREEN_SAME_CONTENTS
+	__u32                       aux_output_width;//used when FB_MODE_DUAL_DIFF_SCREEN_SAME_CONTENTS
+	__u32                       aux_output_height;//used when FB_MODE_DUAL_DIFF_SCREEN_SAME_CONTENTS
+
+//maybe not used anymore
+	__u32                       line_length;//in byte unit
+	__u32                       smem_len;
+	__u32                       ch1_offset;//use when PLANAR or UV_COMBINED mode
+	__u32                       ch2_offset;//use when PLANAR mode
+}__disp_fb_create_para_t;
+
+typedef enum
+{
+    DISP_INIT_MODE_SCREEN0 = 0,//fb0 for screen0
+    DISP_INIT_MODE_SCREEN1 = 1,//fb0 for screen1
+    DISP_INIT_MODE_TWO_DIFF_SCREEN = 2,//fb0 for screen0 and fb1 for screen1
+    DISP_INIT_MODE_TWO_SAME_SCREEN = 3,//fb0(up buffer for screen0, down buffer for screen1)
+    DISP_INIT_MODE_TWO_DIFF_SCREEN_SAME_CONTENTS = 4,//fb0 for two different screen(screen0 layer is normal layer, screen1 layer is scaler layer);
+}__disp_init_mode_t;
+
+
+typedef struct
+{
+    __bool                  b_init;
+    __disp_init_mode_t      disp_mode;//0:single screen0(fb0); 1:single screen1(fb0);  2:dual diff screen(fb0, fb1); 3:dual same screen(fb0 up and down); 4:dual diff screen same contents(fb0)
+
+    //for screen0 and screen1
+    __disp_output_type_t    output_type[2];
+    __disp_tv_mode_t        tv_mode[2];
+    __disp_vga_mode_t       vga_mode[2];
+
+    //for fb0 and fb1
+    __u32                   buffer_num[2];
+    __bool                  scaler_mode[2];
+    __disp_pixel_fmt_t      format[2];
+    __disp_pixel_seq_t      seq[2];
+    __bool                  br_swap[2];
+}__disp_init_t;
+
+
+typedef enum tag_DISP_CMD
+{
+//----disp global----
+    DISP_CMD_RESERVE0 = 0x00,
+    DISP_CMD_RESERVE1 = 0x01,
+    DISP_CMD_SET_BKCOLOR = 0x3f,//fail when the value is 0x02 in linux,why???
+    DISP_CMD_GET_BKCOLOR = 0x03,
+    DISP_CMD_SET_COLORKEY = 0x04,
+    DISP_CMD_GET_COLORKEY = 0x05,
+    DISP_CMD_SET_PALETTE_TBL = 0x06,
+    DISP_CMD_GET_PALETTE_TBL = 0x07,
+    DISP_CMD_SCN_GET_WIDTH = 0x08,
+    DISP_CMD_SCN_GET_HEIGHT = 0x09,
+    DISP_CMD_GET_OUTPUT_TYPE = 0x0a,
+    DISP_CMD_SET_EXIT_MODE = 0x0c,
+    DISP_CMD_SET_GAMMA_TABLE = 0x0d,
+    DISP_CMD_GAMMA_CORRECTION_ON = 0x0e,
+    DISP_CMD_GAMMA_CORRECTION_OFF = 0x0f,
+    DISP_CMD_START_CMD_CACHE =0x10,
+    DISP_CMD_EXECUTE_CMD_AND_STOP_CACHE = 0x11,
+    DISP_CMD_SET_BRIGHT = 0x12,
+    DISP_CMD_SET_CONTRAST = 0x13,
+    DISP_CMD_SET_SATURATION = 0x14,
+    DISP_CMD_GET_BRIGHT = 0x16,
+    DISP_CMD_GET_CONTRAST = 0x17,
+    DISP_CMD_GET_SATURATION = 0x18,
+    DISP_CMD_ENHANCE_ON = 0x1a,
+    DISP_CMD_ENHANCE_OFF = 0x1b,
+    DISP_CMD_GET_ENHANCE_EN = 0x1c,
+    DISP_CMD_CLK_ON = 0x1d,
+    DISP_CMD_CLK_OFF = 0x1e,
+    DISP_CMD_SET_SCREEN_SIZE = 0x1f,//when the screen is not used to display(lcd/tv/vga/hdmi) directly, maybe capture the screen and scaler to dram, or as a layer of another screen
+    DISP_CMD_CAPTURE_SCREEN = 0x20,//caputre screen and scaler to dram
+    DISP_CMD_DE_FLICKER_ON = 0x21,
+    DISP_CMD_DE_FLICKER_OFF = 0x22,
+    DISP_CMD_SET_HUE=0x23,
+    DISP_CMD_GET_HUE=0x24,
+    DISP_CMD_DRC_OFF = 0x25,
+    DISP_CMD_GET_DRC_EN = 0x26,
+    DISP_CMD_DE_FLICKER_SET_WINDOW = 0x27,
+    DISP_CMD_DRC_SET_WINDOW = 0x28,
+    DISP_CMD_DRC_ON = 0x29,
+    DISP_CMD_GET_DE_FLICKER_EN = 0x2a,
+
+//----layer----
+    DISP_CMD_LAYER_REQUEST = 0x40,
+    DISP_CMD_LAYER_RELEASE = 0x41,
+    DISP_CMD_LAYER_OPEN = 0x42,
+    DISP_CMD_LAYER_CLOSE = 0x43,
+    DISP_CMD_LAYER_SET_FB = 0x44,
+    DISP_CMD_LAYER_GET_FB = 0x45,
+    DISP_CMD_LAYER_SET_SRC_WINDOW = 0x46,
+    DISP_CMD_LAYER_GET_SRC_WINDOW = 0x47,
+    DISP_CMD_LAYER_SET_SCN_WINDOW = 0x48,
+    DISP_CMD_LAYER_GET_SCN_WINDOW = 0x49,
+    DISP_CMD_LAYER_SET_PARA = 0x4a,
+    DISP_CMD_LAYER_GET_PARA = 0x4b,
+    DISP_CMD_LAYER_ALPHA_ON = 0x4c,
+    DISP_CMD_LAYER_ALPHA_OFF = 0x4d,
+    DISP_CMD_LAYER_GET_ALPHA_EN = 0x4e,
+    DISP_CMD_LAYER_SET_ALPHA_VALUE = 0x4f,
+    DISP_CMD_LAYER_GET_ALPHA_VALUE = 0x50,
+    DISP_CMD_LAYER_CK_ON = 0x51,
+    DISP_CMD_LAYER_CK_OFF = 0x52,
+    DISP_CMD_LAYER_GET_CK_EN = 0x53,
+    DISP_CMD_LAYER_SET_PIPE = 0x54,
+    DISP_CMD_LAYER_GET_PIPE = 0x55,
+    DISP_CMD_LAYER_TOP = 0x56,
+    DISP_CMD_LAYER_BOTTOM = 0x57,
+    DISP_CMD_LAYER_GET_PRIO = 0x58,
+    DISP_CMD_LAYER_SET_SMOOTH = 0x59,
+    DISP_CMD_LAYER_GET_SMOOTH = 0x5a,
+    DISP_CMD_LAYER_SET_BRIGHT = 0x5b,//亮度
+    DISP_CMD_LAYER_SET_CONTRAST = 0x5c,//对比度
+    DISP_CMD_LAYER_SET_SATURATION = 0x5d,//饱和度
+    DISP_CMD_LAYER_SET_HUE = 0x5e,//色调,色度
+    DISP_CMD_LAYER_GET_BRIGHT = 0x5f,
+    DISP_CMD_LAYER_GET_CONTRAST = 0x60,
+    DISP_CMD_LAYER_GET_SATURATION = 0x61,
+    DISP_CMD_LAYER_GET_HUE = 0x62,
+    DISP_CMD_LAYER_ENHANCE_ON = 0x63,
+    DISP_CMD_LAYER_ENHANCE_OFF = 0x64,
+    DISP_CMD_LAYER_GET_ENHANCE_EN = 0x65,
+    DISP_CMD_LAYER_VPP_ON = 0x67,
+    DISP_CMD_LAYER_VPP_OFF = 0x68,
+    DISP_CMD_LAYER_GET_VPP_EN = 0x69,
+    DISP_CMD_LAYER_SET_LUMA_SHARP_LEVEL = 0x6a,
+    DISP_CMD_LAYER_GET_LUMA_SHARP_LEVEL = 0x6b,
+    DISP_CMD_LAYER_SET_CHROMA_SHARP_LEVEL = 0x6c,
+    DISP_CMD_LAYER_GET_CHROMA_SHARP_LEVEL = 0x6d,
+    DISP_CMD_LAYER_SET_WHITE_EXTEN_LEVEL = 0x6e,
+    DISP_CMD_LAYER_GET_WHITE_EXTEN_LEVEL = 0x6f,
+    DISP_CMD_LAYER_SET_BLACK_EXTEN_LEVEL = 0x70,
+    DISP_CMD_LAYER_GET_BLACK_EXTEN_LEVEL = 0x71,
+
+//----scaler----
+    DISP_CMD_SCALER_REQUEST = 0x80,
+    DISP_CMD_SCALER_RELEASE = 0x81,
+    DISP_CMD_SCALER_EXECUTE = 0x82,
+
+//----hwc----
+    DISP_CMD_HWC_OPEN = 0xc0,
+    DISP_CMD_HWC_CLOSE = 0xc1,
+    DISP_CMD_HWC_SET_POS = 0xc2,
+    DISP_CMD_HWC_GET_POS = 0xc3,
+    DISP_CMD_HWC_SET_FB = 0xc4,
+    DISP_CMD_HWC_SET_PALETTE_TABLE = 0xc5,
+
+//----video----
+    DISP_CMD_VIDEO_START = 0x100,
+    DISP_CMD_VIDEO_STOP = 0x101,
+    DISP_CMD_VIDEO_SET_FB = 0x102,
+    DISP_CMD_VIDEO_GET_FRAME_ID = 0x103,
+    DISP_CMD_VIDEO_GET_DIT_INFO = 0x104,
+
+//----lcd----
+    DISP_CMD_LCD_ON = 0x140,
+    DISP_CMD_LCD_OFF = 0x141,
+    DISP_CMD_LCD_SET_BRIGHTNESS = 0x142,
+    DISP_CMD_LCD_GET_BRIGHTNESS = 0x143,
+    DISP_CMD_LCD_CPUIF_XY_SWITCH = 0x146,
+    DISP_CMD_LCD_CHECK_OPEN_FINISH = 0x14a,
+    DISP_CMD_LCD_CHECK_CLOSE_FINISH = 0x14b,
+    DISP_CMD_LCD_SET_SRC = 0x14c,
+    DISP_CMD_LCD_USER_DEFINED_FUNC = 0x14d,
+
+//----tv----
+    DISP_CMD_TV_ON = 0x180,
+    DISP_CMD_TV_OFF = 0x181,
+    DISP_CMD_TV_SET_MODE = 0x182,
+    DISP_CMD_TV_GET_MODE = 0x183,
+    DISP_CMD_TV_AUTOCHECK_ON = 0x184,
+    DISP_CMD_TV_AUTOCHECK_OFF = 0x185,
+    DISP_CMD_TV_GET_INTERFACE = 0x186,
+    DISP_CMD_TV_SET_SRC = 0x187,
+    DISP_CMD_TV_GET_DAC_STATUS = 0x188,
+    DISP_CMD_TV_SET_DAC_SOURCE = 0x189,
+    DISP_CMD_TV_GET_DAC_SOURCE = 0x18a,
+
+//----hdmi----
+    DISP_CMD_HDMI_ON = 0x1c0,
+    DISP_CMD_HDMI_OFF = 0x1c1,
+    DISP_CMD_HDMI_SET_MODE = 0x1c2,
+    DISP_CMD_HDMI_GET_MODE = 0x1c3,
+    DISP_CMD_HDMI_SUPPORT_MODE = 0x1c4,
+    DISP_CMD_HDMI_GET_HPD_STATUS = 0x1c5,
+	DISP_CMD_HDMI_SET_SRC = 0x1c6,
+
+//----vga----
+    DISP_CMD_VGA_ON = 0x200,
+    DISP_CMD_VGA_OFF = 0x201,
+    DISP_CMD_VGA_SET_MODE = 0x202,
+    DISP_CMD_VGA_GET_MODE = 0x203,
+	DISP_CMD_VGA_SET_SRC = 0x204,
+
+//----sprite----
+    DISP_CMD_SPRITE_OPEN = 0x240,
+    DISP_CMD_SPRITE_CLOSE = 0x241,
+    DISP_CMD_SPRITE_SET_FORMAT = 0x242,
+    DISP_CMD_SPRITE_GLOBAL_ALPHA_ENABLE = 0x243,
+    DISP_CMD_SPRITE_GLOBAL_ALPHA_DISABLE = 0x244,
+    DISP_CMD_SPRITE_GET_GLOBAL_ALPHA_ENABLE = 0x252,
+    DISP_CMD_SPRITE_SET_GLOBAL_ALPHA_VALUE = 0x245,
+    DISP_CMD_SPRITE_GET_GLOBAL_ALPHA_VALUE = 0x253,
+    DISP_CMD_SPRITE_SET_ORDER = 0x246,
+    DISP_CMD_SPRITE_GET_TOP_BLOCK = 0x250,
+    DISP_CMD_SPRITE_GET_BOTTOM_BLOCK = 0x251,
+    DISP_CMD_SPRITE_SET_PALETTE_TBL = 0x247,
+    DISP_CMD_SPRITE_GET_BLOCK_NUM = 0x259,
+    DISP_CMD_SPRITE_BLOCK_REQUEST = 0x248,
+    DISP_CMD_SPRITE_BLOCK_RELEASE = 0x249,
+    DISP_CMD_SPRITE_BLOCK_OPEN = 0x257,
+    DISP_CMD_SPRITE_BLOCK_CLOSE = 0x258,
+    DISP_CMD_SPRITE_BLOCK_SET_SOURCE_WINDOW = 0x25a,
+    DISP_CMD_SPRITE_BLOCK_GET_SOURCE_WINDOW = 0x25b,
+    DISP_CMD_SPRITE_BLOCK_SET_SCREEN_WINDOW = 0x24a,
+    DISP_CMD_SPRITE_BLOCK_GET_SCREEN_WINDOW = 0x24c,
+    DISP_CMD_SPRITE_BLOCK_SET_FB = 0x24b,
+    DISP_CMD_SPRITE_BLOCK_GET_FB = 0x24d,
+    DISP_CMD_SPRITE_BLOCK_SET_PARA = 0x25c,
+    DISP_CMD_SPRITE_BLOCK_GET_PARA = 0x25d,
+    DISP_CMD_SPRITE_BLOCK_SET_TOP = 0x24e,
+    DISP_CMD_SPRITE_BLOCK_SET_BOTTOM = 0x24f,
+    DISP_CMD_SPRITE_BLOCK_GET_PREV_BLOCK = 0x254,
+    DISP_CMD_SPRITE_BLOCK_GET_NEXT_BLOCK = 0x255,
+    DISP_CMD_SPRITE_BLOCK_GET_PRIO = 0x256,
+
+//----framebuffer----
+	DISP_CMD_FB_REQUEST = 0x280,
+	DISP_CMD_FB_RELEASE = 0x281,
+	DISP_CMD_FB_GET_PARA = 0x282,
+	DISP_CMD_GET_DISP_INIT_PARA = 0x283,
+
+//---for Displayer Test --------
+	DISP_CMD_MEM_REQUEST = 0x2c0,
+	DISP_CMD_MEM_RELASE = 0x2c1,
+	DISP_CMD_MEM_GETADR = 0x2c2,
+	DISP_CMD_MEM_SELIDX = 0x2c3,
+
+	DISP_CMD_SUSPEND = 0x2d0,
+	DISP_CMD_RESUME = 0x2d1,
+
+	DISP_CMD_PRINT_REG = 0x2e0,
+
+//---pwm --------
+    DISP_CMD_PWM_SET_PARA = 0x300,
+    DISP_CMD_PWM_GET_PARA = 0x301,
+}__disP_cmd_t;
+
+
+#define GET_UMP_SECURE_ID_BUF1 _IOWR('m', 310, unsigned int)
+#define GET_UMP_SECURE_ID_BUF2 _IOWR('m', 311, unsigned int)
+
+#define FBIOGET_LAYER_HDL_0 0x4700
+#define FBIOGET_LAYER_HDL_1 0x4701
+
+#define FBIO_CLOSE 0x4710
+#define FBIO_OPEN 0x4711
+#define FBIO_ALPHA_ON 0x4712
+#define FBIO_ALPHA_OFF 0x4713
+#define FBIOPUT_ALPHA_VALUE 0x4714
+
+#define FBIO_DISPLAY_SCREEN0_ONLY 0x4720
+#define FBIO_DISPLAY_SCREEN1_ONLY 0x4721
+#define FBIO_DISPLAY_TWO_SAME_SCREEN_TB 0x4722
+#define FBIO_DISPLAY_TWO_DIFF_SCREEN_SAME_CONTENTS 0x4723
+
+#endif
-- 
1.8.0


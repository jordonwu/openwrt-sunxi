From 5fd4a94475243cbc5ed4992824c012c93696d48a Mon Sep 17 00:00:00 2001
From: Alejandro Mery <amery@geeks.cl>
Date: Tue, 2 Oct 2012 20:02:45 +0200
Subject: [PATCH 768/944] net: sun4i-wemac: fix race in wemac_rx() correctly

thanks hno
---
 drivers/net/ethernet/sun4i/sun4i_wemac.c | 15 +++++++++------
 1 file changed, 9 insertions(+), 6 deletions(-)

diff --git a/drivers/net/ethernet/sun4i/sun4i_wemac.c b/drivers/net/ethernet/sun4i/sun4i_wemac.c
index f3a3855..d5811b6 100644
--- a/drivers/net/ethernet/sun4i/sun4i_wemac.c
+++ b/drivers/net/ethernet/sun4i/sun4i_wemac.c
@@ -1258,12 +1258,11 @@ wemac_rx(struct net_device *dev)
 
 	/* Check packet ready or not */
 	do {
-
-		/* dummy read: lundman */
+		/* race warning: the first packet might arrive with
+		   the interrupts disabled, but the second will fix
+		   it */
 		Rxcount = readl(db->emac_vbase + EMAC_RX_FBC_REG);
 
-			Rxcount = readl(db->emac_vbase + EMAC_RX_FBC_REG);
-
 		if (netif_msg_rx_status(db))
 			dev_dbg(db->dev, "RXCount: %x\n", Rxcount);
 
@@ -1282,13 +1281,17 @@ wemac_rx(struct net_device *dev)
 			reg_val &= (~(0x1<<2));
 			writel(reg_val, db->emac_vbase + EMAC_RX_CTL_REG);
 		}
-		if(!Rxcount){
 
+		if (!Rxcount) {
 			emacrx_completed_flag = 1;
 			reg_val = readl(db->emac_vbase + EMAC_INT_CTL_REG);
 			reg_val |= (0xf<<0) | (0x01<<8);
 			writel(reg_val, db->emac_vbase + EMAC_INT_CTL_REG);
-			return;
+
+			/* had one stuck? */
+			Rxcount = readl(db->emac_vbase + EMAC_RX_FBC_REG);
+			if (!Rxcount)
+				return;
 		}
 
 		reg_val = readl(db->emac_vbase + EMAC_RX_IO_DATA_REG);
-- 
1.8.0


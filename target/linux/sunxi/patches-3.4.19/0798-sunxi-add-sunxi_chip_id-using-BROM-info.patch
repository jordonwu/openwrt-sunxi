From 1b3a0303ad247865dfb5fe02c575e46449efbfb0 Mon Sep 17 00:00:00 2001
From: Alejandro Mery <amery@geeks.cl>
Date: Fri, 12 Oct 2012 18:32:02 +0200
Subject: [PATCH 798/944] sunxi: add sunxi_chip_id(), using BROM info

and call sunxi_pr_chip_id() instead of sunxi_pr_brom() to printk the finding
---
 arch/arm/mach-sun4i/core.c              |  2 +-
 arch/arm/mach-sun5i/core.c              |  2 +-
 arch/arm/plat-sunxi/core.c              | 62 +++++++++++++++++++++++++--------
 arch/arm/plat-sunxi/include/plat/core.h |  5 ++-
 4 files changed, 54 insertions(+), 17 deletions(-)

diff --git a/arch/arm/mach-sun4i/core.c b/arch/arm/mach-sun4i/core.c
index 4a67e8c..071110f 100644
--- a/arch/arm/mach-sun4i/core.c
+++ b/arch/arm/mach-sun4i/core.c
@@ -78,7 +78,7 @@ void __init sw_core_map_io(void)
 {
 	iotable_init(sw_io_desc, ARRAY_SIZE(sw_io_desc));
 
-	sunxi_pr_brom((void*)SW_VA_BROM_BASE);
+	sunxi_pr_chip_id();
 }
 
 /* Only reserve certain important memory blocks if there are actually
diff --git a/arch/arm/mach-sun5i/core.c b/arch/arm/mach-sun5i/core.c
index a3d42ec..6c49c78 100644
--- a/arch/arm/mach-sun5i/core.c
+++ b/arch/arm/mach-sun5i/core.c
@@ -79,7 +79,7 @@ void __init sw_core_map_io(void)
 {
 	iotable_init(sw_io_desc, ARRAY_SIZE(sw_io_desc));
 
-	sunxi_pr_brom((void*)SW_VA_BROM_BASE);
+	sunxi_pr_chip_id();
 }
 
 #ifdef CONFIG_FB_SUNXI_RESERVED_MEM
diff --git a/arch/arm/plat-sunxi/core.c b/arch/arm/plat-sunxi/core.c
index 0490f1a..cafa84c 100644
--- a/arch/arm/plat-sunxi/core.c
+++ b/arch/arm/plat-sunxi/core.c
@@ -23,28 +23,62 @@
 #include <asm/sizes.h>
 
 #include <plat/core.h>
+#include <plat/platform.h>
 
-void sunxi_pr_brom(void *base)
+struct brom_header {
+	u32 jump_instruction;	/* one intruction jumping to real code */
+	char magic[8];		/* ="eGON.BRM",  not C-style string. */
+	u32 length;		/* generated by PC */
+	char Boot_vsn[4];	/* Boot version */
+	char eGON_vsn[4];	/* eGON version */
+	char platform[8];	/* platform information */
+};
+
+static inline const struct brom_header *_sunxi_brom(void)
 {
-	const struct {
-		u32 jump_instruction;	/* one intruction jumping to real code */
-		char magic[8];		/* ="eGON.BRM",  not C-style string. */
-		u32 length;		/* generated by PC */
-		char Boot_vsn[4];	/* Boot version */
-		char eGON_vsn[4];	/* eGON version */
-		char platform[8];	/* platform information */
-	} *brom = base + 0x4000;
+	const struct brom_header *brom = (void*)SW_VA_BROM_BASE + 0x4000;
+	if (strncmp(brom->magic, "eGON.BRM", 8) == 0)
+		return brom;
+	else
+		return NULL;
+}
 
-	/* [    0.000000] BROM Ver: 1100 1100 1623 */
-	if (strncmp(brom->magic, "eGON.BRM", 8) == 0) {
+int sunxi_pr_brom(void)
+{
+	const struct brom_header *brom = _sunxi_brom();
+	if (brom) {
 		pr_info("BROM Ver: %.4s %.4s %.8s\n",
 			brom->Boot_vsn,
 			brom->eGON_vsn,
 			brom->platform);
-		/* 1623 = A10, 1625 = A13 */
-	} else {
-		pr_err("SUNXI BROM not found");
+		return 1;
 	}
+	pr_err("SUNXI BROM not found");
+	return 0;
+}
+
+u32 sunxi_chip_id(void)
+{
+	const struct brom_header *brom = _sunxi_brom();
+	if (brom) {
+		char *endptr;
+		u32 chip_id = simple_strtoul(brom->platform, &endptr, 10);
+		if (*endptr == '\0')
+			return chip_id;
+
+		pr_err("BROM: failed to parse chip-id: \"%s\"\n",
+		       brom->platform);
+	}
+	return 0;
+}
+
+int sunxi_pr_chip_id()
+{
+	u32 chip_id = sunxi_chip_id();
+	pr_info("BROM chip-id: %u (%s)\n", chip_id,
+		(chip_id == 1623) ? "A10" :
+		((chip_id == 1625) ? "A13" : "Unknown"));
+	return (chip_id != 0);
 }
 
 #ifdef CONFIG_SUNXI_MALI_RESERVED_MEM
diff --git a/arch/arm/plat-sunxi/include/plat/core.h b/arch/arm/plat-sunxi/include/plat/core.h
index b12ad1d..e92ec30 100644
--- a/arch/arm/plat-sunxi/include/plat/core.h
+++ b/arch/arm/plat-sunxi/include/plat/core.h
@@ -23,7 +23,10 @@
 		(u32)((SIZE) < SZ_1M ? (SIZE) / SZ_1K : (SIZE) / SZ_1M), \
 		(SIZE) < SZ_1M ? "kB" : "MB")
 
-void sunxi_pr_brom(void *base);
+/* BROM access only possible after iomap()s */
+u32 sunxi_chip_id(void);
+int sunxi_pr_chip_id(void);
+int sunxi_pr_brom(void);
 
 #ifdef CONFIG_SUNXI_MALI_RESERVED_MEM
 void __init sunxi_mali_core_fixup(struct tag *t, char **cmdline,
-- 
1.8.0


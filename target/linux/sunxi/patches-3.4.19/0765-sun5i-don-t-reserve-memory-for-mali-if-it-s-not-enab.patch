From 61e4b64eaad7e37c2746a73b071731b657b49dfc Mon Sep 17 00:00:00 2001
From: Alejandro Mery <amery@geeks.cl>
Date: Sun, 30 Sep 2012 18:18:02 +0200
Subject: [PATCH 765/944] sun5i: don't reserve memory for mali if it's not
 enabled

---
 arch/arm/mach-sun5i/core.c | 15 +++++++++++----
 1 file changed, 11 insertions(+), 4 deletions(-)

diff --git a/arch/arm/mach-sun5i/core.c b/arch/arm/mach-sun5i/core.c
index ba029c2..6d6dbbe 100644
--- a/arch/arm/mach-sun5i/core.c
+++ b/arch/arm/mach-sun5i/core.c
@@ -138,8 +138,13 @@ static u32 DRAMC_get_dram_size(void)
 static void __init sw_core_fixup(struct tag *t, char **cmdline,
 				 struct meminfo *mi)
 {
-	u32 size = 0;
+	u32 mali, size = 0;
 	int banks = 0;
+#if defined(CONFIG_MALI) || defined(CONFIG_MALI_MODULE)
+	mali = 64;
+#else
+	mali = 0;
+#endif
 
 #ifdef CONFIG_SUNXI_IGNORE_ATAG_MEM
 	size = DRAMC_get_dram_size();
@@ -148,11 +153,11 @@ static void __init sw_core_fixup(struct tag *t, char **cmdline,
 	if (size <= 512) {
 		mi->nr_banks = 1;
 		mi->bank[0].start = 0x40000000;
-		mi->bank[0].size = SZ_1M * (size - 64);
+		mi->bank[0].size = SZ_1M * (size - mali);
 	} else {
 		mi->nr_banks = 2;
 		mi->bank[0].start = 0x40000000;
-		mi->bank[0].size = SZ_1M * (512 - 64);
+		mi->bank[0].size = SZ_1M * (512 - mali);
 		mi->bank[1].start = 0x60000000;
 		mi->bank[1].size = SZ_1M * (size - 512);
 	}
@@ -161,11 +166,13 @@ static void __init sw_core_fixup(struct tag *t, char **cmdline,
 	for (; t->hdr.size; t = tag_next(t)) if (t->hdr.tag == ATAG_MEM) {
 		size += t->u.mem.size / SZ_1M;
 		if (banks++ == 0)
-			t->u.mem.size -= 64 * SZ_1M;
+			t->u.mem.size -= mali * SZ_1M;
 	}
 #endif
 
 	pr_info("Total Detected Memory: %uMB with %d banks\n", size, banks);
+	if (mali > 0)
+		pr_info("%u MB reserved for MALI\n", mali);
 }
 
 unsigned long fb_start = (PLAT_PHYS_OFFSET + SZ_512M - SZ_64M - SZ_32M);
-- 
1.8.0


From 694674548fe2dfae6f0f4a8849757e1faa6e4256 Mon Sep 17 00:00:00 2001
From: Luc Verhaegen <libv@codethink.co.uk>
Date: Fri, 26 Oct 2012 16:18:04 +0200
Subject: [PATCH 852/944] video:sunxi:disp: unify scaler coefficient setting

Signed-off-by: Luc Verhaegen <libv@codethink.co.uk>
---
 .../video/sunxi/disp/de_bsp_sun4i/de/disp_scaler.c | 34 ++++++++++++++++++++++
 .../video/sunxi/disp/de_bsp_sun4i/de/disp_scaler.h |  3 ++
 .../video/sunxi/disp/de_bsp_sun5i/de/disp_scaler.c | 34 ++++++++++++++++++++++
 .../video/sunxi/disp/de_bsp_sun5i/de/disp_scaler.h |  2 ++
 4 files changed, 73 insertions(+)

diff --git a/drivers/video/sunxi/disp/de_bsp_sun4i/de/disp_scaler.c b/drivers/video/sunxi/disp/de_bsp_sun4i/de/disp_scaler.c
index b8b33cb3..7c89234 100644
--- a/drivers/video/sunxi/disp/de_bsp_sun4i/de/disp_scaler.c
+++ b/drivers/video/sunxi/disp/de_bsp_sun4i/de/disp_scaler.c
@@ -530,7 +530,13 @@ __s32 Scaler_Set_Framebuffer(__u32 sel, __disp_fb_t *pfb)//keep the source windo
     {
 	    DE_SCAL_Set_CSC_Coef(sel, scaler->in_fb.cs_mode, DISP_BT601, get_fb_type(scaler->in_fb.format), DISP_FB_TYPE_RGB, scaler->in_fb.br_swap, 0);
 	}
+
+#ifdef CONFIG_ARCH_SUN4I
 	DE_SCAL_Set_Scaling_Coef(sel, &in_scan, &in_size, &in_type, &out_scan, &out_size, &out_type, scaler->smooth_mode);
+#else
+	gdisp.scaler[sel].coef_change = 1;
+#endif
+
 	return DIS_SUCCESS;
 }
 
@@ -612,7 +618,13 @@ __s32 Scaler_Set_Output_Size(__u32 sel, __disp_rectsz_t *size)
     {
 	    DE_SCAL_Set_CSC_Coef(sel, scaler->in_fb.cs_mode, DISP_BT601, get_fb_type(scaler->in_fb.format), DISP_FB_TYPE_RGB, scaler->in_fb.br_swap, 0);
 	}
+
+#ifdef CONFIG_ARCH_SUN4I
 	DE_SCAL_Set_Scaling_Coef(sel, &in_scan, &in_size, &in_type, &out_scan, &out_size, &out_type, scaler->smooth_mode);
+#else
+	gdisp.scaler[sel].coef_change = 1;
+#endif
+
 	DE_SCAL_Set_Out_Size(sel, &out_scan, &out_type, &out_size);
 
 	return DIS_SUCCESS;
@@ -702,7 +714,12 @@ __s32 Scaler_Set_SclRegn(__u32 sel, __disp_rect_t *scl_rect)
 	    DE_SCAL_Config_Src(sel,&scal_addr,&in_size,&in_type,FALSE,FALSE);
 	}
 	DE_SCAL_Set_Scaling_Factor(sel, &in_scan, &in_size, &in_type, &out_scan, &out_size, &out_type);
+
+#ifdef CONFIG_ARCH_SUN4I
 	DE_SCAL_Set_Scaling_Coef(sel, &in_scan, &in_size, &in_type, &out_scan, &out_size, &out_type, scaler->smooth_mode);
+#else
+	gdisp.scaler[sel].coef_change = 1;
+#endif
 
 	return DIS_SUCCESS;
 }
@@ -826,7 +843,13 @@ __s32 Scaler_Set_Para(__u32 sel, __disp_scaler_t *scl)
     {
 	    DE_SCAL_Set_CSC_Coef(sel, scaler->in_fb.cs_mode, DISP_BT601, get_fb_type(scaler->in_fb.format), DISP_FB_TYPE_RGB, scaler->in_fb.br_swap, 0);
 	}
+
+#ifdef CONFIG_ARCH_SUN4I
 	DE_SCAL_Set_Scaling_Coef(sel, &in_scan, &in_size, &in_type, &out_scan, &out_size, &out_type, scaler->smooth_mode);
+#else
+	gdisp.scaler[sel].coef_change = 1;
+#endif
+
 	DE_SCAL_Set_Out_Format(sel, &out_type);
 	DE_SCAL_Set_Out_Size(sel, &out_scan,&out_type, &out_size);
 
@@ -871,7 +894,13 @@ __s32 Scaler_Set_Outitl(__u32 sel,  __bool enable)
 
 	DE_SCAL_Set_Init_Phase(sel, &in_scan, &in_size, &in_type, &out_scan, &out_size, &out_type, FALSE);
 	DE_SCAL_Set_Scaling_Factor(sel, &in_scan, &in_size, &in_type, &out_scan, &out_size, &out_type);
+
+#ifdef CONFIG_ARCH_SUN4I
 	DE_SCAL_Set_Scaling_Coef(sel, &in_scan, &in_size, &in_type, &out_scan, &out_size, &out_type,  scaler->smooth_mode);
+#else
+	gdisp.scaler[sel].coef_change = 1;
+#endif
+
 	DE_SCAL_Set_Out_Size(sel, &out_scan,&out_type, &out_size);
 
 	return DIS_SUCCESS;
@@ -920,7 +949,12 @@ __s32 BSP_disp_scaler_set_smooth(__u32 sel, __disp_video_smooth_t  mode)
 	out_scan.field = (gdisp.screen[screen_index].iep_status == DE_FLICKER_USED)?FALSE: gdisp.screen[screen_index].b_out_interlace;
 #endif
 
+#ifdef CONFIG_ARCH_SUN4I
 	DE_SCAL_Set_Scaling_Coef(sel, &in_scan, &in_size, &in_type, &out_scan, &out_size, &out_type, scaler->smooth_mode);
+#else
+	gdisp.scaler[sel].coef_change = 1;
+#endif
+
     scaler->b_reg_change = TRUE;
 
 	return DIS_SUCCESS;
diff --git a/drivers/video/sunxi/disp/de_bsp_sun4i/de/disp_scaler.h b/drivers/video/sunxi/disp/de_bsp_sun4i/de/disp_scaler.h
index cb60c5e..fe2da00 100644
--- a/drivers/video/sunxi/disp/de_bsp_sun4i/de/disp_scaler.h
+++ b/drivers/video/sunxi/disp/de_bsp_sun4i/de/disp_scaler.h
@@ -73,6 +73,9 @@ typedef struct
     wait_queue_head_t       scaler_queue;
     __bool                  b_scaler_finished;
 #endif
+#ifdef CONFIG_ARCH_SUN5I
+	__bool                      coef_change;
+#endif
 }__disp_scaler_t;
 
 extern __disp_scaler_t    gscl;
diff --git a/drivers/video/sunxi/disp/de_bsp_sun5i/de/disp_scaler.c b/drivers/video/sunxi/disp/de_bsp_sun5i/de/disp_scaler.c
index 9816699..f02fed9 100644
--- a/drivers/video/sunxi/disp/de_bsp_sun5i/de/disp_scaler.c
+++ b/drivers/video/sunxi/disp/de_bsp_sun5i/de/disp_scaler.c
@@ -532,7 +532,13 @@ __s32 Scaler_Set_Framebuffer(__u32 sel, __disp_fb_t *pfb)//keep the source windo
     {
 	    DE_SCAL_Set_CSC_Coef(sel, scaler->in_fb.cs_mode, DISP_BT601, get_fb_type(scaler->in_fb.format), DISP_FB_TYPE_RGB, scaler->in_fb.br_swap, 0);
 	}
+
+#ifdef CONFIG_ARCH_SUN4I
+    DE_SCAL_Set_Scaling_Coef(sel, &in_scan, &in_size, &in_type, &out_scan, &out_size, &out_type,  scaler->smooth_mode);
+#else
 	gdisp.scaler[sel].coef_change = 1;
+#endif
+
 	return DIS_SUCCESS;
 }
 
@@ -614,7 +620,13 @@ __s32 Scaler_Set_Output_Size(__u32 sel, __disp_rectsz_t *size)
     {
 	    DE_SCAL_Set_CSC_Coef(sel, scaler->in_fb.cs_mode, DISP_BT601, get_fb_type(scaler->in_fb.format), DISP_FB_TYPE_RGB, scaler->in_fb.br_swap, 0);
 	}
+
+#ifdef CONFIG_ARCH_SUN4I
+	DE_SCAL_Set_Scaling_Coef(sel, &in_scan, &in_size, &in_type, &out_scan, &out_size, &out_type,  scaler->smooth_mode);
+#else
 	gdisp.scaler[sel].coef_change = 1;
+#endif
+
 	DE_SCAL_Set_Out_Size(sel, &out_scan, &out_type, &out_size);
 
 	return DIS_SUCCESS;
@@ -704,7 +716,12 @@ __s32 Scaler_Set_SclRegn(__u32 sel, __disp_rect_t *scl_rect)
 	    DE_SCAL_Config_Src(sel,&scal_addr,&in_size,&in_type,FALSE,FALSE);
 	}
 	DE_SCAL_Set_Scaling_Factor(sel, &in_scan, &in_size, &in_type, &out_scan, &out_size, &out_type);
+
+#ifdef CONFIG_ARCH_SUN4I
+	DE_SCAL_Set_Scaling_Coef(sel, &in_scan, &in_size, &in_type, &out_scan, &out_size, &out_type,  scaler->smooth_mode);
+#else
 	gdisp.scaler[sel].coef_change = 1;
+#endif
 
 	return DIS_SUCCESS;
 }
@@ -828,7 +845,13 @@ __s32 Scaler_Set_Para(__u32 sel, __disp_scaler_t *scl)
     {
 	    DE_SCAL_Set_CSC_Coef(sel, scaler->in_fb.cs_mode, DISP_BT601, get_fb_type(scaler->in_fb.format), DISP_FB_TYPE_RGB, scaler->in_fb.br_swap, 0);
 	}
+
+#ifdef CONFIG_ARCH_SUN4I
+	DE_SCAL_Set_Scaling_Coef(sel, &in_scan, &in_size, &in_type, &out_scan, &out_size, &out_type,  scaler->smooth_mode);
+#else
 	gdisp.scaler[sel].coef_change = 1;
+#endif
+
 	DE_SCAL_Set_Out_Format(sel, &out_type);
 	DE_SCAL_Set_Out_Size(sel, &out_scan,&out_type, &out_size);
 
@@ -873,7 +896,13 @@ __s32 Scaler_Set_Outitl(__u32 sel,  __bool enable)
 
 	DE_SCAL_Set_Init_Phase(sel, &in_scan, &in_size, &in_type, &out_scan, &out_size, &out_type, FALSE);
 	DE_SCAL_Set_Scaling_Factor(sel, &in_scan, &in_size, &in_type, &out_scan, &out_size, &out_type);
+
+#ifdef CONFIG_ARCH_SUN4I
+	DE_SCAL_Set_Scaling_Coef(sel, &in_scan, &in_size, &in_type, &out_scan, &out_size, &out_type,  scaler->smooth_mode);
+#else
 	gdisp.scaler[sel].coef_change = 1;
+#endif
+
 	DE_SCAL_Set_Out_Size(sel, &out_scan,&out_type, &out_size);
 
 	return DIS_SUCCESS;
@@ -922,7 +951,12 @@ __s32 BSP_disp_scaler_set_smooth(__u32 sel, __disp_video_smooth_t  mode)
 	out_scan.field = (gdisp.screen[screen_index].iep_status == DE_FLICKER_USED)?FALSE: gdisp.screen[screen_index].b_out_interlace;
 #endif
 
+#ifdef CONFIG_ARCH_SUN4I
+	DE_SCAL_Set_Scaling_Coef(sel, &in_scan, &in_size, &in_type, &out_scan, &out_size, &out_type,  scaler->smooth_mode);
+#else
 	gdisp.scaler[sel].coef_change = 1;
+#endif
+
     scaler->b_reg_change = TRUE;
 
 	return DIS_SUCCESS;
diff --git a/drivers/video/sunxi/disp/de_bsp_sun5i/de/disp_scaler.h b/drivers/video/sunxi/disp/de_bsp_sun5i/de/disp_scaler.h
index 4abc5ec..d096e3f 100644
--- a/drivers/video/sunxi/disp/de_bsp_sun5i/de/disp_scaler.h
+++ b/drivers/video/sunxi/disp/de_bsp_sun5i/de/disp_scaler.h
@@ -73,7 +73,9 @@ typedef struct
     wait_queue_head_t       scaler_queue;
     __bool                  b_scaler_finished;
 #endif
+#ifdef CONFIG_ARCH_SUN5I
     __bool                      coef_change;
+#endif
 }__disp_scaler_t;
 
 extern __disp_scaler_t    gscl;
-- 
1.8.0


From ae1205c681696283905a748859acc252a2501af1 Mon Sep 17 00:00:00 2001
From: Jari Helaakoski <tekkuli@gmail.com>
Date: Mon, 19 Nov 2012 21:38:19 +0200
Subject: [PATCH 942/944] video: sunxi: disp: remove couple enums and structs

---
 drivers/video/sunxi/disp/de_fe.c       | 41 +++++++++++++++++-----------------
 drivers/video/sunxi/disp/de_hwc.c      | 27 +++++++++++-----------
 drivers/video/sunxi/disp/disp_event.c  | 15 +++++--------
 drivers/video/sunxi/disp/disp_hwc.c    |  6 +----
 drivers/video/sunxi/disp/disp_scaler.c | 36 +++++++----------------------
 drivers/video/sunxi/disp/disp_scaler.h |  1 -
 drivers/video/sunxi/disp/disp_video.c  |  2 +-
 drivers/video/sunxi/disp/ebios_de.h    | 28 ++++-------------------
 8 files changed, 54 insertions(+), 102 deletions(-)

diff --git a/drivers/video/sunxi/disp/de_fe.c b/drivers/video/sunxi/disp/de_fe.c
index a9975c1..0f07686 100644
--- a/drivers/video/sunxi/disp/de_fe.c
+++ b/drivers/video/sunxi/disp/de_fe.c
@@ -89,7 +89,7 @@ __s32 DE_SCAL_Config_Src(__u8 sel, __scal_buf_addr_t *addr,
 			in_w1 = (in_w0 + 0x1) >> w_shift;
 			x_off1 = (x_off0) >> w_shift;
 
-			if (type->mod == DE_SCAL_INTER_LEAVED) {
+			if (type->mod == DISP_MOD_INTERLEAVED) {
 				image_w0 = (image_w0 + 0x1) & 0xfffffffe;
 				image_w1 = image_w0 >> 1;
 				in_w0 &= 0xfffffffe;
@@ -126,7 +126,7 @@ __s32 DE_SCAL_Config_Src(__u8 sel, __scal_buf_addr_t *addr,
 	in_w0 = (in_w0 != 0) ? in_w0 : 1;
 	in_w1 = (in_w1 != 0) ? in_w1 : 1;
 
-	if (type->mod == DE_SCAL_PLANNAR) {
+	if (type->mod == DISP_MOD_NON_MB_PLANAR) {
 		scal_dev[sel]->linestrd0.dwval = image_w0;
 		scal_dev[sel]->linestrd1.dwval = image_w1;
 		scal_dev[sel]->linestrd2.dwval = image_w1;
@@ -140,7 +140,7 @@ __s32 DE_SCAL_Config_Src(__u8 sel, __scal_buf_addr_t *addr,
 			addr->ch1_addr + de_scal_ch1_offset;
 		scal_dev[sel]->buf_addr2.dwval =
 			addr->ch2_addr + de_scal_ch2_offset;
-	} else if (type->mod == DE_SCAL_INTER_LEAVED) {
+	} else if (type->mod == DISP_MOD_INTERLEAVED) {
 		scal_dev[sel]->linestrd0.dwval = image_w0 << (0x2 - w_shift);
 		scal_dev[sel]->linestrd1.dwval = 0x0;
 		scal_dev[sel]->linestrd2.dwval = 0x0;
@@ -153,7 +153,7 @@ __s32 DE_SCAL_Config_Src(__u8 sel, __scal_buf_addr_t *addr,
 			addr->ch0_addr + de_scal_ch0_offset;
 		scal_dev[sel]->buf_addr1.dwval = addr->ch1_addr;
 		scal_dev[sel]->buf_addr2.dwval = addr->ch2_addr;
-	} else if (type->mod == DE_SCAL_UVCOMBINED) {
+	} else if (type->mod == DISP_MOD_NON_MB_UV_COMBINED) {
 		scal_dev[sel]->linestrd0.dwval = image_w0;
 		scal_dev[sel]->linestrd1.dwval = image_w1 << 1;
 		scal_dev[sel]->linestrd2.dwval = 0x0;
@@ -166,7 +166,7 @@ __s32 DE_SCAL_Config_Src(__u8 sel, __scal_buf_addr_t *addr,
 		scal_dev[sel]->buf_addr1.dwval =
 			addr->ch1_addr + de_scal_ch1_offset;
 		scal_dev[sel]->buf_addr2.dwval = addr->ch2_addr;
-	} else if (type->mod == DE_SCAL_PLANNARMB) {
+	} else if (type->mod == DISP_MOD_MB_PLANAR) {
 		image_w0 = (image_w0 + 0xf) & 0xfff0;
 		image_w1 = (image_w1 + (0xf >> w_shift)) & (~(0xf >> w_shift));
 
@@ -211,7 +211,7 @@ __s32 DE_SCAL_Config_Src(__u8 sel, __scal_buf_addr_t *addr,
 			addr->ch1_addr + de_scal_ch1_offset;
 		scal_dev[sel]->buf_addr2.dwval =
 			addr->ch2_addr + de_scal_ch2_offset;
-	} else if (type->mod == DE_SCAL_UVCOMBINEDMB) {
+	} else if (type->mod == DISP_MOD_MB_UV_COMBINED) {
 		image_w0 = (image_w0 + 0x1f) & 0xffffffe0;
 		image_w1 = (image_w1 + 0x0f) & 0xfffffff0;
 
@@ -450,7 +450,7 @@ __s32 DE_SCAL_Set_Scaling_Factor(__u8 sel, __scal_scan_mod_t *in_scan,
 	out_h0 = out_size->height + (out_scan->field & 0x1);
 
 	/* sc0 */
-	if ((in_type->mod == DE_SCAL_INTER_LEAVED) &&
+	if ((in_type->mod == DISP_MOD_INTERLEAVED) &&
 	    (in_type->fmt == DE_SCAL_INYUV422))
 		in_w0 &= 0xfffffffe;
 
@@ -555,7 +555,7 @@ __s32 DE_SCAL_Set_Scaling_Coef(__u8 sel, __scal_scan_mod_t *in_scan,
 	al1_size = zoom0_size + zoom1_size + zoom2_size + zoom3_size +
 		zoom4_size + zoom5_size;
 
-	if ((in_type->mod == DE_SCAL_INTER_LEAVED) &&
+	if ((in_type->mod == DISP_MOD_INTERLEAVED) &&
 	    (in_type->fmt == DE_SCAL_INYUV422))
 		in_w0 &= 0xfffffffe;
 
@@ -1986,7 +1986,8 @@ __s32 DE_SCAL_Config_3D_Src(__u8 sel, __scal_buf_addr_t *addr,
 	in_w0 = (in_w0 != 0) ? in_w0 : 1;
 	in_w1 = (in_w1 != 0) ? in_w1 : 1;
 
-	if ((trdinmode == DE_SCAL_3DIN_TB) && (type->mod == DE_SCAL_PLANNAR)) {
+	if ((trdinmode == DE_SCAL_3DIN_TB) &&
+			(type->mod == DISP_MOD_NON_MB_PLANAR)) {
 		scal_dev[sel]->linestrd0.dwval = image_w0;
 		scal_dev[sel]->linestrd1.dwval = image_w1;
 		scal_dev[sel]->linestrd2.dwval = image_w1;
@@ -2014,7 +2015,7 @@ __s32 DE_SCAL_Config_3D_Src(__u8 sel, __scal_buf_addr_t *addr,
 			addr->ch2_addr + de_scal_ch2r_offset;
 
 	} else if ((trdinmode == DE_SCAL_3DIN_FP)
-		   && (type->mod == DE_SCAL_PLANNAR)) {
+		   && (type->mod == DISP_MOD_NON_MB_PLANAR)) {
 		scal_dev[sel]->linestrd0.dwval = image_w0;
 		scal_dev[sel]->linestrd1.dwval = image_w1;
 		scal_dev[sel]->linestrd2.dwval = image_w1;
@@ -2044,7 +2045,7 @@ __s32 DE_SCAL_Config_3D_Src(__u8 sel, __scal_buf_addr_t *addr,
 			addrtrd->ch2_addr + de_scal_ch2r_offset;
 	} else if (((trdinmode == DE_SCAL_3DIN_SSF) ||
 		    (trdinmode == DE_SCAL_3DIN_SSH)) &&
-		   (type->mod == DE_SCAL_PLANNAR)) {
+		   (type->mod == DISP_MOD_NON_MB_PLANAR)) {
 		scal_dev[sel]->linestrd0.dwval = image_w0 << 1;
 		scal_dev[sel]->linestrd1.dwval = image_w1 << 1;
 		scal_dev[sel]->linestrd2.dwval = image_w1 << 1;
@@ -2071,7 +2072,7 @@ __s32 DE_SCAL_Config_3D_Src(__u8 sel, __scal_buf_addr_t *addr,
 		scal_dev[sel]->trd_buf_addr2.dwval =
 			addr->ch2_addr + de_scal_ch2r_offset;
 	} else if ((trdinmode == DE_SCAL_3DIN_LI) &&
-		   (type->mod == DE_SCAL_PLANNAR)) {
+		   (type->mod == DISP_MOD_NON_MB_PLANAR)) {
 		scal_dev[sel]->linestrd0.dwval = image_w0;
 		scal_dev[sel]->linestrd1.dwval = image_w1;
 		scal_dev[sel]->linestrd2.dwval = image_w1;
@@ -2098,7 +2099,7 @@ __s32 DE_SCAL_Config_3D_Src(__u8 sel, __scal_buf_addr_t *addr,
 		scal_dev[sel]->trd_buf_addr2.dwval =
 			addr->ch2_addr + de_scal_ch2r_offset;
 	} else if ((trdinmode == DE_SCAL_3DIN_FP) &&
-		   (type->mod == DE_SCAL_INTER_LEAVED)) {
+		   (type->mod == DISP_MOD_INTERLEAVED)) {
 		scal_dev[sel]->linestrd0.dwval = image_w0 << (2 - w_shift);
 		scal_dev[sel]->linestrd1.dwval = 0;
 		scal_dev[sel]->linestrd2.dwval = 0;
@@ -2128,7 +2129,7 @@ __s32 DE_SCAL_Config_3D_Src(__u8 sel, __scal_buf_addr_t *addr,
 		scal_dev[sel]->trd_buf_addr2.dwval =
 			addrtrd->ch2_addr + de_scal_ch2r_offset;
 	} else if ((trdinmode == DE_SCAL_3DIN_TB) &&
-		   (type->mod == DE_SCAL_INTER_LEAVED)) {
+		   (type->mod == DISP_MOD_INTERLEAVED)) {
 		scal_dev[sel]->linestrd0.dwval = image_w0 << (2 - w_shift);
 		scal_dev[sel]->linestrd1.dwval = 0;
 		scal_dev[sel]->linestrd2.dwval = 0;
@@ -2160,7 +2161,7 @@ __s32 DE_SCAL_Config_3D_Src(__u8 sel, __scal_buf_addr_t *addr,
 			addr->ch2_addr + de_scal_ch2r_offset;
 	} else if (((trdinmode == DE_SCAL_3DIN_SSF) ||
 		    (trdinmode == DE_SCAL_3DIN_SSH)) &&
-		   (type->mod == DE_SCAL_INTER_LEAVED)) {
+		   (type->mod == DISP_MOD_INTERLEAVED)) {
 		scal_dev[sel]->linestrd0.dwval = image_w0 << (3 - w_shift);
 		scal_dev[sel]->linestrd1.dwval = 0;
 		scal_dev[sel]->linestrd2.dwval = 0;
@@ -2191,7 +2192,7 @@ __s32 DE_SCAL_Config_3D_Src(__u8 sel, __scal_buf_addr_t *addr,
 		scal_dev[sel]->trd_buf_addr2.dwval =
 			addr->ch2_addr + de_scal_ch2r_offset;
 	} else if ((trdinmode == DE_SCAL_3DIN_LI) &&
-		   (type->mod == DE_SCAL_INTER_LEAVED)) {
+		   (type->mod == DISP_MOD_INTERLEAVED)) {
 		scal_dev[sel]->linestrd0.dwval = image_w0 << (2 - w_shift);
 		scal_dev[sel]->linestrd1.dwval = 0;
 		scal_dev[sel]->linestrd2.dwval = 0;
@@ -2222,7 +2223,7 @@ __s32 DE_SCAL_Config_3D_Src(__u8 sel, __scal_buf_addr_t *addr,
 		scal_dev[sel]->trd_buf_addr2.dwval =
 			addr->ch2_addr + de_scal_ch2r_offset;
 	} else if ((trdinmode == DE_SCAL_3DIN_TB) &&
-		   (type->mod == DE_SCAL_UVCOMBINEDMB)) {
+		   (type->mod == DISP_MOD_MB_UV_COMBINED)) {
 		scal_dev[sel]->linestrd0.dwval =
 			(((image_w0 + 0x1f) & 0xffe0) - 0x1f) << 0x05;
 		scal_dev[sel]->linestrd1.dwval =
@@ -2288,7 +2289,7 @@ __s32 DE_SCAL_Config_3D_Src(__u8 sel, __scal_buf_addr_t *addr,
 		scal_dev[sel]->trd_buf_addr2.dwval =
 			addr->ch2_addr + de_scal_ch2r_offset;
 	} else if ((trdinmode == DE_SCAL_3DIN_FP) &&
-		   (type->mod == DE_SCAL_UVCOMBINEDMB)) {
+		   (type->mod == DISP_MOD_MB_UV_COMBINED)) {
 		de_scal_trd_fp_en = 1;
 		scal_dev[sel]->linestrd0.dwval =
 			(((image_w0 + 0x1f) & 0xffe0) - 0x1f) << 0x05;
@@ -2346,7 +2347,7 @@ __s32 DE_SCAL_Config_3D_Src(__u8 sel, __scal_buf_addr_t *addr,
 			addrtrd->ch2_addr + de_scal_ch2r_offset;
 	} else if (((trdinmode == DE_SCAL_3DIN_SSF) ||
 		    (trdinmode == DE_SCAL_3DIN_SSH)) &&
-		   (type->mod == DE_SCAL_UVCOMBINEDMB)) {
+		   (type->mod == DISP_MOD_MB_UV_COMBINED)) {
 		scal_dev[sel]->linestrd0.dwval =
 			(((2 * image_w0 + 0x1f) & 0xffe0) - 0x1f) << 0x05;
 		scal_dev[sel]->linestrd1.dwval =
@@ -2415,7 +2416,7 @@ __s32 DE_SCAL_Config_3D_Src(__u8 sel, __scal_buf_addr_t *addr,
 		scal_dev[sel]->trd_buf_addr2.dwval =
 			addr->ch2_addr + de_scal_ch2r_offset;
 	} else if ((trdinmode == DE_SCAL_3DIN_LI) &&
-		   (type->mod == DE_SCAL_UVCOMBINEDMB)) {
+		   (type->mod == DISP_MOD_MB_UV_COMBINED)) {
 		scal_dev[sel]->linestrd0.dwval =
 			((((image_w0 + 0x1f) & 0xffe0) - 0x1f) << 0x05);
 		scal_dev[sel]->linestrd1.dwval =
diff --git a/drivers/video/sunxi/disp/de_hwc.c b/drivers/video/sunxi/disp/de_hwc.c
index ee0def3..1043f40 100644
--- a/drivers/video/sunxi/disp/de_hwc.c
+++ b/drivers/video/sunxi/disp/de_hwc.c
@@ -70,36 +70,37 @@ __s32 DE_BE_HWC_Set_Palette(__u32 sel, __u32 address, __u32 offset, __u32 size)
 	return 0;
 }
 
-__s32 DE_BE_HWC_Set_Src(__u32 sel, de_hwc_src_t *hwc_pat)
+__s32 DE_BE_HWC_Set_Src(__u32 sel, __disp_hwc_pattern_t *hwc_pat)
 {
 	__u32 tmp;
-	__u32 x_size = 0, y_size = 0, pixel_fmt = 0;
+	de_pixels_num_t x_size = 0, y_size = 0;
+	de_inter_fbfmt_e pixel_fmt = 0;
 	__u32 i;
 	__u32 size;
 
-	switch (hwc_pat->mode) {
-	case DE_H32_V32_8BPP:
+	switch (hwc_pat->pat_mode) {
+	case DISP_HWC_MOD_H32_V32_8BPP:
 		x_size = DE_N32PIXELS;
 		y_size = DE_N32PIXELS;
 		pixel_fmt = DE_IF8BPP;
 		size = 32 * 32;
 		break;
 
-	case DE_H64_V64_2BPP:
+	case DISP_HWC_MOD_H64_V64_2BPP:
 		x_size = DE_N64PIXELS;
 		y_size = DE_N64PIXELS;
 		pixel_fmt = DE_IF2BPP;
 		size = 64 * 64 / 4;
 		break;
 
-	case DE_H64_V32_4BPP:
+	case DISP_HWC_MOD_H64_V32_4BPP:
 		x_size = DE_N64PIXELS;
 		y_size = DE_N32PIXELS;
 		pixel_fmt = DE_IF4BPP;
 		size = 64 * 32 / 2;
 		break;
 
-	case DE_H32_V64_4BPP:
+	case DISP_HWC_MOD_H32_V64_4BPP:
 		x_size = DE_N32PIXELS;
 		y_size = DE_N64PIXELS;
 		pixel_fmt = DE_IF4BPP;
@@ -110,24 +111,24 @@ __s32 DE_BE_HWC_Set_Src(__u32 sel, de_hwc_src_t *hwc_pat)
 		break;
 	}
 
-	if (hwc_pat->paddr & 0x3) { /* Address not 32bit aligned */
+	if (hwc_pat->addr & 0x3) { /* Address not 32bit aligned */
 		for (i = 0; i < size; i += 4) {
 			__u32 value = 0;
 
-			tmp = DE_RUINT8(hwc_pat->paddr + i);
+			tmp = DE_RUINT8(hwc_pat->addr + i);
 			value = tmp;
-			tmp = DE_RUINT8(hwc_pat->paddr + i + 1);
+			tmp = DE_RUINT8(hwc_pat->addr + i + 1);
 			value |= (tmp << 8);
-			tmp = DE_RUINT8(hwc_pat->paddr + i + 2);
+			tmp = DE_RUINT8(hwc_pat->addr + i + 2);
 			value |= (tmp << 16);
-			tmp = DE_RUINT8(hwc_pat->paddr + i + 3);
+			tmp = DE_RUINT8(hwc_pat->addr + i + 3);
 			value |= (tmp << 24);
 			DE_BE_WUINT32(sel, DE_BE_HWC_MEMORY_ADDR_OFF + i,
 				      value);
 		}
 	} else {
 		for (i = 0; i < size; i += 4) {
-			tmp = DE_RUINT32(hwc_pat->paddr + i);
+			tmp = DE_RUINT32(hwc_pat->addr + i);
 			DE_BE_WUINT32(sel, DE_BE_HWC_MEMORY_ADDR_OFF + i, tmp);
 		}
 	}
diff --git a/drivers/video/sunxi/disp/disp_event.c b/drivers/video/sunxi/disp/disp_event.c
index 0aea02f..b79d4e7 100644
--- a/drivers/video/sunxi/disp/disp_event.c
+++ b/drivers/video/sunxi/disp/disp_event.c
@@ -104,16 +104,11 @@ void LCD_vbi_event_proc(__u32 sel, __u32 tcon_index)
 				in_scan.field = FALSE;
 				in_scan.bottom = FALSE;
 
-				in_type.fmt =
-				    Scaler_sw_para_to_reg(0,
-							  scaler->in_fb.format);
-				in_type.mod =
-				    Scaler_sw_para_to_reg(1,
-							  scaler->in_fb.mode);
-				in_type.ps =
-				    Scaler_sw_para_to_reg(2,
-							  (__u8) scaler->in_fb.
-							  seq);
+				in_type.fmt = Scaler_sw_para_to_reg1(
+						scaler->in_fb.format);
+				in_type.mod = scaler->in_fb.mode;
+				in_type.ps = Scaler_sw_para_to_reg3(
+						scaler->in_fb.seq);
 				in_type.byte_seq = 0;
 				in_type.sample_method = 0;
 
diff --git a/drivers/video/sunxi/disp/disp_hwc.c b/drivers/video/sunxi/disp/disp_hwc.c
index 621f61d..862f853 100644
--- a/drivers/video/sunxi/disp/disp_hwc.c
+++ b/drivers/video/sunxi/disp/disp_hwc.c
@@ -42,14 +42,10 @@ __s32 BSP_disp_hwc_get_pos(__u32 sel, __disp_pos_t *pos)
 
 __s32 BSP_disp_hwc_set_framebuffer(__u32 sel, __disp_hwc_pattern_t *patmem)
 {
-	de_hwc_src_t hsrc;
-
 	if (patmem == NULL)
 		return DIS_PARA_FAILED;
 
-	hsrc.mode = patmem->pat_mode;
-	hsrc.paddr = patmem->addr;
-	DE_BE_HWC_Set_Src(sel, &hsrc);
+	DE_BE_HWC_Set_Src(sel, patmem);
 
 	return DIS_SUCCESS;
 }
diff --git a/drivers/video/sunxi/disp/disp_scaler.c b/drivers/video/sunxi/disp/disp_scaler.c
index 730357d..88925c1 100644
--- a/drivers/video/sunxi/disp/disp_scaler.c
+++ b/drivers/video/sunxi/disp/disp_scaler.c
@@ -49,26 +49,6 @@ __scal_infmt_t Scaler_sw_para_to_reg1(__disp_pixel_fmt_t value)
 	return DE_SCAL_INRGB888;
 }
 
-/* scaler input yuv mode */
-__scal_inmode_t Scaler_sw_para_to_reg2(__disp_pixel_mod_t value)
-{
-	if (value == DISP_MOD_INTERLEAVED)
-		return DE_SCAL_INTER_LEAVED;
-	else if (value == DISP_MOD_MB_PLANAR)
-		return DE_SCAL_PLANNARMB;
-	else if (value == DISP_MOD_NON_MB_PLANAR)
-		return DE_SCAL_PLANNAR;
-	else if (value == DISP_MOD_NON_MB_UV_COMBINED)
-		return DE_SCAL_UVCOMBINED;
-	else if (value == DISP_MOD_MB_UV_COMBINED)
-		return DE_SCAL_UVCOMBINEDMB;
-	else
-		DE_WRN("not supported scaler input mode:%d in "
-		       "Scaler_sw_para_to_reg2\n", value);
-
-	return DE_SCAL_UVCOMBINEDMB;
-}
-
 /* scaler input pixel sequence */
 __scal_ps_t Scaler_sw_para_to_reg3(__disp_pixel_seq_t value)
 {
@@ -359,7 +339,7 @@ __s32 Scaler_Set_Framebuffer(__u32 sel, __disp_fb_t *pfb)
 	memcpy(&scaler->in_fb, pfb, sizeof(__disp_fb_t));
 
 	in_type.fmt = Scaler_sw_para_to_reg1(scaler->in_fb.format);
-	in_type.mod = Scaler_sw_para_to_reg2(scaler->in_fb.mode);
+	in_type.mod = scaler->in_fb.mode;
 	in_type.ps = Scaler_sw_para_to_reg3(scaler->in_fb.seq);
 	in_type.byte_seq = 0;
 	in_type.sample_method = 0;
@@ -480,7 +460,7 @@ __s32 Scaler_Set_Output_Size(__u32 sel, __disp_rectsz_t *size)
 	scaler->out_size.width = size->width;
 
 	in_type.fmt = Scaler_sw_para_to_reg1(scaler->in_fb.format);
-	in_type.mod = Scaler_sw_para_to_reg2(scaler->in_fb.mode);
+	in_type.mod = scaler->in_fb.mode;
 	in_type.ps = Scaler_sw_para_to_reg3(scaler->in_fb.seq);
 	in_type.byte_seq = 0;
 	in_type.sample_method = 0;
@@ -555,7 +535,7 @@ __s32 Scaler_Set_SclRegn(__u32 sel, __disp_rect_t *scl_rect)
 	scaler->src_win.width = scl_rect->width;
 
 	in_type.fmt = Scaler_sw_para_to_reg1(scaler->in_fb.format);
-	in_type.mod = Scaler_sw_para_to_reg2(scaler->in_fb.mode);
+	in_type.mod = scaler->in_fb.mode;
 	in_type.ps = Scaler_sw_para_to_reg3(scaler->in_fb.seq);
 	in_type.byte_seq = 0;
 	in_type.sample_method = 0;
@@ -672,7 +652,7 @@ __s32 Scaler_Set_Para(__u32 sel, __disp_scaler_t *scl)
 	memcpy(&(scaler->out_size), &(scl->out_size), sizeof(__disp_rectsz_t));
 
 	in_type.fmt = Scaler_sw_para_to_reg1(scaler->in_fb.format);
-	in_type.mod = Scaler_sw_para_to_reg2(scaler->in_fb.mode);
+	in_type.mod = scaler->in_fb.mode;
 	in_type.ps = Scaler_sw_para_to_reg3(scaler->in_fb.seq);
 	in_type.byte_seq = 0;
 	in_type.sample_method = 0;
@@ -777,7 +757,7 @@ __s32 Scaler_Set_Outitl(__u32 sel, __bool enable)
 	scaler = &(gdisp.scaler[sel]);
 
 	in_type.fmt = Scaler_sw_para_to_reg1(scaler->in_fb.format);
-	in_type.mod = Scaler_sw_para_to_reg2(scaler->in_fb.mode);
+	in_type.mod = scaler->in_fb.mode;
 	in_type.ps = Scaler_sw_para_to_reg3(scaler->in_fb.seq);
 	in_type.byte_seq = 0;
 	in_type.sample_method = 0;
@@ -833,7 +813,7 @@ __s32 BSP_disp_scaler_set_smooth(__u32 sel, __disp_video_smooth_t mode)
 	scaler->smooth_mode = mode;
 
 	in_type.fmt = Scaler_sw_para_to_reg1(scaler->in_fb.format);
-	in_type.mod = Scaler_sw_para_to_reg2(scaler->in_fb.mode);
+	in_type.mod = scaler->in_fb.mode;
 	in_type.ps = Scaler_sw_para_to_reg3(scaler->in_fb.seq);
 	in_type.byte_seq = 0;
 	in_type.sample_method = 0;
@@ -926,7 +906,7 @@ __s32 BSP_disp_scaler_start(__u32 handle, __disp_scaler_para_t *para)
 	sel = SCALER_HANDTOID(handle);
 
 	in_type.fmt = Scaler_sw_para_to_reg1(para->input_fb.format);
-	in_type.mod = Scaler_sw_para_to_reg2(para->input_fb.mode);
+	in_type.mod = para->input_fb.mode;
 	in_type.ps = Scaler_sw_para_to_reg3(para->input_fb.seq);
 	in_type.byte_seq = 0;
 	in_type.sample_method = 0;
@@ -1153,7 +1133,7 @@ __s32 BSP_disp_capture_screen(__u32 sel, __disp_capture_screen_para_t *para)
 	}
 
 	in_type.fmt = Scaler_sw_para_to_reg1(DISP_FORMAT_ARGB8888);
-	in_type.mod = Scaler_sw_para_to_reg2(DISP_MOD_INTERLEAVED);
+	in_type.mod = DISP_MOD_INTERLEAVED;
 	in_type.ps = Scaler_sw_para_to_reg3(DISP_SEQ_ARGB);
 	in_type.byte_seq = 0;
 	in_type.sample_method = 0;
diff --git a/drivers/video/sunxi/disp/disp_scaler.h b/drivers/video/sunxi/disp/disp_scaler.h
index 8684bc9e..9fd0db2 100644
--- a/drivers/video/sunxi/disp/disp_scaler.h
+++ b/drivers/video/sunxi/disp/disp_scaler.h
@@ -90,7 +90,6 @@ __s32 Scaler_Set_Enhance(__u32 sel, __u32 bright, __u32 contrast,
 			 __u32 saturation, __u32 hue);
 __s32 Scaler_3d_sw_para_to_reg(__u32 type, __u32 mode, __bool b_out_interlace);
 __scal_infmt_t Scaler_sw_para_to_reg1(__disp_pixel_fmt_t value);
-__scal_inmode_t Scaler_sw_para_to_reg2(__disp_pixel_mod_t value);
 __scal_ps_t Scaler_sw_para_to_reg3(__disp_pixel_seq_t value);
 __scal_outfmt_t Scaler_sw_para_to_reg4(__disp_pixel_fmt_t value);
 
diff --git a/drivers/video/sunxi/disp/disp_video.c b/drivers/video/sunxi/disp/disp_video.c
index 0ebab26..1ac445c 100644
--- a/drivers/video/sunxi/disp/disp_video.c
+++ b/drivers/video/sunxi/disp/disp_video.c
@@ -242,7 +242,7 @@ static inline __s32 Hal_Set_Frame(__u32 sel, __u32 tcon_index, __u32 id)
 		}
 
 		in_type.fmt = Scaler_sw_para_to_reg1(scaler->in_fb.format);
-		in_type.mod = Scaler_sw_para_to_reg2(scaler->in_fb.mode);
+		in_type.mod = scaler->in_fb.mode;
 		in_type.ps = Scaler_sw_para_to_reg3(scaler->in_fb.seq);
 		in_type.byte_seq = 0;
 		in_type.sample_method = 0;
diff --git a/drivers/video/sunxi/disp/ebios_de.h b/drivers/video/sunxi/disp/ebios_de.h
index 80ca54b..461145e 100644
--- a/drivers/video/sunxi/disp/ebios_de.h
+++ b/drivers/video/sunxi/disp/ebios_de.h
@@ -42,13 +42,6 @@ typedef enum {
 } de_inter_fbfmt_e;
 
 typedef enum {
-	DE_H32_V32_8BPP,
-	DE_H64_V64_2BPP,
-	DE_H64_V32_4BPP,
-	DE_H32_V64_4BPP
-} de_hwc_mode_e;
-
-typedef enum {
 	DE_N32PIXELS = 0,
 	DE_N64PIXELS
 } de_pixels_num_t;
@@ -74,14 +67,6 @@ typedef enum __SCAL_PS {
 	DE_SCAL_YVYU = 3,
 } __scal_ps_t;
 
-typedef enum __SCAL_INMODE {
-	DE_SCAL_PLANNAR = 0,
-	DE_SCAL_INTER_LEAVED,
-	DE_SCAL_UVCOMBINED,
-	DE_SCAL_PLANNARMB = 4,
-	DE_SCAL_UVCOMBINEDMB = 6
-} __scal_inmode_t;
-
 typedef enum __SCAL_INFMT {
 	DE_SCAL_INYUV444 = 0,
 	DE_SCAL_INYUV422,
@@ -140,11 +125,6 @@ typedef struct layer_input_src {
 	__bool yuv_ch;
 } layer_src_t;
 
-typedef struct hwc_src {
-	__u8 mode;
-	__u32 paddr;
-} de_hwc_src_t;
-
 typedef struct yuv_ch_src {
 	__u8 format;
 	__disp_pixel_mod_t mode;
@@ -162,7 +142,7 @@ typedef struct yuv_ch_src {
 	 * 2: DISP_YCC
 	 * 3: DISP_VXYCC
 	 */
-	__u8 cs_mode;
+	__disp_cs_mode_t cs_mode;
 } de_yuv_ch_src_t;
 
 typedef struct __SCAL_SRC_TYPE {
@@ -185,7 +165,7 @@ typedef struct __SCAL_SRC_TYPE {
 	 * 4: planar mb
 	 * 6: uv combined mb
 	 */
-	__u8 mod;
+	__disp_pixel_mod_t mod;
 
 	/*
 	 * 0: yuv444
@@ -196,7 +176,7 @@ typedef struct __SCAL_SRC_TYPE {
 	 * 5: rgb888
 	 */
 	__scal_infmt_t fmt;
-	__u8 ps;
+	__scal_ps_t ps;
 } __scal_src_type_t;
 
 typedef struct __SCAL_OUT_TYPE {
@@ -374,7 +354,7 @@ __s32 DE_BE_HWC_Set_Pos(__u32 sel, __disp_pos_t *pos);
 __s32 DE_BE_HWC_Get_Pos(__u32 sel, __disp_pos_t *pos);
 __s32 DE_BE_HWC_Set_Palette(__u32 sel, __u32 address, __u32 offset, __u32 size);
 __s32 DE_BE_HWC_Get_Format(void);
-__s32 DE_BE_HWC_Set_Src(__u32 sel, de_hwc_src_t *hwc_pat);
+__s32 DE_BE_HWC_Set_Src(__u32 sel, __disp_hwc_pattern_t *hwc_pat);
 
 __s32 DE_BE_Sprite_Enable(__u32 sel, __bool enable);
 __s32 DE_BE_Sprite_Set_Format(__u32 sel, __u8 pixel_seq, __u8 format);
-- 
1.8.0


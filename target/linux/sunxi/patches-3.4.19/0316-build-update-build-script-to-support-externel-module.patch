From 5419f222f95356e53a23d12cf6d55b98a1d9a54d Mon Sep 17 00:00:00 2001
From: Benn Huang <benn@allwinnertech.com>
Date: Wed, 16 Nov 2011 09:59:45 +0800
Subject: [PATCH 316/944] build: update build script to support externel
 modules

---
 modules/example/Makefile    |  24 ++++++++++
 modules/example/example.c   |  19 ++++++++
 scripts/build_sun4i-lite.sh | 104 +++++++++++++++++++++++++-------------------
 scripts/build_sun4i.sh      | 104 +++++++++++++++++++++++++-------------------
 4 files changed, 161 insertions(+), 90 deletions(-)
 create mode 100644 modules/example/Makefile
 create mode 100644 modules/example/example.c

diff --git a/modules/example/Makefile b/modules/example/Makefile
new file mode 100644
index 0000000..84380c6
--- /dev/null
+++ b/modules/example/Makefile
@@ -0,0 +1,24 @@
+
+################################################################################
+#
+# Common Variables that already set:
+#     LICHEE_KDIR
+#     LICHEE_MOD_DIR
+#     CROSS_COMPILE
+#     ARCH
+#
+#################################################################################
+PWD=$(shell pwd)
+
+obj-m+=example.o
+
+install: build
+	cp example.ko $(LICHEE_MOD_DIR)/
+
+build:
+	@echo $(LICHEE_KDIR)
+	$(MAKE) -C $(LICHEE_KDIR) M=$(PWD)
+
+clean:
+	@rm -rf *.o *.ko .*.cmd *.mod.c *.order *.symvers .tmp_versions *~
+
diff --git a/modules/example/example.c b/modules/example/example.c
new file mode 100644
index 0000000..c8d27e7
--- /dev/null
+++ b/modules/example/example.c
@@ -0,0 +1,19 @@
+#include <linux/kernel.h>
+#include <linux/init.h>
+#include <linux/module.h>
+
+static int __init example_init(void)
+{
+    pr_info("example init\n");
+    return 0;
+}
+module_init(example_init);
+
+static void __exit example_exit(void)
+{
+    pr_info("example exit\n");
+}
+module_exit(example_exit);
+
+MODULE_LICENSE("GPL");
+
diff --git a/scripts/build_sun4i-lite.sh b/scripts/build_sun4i-lite.sh
index 06c5117..19b2ddd 100755
--- a/scripts/build_sun4i-lite.sh
+++ b/scripts/build_sun4i-lite.sh
@@ -27,65 +27,79 @@ CONFIG_CHIP_ID=1123
 
 update_kern_ver()
 {
-    if [ -r include/generated/utsrelease.h ]; then
-        KERNEL_VERSION=`cat include/generated/utsrelease.h |awk -F\" '{print $2}'`
-    fi
-    LICHEE_MOD_DIR=${LICHEE_KDIR}/output/lib/modules/${KERNEL_VERSION}
+	if [ -r include/generated/utsrelease.h ]; then
+		KERNEL_VERSION=`cat include/generated/utsrelease.h |awk -F\" '{print $2}'`
+	fi
+	LICHEE_MOD_DIR=${LICHEE_KDIR}/output/lib/modules/${KERNEL_VERSION}
 }
 
 show_help()
 {
-    printf "Build script for Lichee system\n"
-    printf "  Invalid Option:\n"
-    printf "  help      - show this help\n"
-    printf "  kernel    - build kernel for sun4i\n"
-    printf "  modules   - build external modules for sun4i\n"
-    printf "  clean     - clean all\n"
-    printf "\n"
+	printf "
+Build script for Lichee platform
+
+Invalid Options:
+
+	help         - show this help
+	kernel       - build kernel
+	modules      - build kernel module in modules dir
+	clean        - clean kernel and modules
+
+"
 }
 
 
 build_kernel()
 {
-    if [ ! -e .config ]; then
-	echo -e "\n\t\tUsing default config... ...!\n"
-	cp arch/arm/configs/sun4i_defconfig .config
-
-    fi
+	if [ ! -e .config ]; then
+		echo -e "\n\t\tUsing default config... ...!\n"
+		cp arch/arm/configs/sun4i_defconfig .config
+	fi
 
-    make KALLSYMS_EXTRA_PASS=1 ARCH=${ARCH} CROSS_COMPILE=${CROSS_COMPILE} -j8
-    update_kern_ver
+	make ARCH=${ARCH} CROSS_COMPILE=${CROSS_COMPILE} -j8
+	update_kern_ver
 
-    if [ -d output ]; then
-	rm -rf output
-    fi
-    mkdir -p $LICHEE_MOD_DIR
+	if [ -d output ]; then
+		rm -rf output
+	fi
+	mkdir -p $LICHEE_MOD_DIR
 
-    ${OBJCOPY} -R .note.gnu.build-id -S -O binary vmlinux output/bImage
-    cp -vf arch/arm/boot/[zu]Image output/
-    cp .config output/
+	${OBJCOPY} -R .note.gnu.build-id -S -O binary vmlinux output/bImage
+	cp -vf arch/arm/boot/[zu]Image output/
+	cp .config output/
 
 
-    for file in $(find drivers sound crypto block fs security net -name "*.ko"); do
-	cp $file ${LICHEE_MOD_DIR}
-    done
-    cp -f Module.symvers modules.* ${LICHEE_MOD_DIR}
+	for file in $(find drivers sound crypto block fs security net -name "*.ko"); do
+		cp $file ${LICHEE_MOD_DIR}
+	done
+	cp -f Module.symvers modules.* ${LICHEE_MOD_DIR}
 }
 
 build_modules()
 {
-    echo "Building modules"
+	echo "Building modules"
+
+	if [ ! -f include/generated/utsrelease.h ]; then
+		printf "Please build kernel first!\n"
+		exit 1
+	fi
+
+	update_kern_ver
+
+	make -C modules/example LICHEE_MOD_DIR=${LICHEE_MOD_DIR} LICHEE_KDIR=${LICHEE_KDIR} \
+		CONFIG_CHIP_ID=${CONFIG_CHIP_ID} install
 }
 
 clean_kernel()
 {
-    make clean
-    rm -rf output/*
+	make clean
+	rm -rf output/*
 }
 
 clean_modules()
 {
-    echo "Cleaning modules"
+	echo "Cleaning modules"
+	make -C modules/example LICHEE_MOD_DIR=${LICHEE_MOD_DIR} LICHEE_KDIR=${LICHEE_KDIR} clean
 }
 
 #####################################################################
@@ -99,21 +113,21 @@ export PATH=${LICHEE_ROOT}/buildroot/output/external-toolchain/bin:$PATH
 
 case "$1" in
 kernel)
-    build_kernel
-    ;;
+	build_kernel
+	;;
 modules)
-    build_modules
-    ;;
+	build_modules
+	;;
 clean)
-    clean_kernel
-    clean_modules
-    ;;
+	clean_kernel
+	clean_modules
+	;;
 all)
-    build_kernel
-    build_modules
-    ;;
+	build_kernel
+	build_modules
+	;;
 *)
-    show_help
-    ;;
+	show_help
+	;;
 esac
 
diff --git a/scripts/build_sun4i.sh b/scripts/build_sun4i.sh
index 06c5117..19b2ddd 100755
--- a/scripts/build_sun4i.sh
+++ b/scripts/build_sun4i.sh
@@ -27,65 +27,79 @@ CONFIG_CHIP_ID=1123
 
 update_kern_ver()
 {
-    if [ -r include/generated/utsrelease.h ]; then
-        KERNEL_VERSION=`cat include/generated/utsrelease.h |awk -F\" '{print $2}'`
-    fi
-    LICHEE_MOD_DIR=${LICHEE_KDIR}/output/lib/modules/${KERNEL_VERSION}
+	if [ -r include/generated/utsrelease.h ]; then
+		KERNEL_VERSION=`cat include/generated/utsrelease.h |awk -F\" '{print $2}'`
+	fi
+	LICHEE_MOD_DIR=${LICHEE_KDIR}/output/lib/modules/${KERNEL_VERSION}
 }
 
 show_help()
 {
-    printf "Build script for Lichee system\n"
-    printf "  Invalid Option:\n"
-    printf "  help      - show this help\n"
-    printf "  kernel    - build kernel for sun4i\n"
-    printf "  modules   - build external modules for sun4i\n"
-    printf "  clean     - clean all\n"
-    printf "\n"
+	printf "
+Build script for Lichee platform
+
+Invalid Options:
+
+	help         - show this help
+	kernel       - build kernel
+	modules      - build kernel module in modules dir
+	clean        - clean kernel and modules
+
+"
 }
 
 
 build_kernel()
 {
-    if [ ! -e .config ]; then
-	echo -e "\n\t\tUsing default config... ...!\n"
-	cp arch/arm/configs/sun4i_defconfig .config
-
-    fi
+	if [ ! -e .config ]; then
+		echo -e "\n\t\tUsing default config... ...!\n"
+		cp arch/arm/configs/sun4i_defconfig .config
+	fi
 
-    make KALLSYMS_EXTRA_PASS=1 ARCH=${ARCH} CROSS_COMPILE=${CROSS_COMPILE} -j8
-    update_kern_ver
+	make ARCH=${ARCH} CROSS_COMPILE=${CROSS_COMPILE} -j8
+	update_kern_ver
 
-    if [ -d output ]; then
-	rm -rf output
-    fi
-    mkdir -p $LICHEE_MOD_DIR
+	if [ -d output ]; then
+		rm -rf output
+	fi
+	mkdir -p $LICHEE_MOD_DIR
 
-    ${OBJCOPY} -R .note.gnu.build-id -S -O binary vmlinux output/bImage
-    cp -vf arch/arm/boot/[zu]Image output/
-    cp .config output/
+	${OBJCOPY} -R .note.gnu.build-id -S -O binary vmlinux output/bImage
+	cp -vf arch/arm/boot/[zu]Image output/
+	cp .config output/
 
 
-    for file in $(find drivers sound crypto block fs security net -name "*.ko"); do
-	cp $file ${LICHEE_MOD_DIR}
-    done
-    cp -f Module.symvers modules.* ${LICHEE_MOD_DIR}
+	for file in $(find drivers sound crypto block fs security net -name "*.ko"); do
+		cp $file ${LICHEE_MOD_DIR}
+	done
+	cp -f Module.symvers modules.* ${LICHEE_MOD_DIR}
 }
 
 build_modules()
 {
-    echo "Building modules"
+	echo "Building modules"
+
+	if [ ! -f include/generated/utsrelease.h ]; then
+		printf "Please build kernel first!\n"
+		exit 1
+	fi
+
+	update_kern_ver
+
+	make -C modules/example LICHEE_MOD_DIR=${LICHEE_MOD_DIR} LICHEE_KDIR=${LICHEE_KDIR} \
+		CONFIG_CHIP_ID=${CONFIG_CHIP_ID} install
 }
 
 clean_kernel()
 {
-    make clean
-    rm -rf output/*
+	make clean
+	rm -rf output/*
 }
 
 clean_modules()
 {
-    echo "Cleaning modules"
+	echo "Cleaning modules"
+	make -C modules/example LICHEE_MOD_DIR=${LICHEE_MOD_DIR} LICHEE_KDIR=${LICHEE_KDIR} clean
 }
 
 #####################################################################
@@ -99,21 +113,21 @@ export PATH=${LICHEE_ROOT}/buildroot/output/external-toolchain/bin:$PATH
 
 case "$1" in
 kernel)
-    build_kernel
-    ;;
+	build_kernel
+	;;
 modules)
-    build_modules
-    ;;
+	build_modules
+	;;
 clean)
-    clean_kernel
-    clean_modules
-    ;;
+	clean_kernel
+	clean_modules
+	;;
 all)
-    build_kernel
-    build_modules
-    ;;
+	build_kernel
+	build_modules
+	;;
 *)
-    show_help
-    ;;
+	show_help
+	;;
 esac
 
-- 
1.8.0

